# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: query_root
    mutation: mutation_root
    subscription: subscription_root
}

"columns and relationships of \"dbo.AccountTypes\""
type dbo_AccountTypes {
    "An array relationship"
    Accounts(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): [dbo_Accounts!]!
    "An aggregated array relationship"
    Accounts_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): dbo_Accounts_aggregate!
    AutoGenerateAccount: Boolean!
    CreatedUtcDateTime: timestamp!
    "An object relationship"
    Currecy: dbo_Currecies!
    CurrencyUid: uuid!
    IsDeleted: Boolean!
    MaxBalance: Int!
    ModifiedUtcDateTime: timestamp
    Name: String!
    Uid: uuid!
}

"aggregated selection of \"dbo.AccountTypes\""
type dbo_AccountTypes_aggregate {
    aggregate: dbo_AccountTypes_aggregate_fields
    nodes: [dbo_AccountTypes!]!
}

"aggregate fields of \"dbo.AccountTypes\""
type dbo_AccountTypes_aggregate_fields {
    avg: dbo_AccountTypes_avg_fields
    count(columns: [dbo_AccountTypes_select_column!], distinct: Boolean): Int
    max: dbo_AccountTypes_max_fields
    min: dbo_AccountTypes_min_fields
    stddev: dbo_AccountTypes_stddev_fields
    stddev_pop: dbo_AccountTypes_stddev_pop_fields
    stddev_samp: dbo_AccountTypes_stddev_samp_fields
    sum: dbo_AccountTypes_sum_fields
    var_pop: dbo_AccountTypes_var_pop_fields
    var_samp: dbo_AccountTypes_var_samp_fields
    variance: dbo_AccountTypes_variance_fields
}

"aggregate avg on columns"
type dbo_AccountTypes_avg_fields {
    MaxBalance: Float
}

"aggregate max on columns"
type dbo_AccountTypes_max_fields {
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    MaxBalance: Int
    ModifiedUtcDateTime: timestamp
    Name: String
    Uid: uuid
}

"aggregate min on columns"
type dbo_AccountTypes_min_fields {
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    MaxBalance: Int
    ModifiedUtcDateTime: timestamp
    Name: String
    Uid: uuid
}

"response of any mutation on the table \"dbo.AccountTypes\""
type dbo_AccountTypes_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_AccountTypes!]!
}

"aggregate stddev on columns"
type dbo_AccountTypes_stddev_fields {
    MaxBalance: Float
}

"aggregate stddev_pop on columns"
type dbo_AccountTypes_stddev_pop_fields {
    MaxBalance: Float
}

"aggregate stddev_samp on columns"
type dbo_AccountTypes_stddev_samp_fields {
    MaxBalance: Float
}

"aggregate sum on columns"
type dbo_AccountTypes_sum_fields {
    MaxBalance: Int
}

"aggregate var_pop on columns"
type dbo_AccountTypes_var_pop_fields {
    MaxBalance: Float
}

"aggregate var_samp on columns"
type dbo_AccountTypes_var_samp_fields {
    MaxBalance: Float
}

"aggregate variance on columns"
type dbo_AccountTypes_variance_fields {
    MaxBalance: Float
}

"columns and relationships of \"dbo.Accounts\""
type dbo_Accounts {
    "An object relationship"
    AccountType: dbo_AccountTypes!
    Balance: Int!
    CreatedUtcDateTime: timestamp!
    "An array relationship"
    InternationalMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): [dbo_InternationalMoneyTransferTransactions!]!
    "An aggregated array relationship"
    InternationalMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): dbo_InternationalMoneyTransferTransactions_aggregate!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Status: smallint!
    "An array relationship"
    Transactions(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): [dbo_Transactions!]!
    "An aggregated array relationship"
    Transactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): dbo_Transactions_aggregate!
    TypeUid: uuid!
    Uid: uuid!
    "An object relationship"
    User: dbo_Users!
    "An array relationship"
    UserTransactions(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): [dbo_UserTransactions!]!
    "An aggregated array relationship"
    UserTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): dbo_UserTransactions_aggregate!
    UserUid: uuid!
    "An array relationship"
    ZamZamMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): [dbo_ZamZamMoneyTransferTransactions!]!
    "An aggregated array relationship"
    ZamZamMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): dbo_ZamZamMoneyTransferTransactions_aggregate!
    "An array relationship"
    internationalMoneyTransferTransactionsBySenderaccountuid(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): [dbo_InternationalMoneyTransferTransactions!]!
    "An aggregated array relationship"
    internationalMoneyTransferTransactionsBySenderaccountuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): dbo_InternationalMoneyTransferTransactions_aggregate!
    "An array relationship"
    transactionsBySenderaccountuid(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): [dbo_Transactions!]!
    "An aggregated array relationship"
    transactionsBySenderaccountuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): dbo_Transactions_aggregate!
    "An array relationship"
    zamZamMoneyTransferTransactionsBySenderaccountuid(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): [dbo_ZamZamMoneyTransferTransactions!]!
    "An aggregated array relationship"
    zamZamMoneyTransferTransactionsBySenderaccountuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): dbo_ZamZamMoneyTransferTransactions_aggregate!
}

"aggregated selection of \"dbo.Accounts\""
type dbo_Accounts_aggregate {
    aggregate: dbo_Accounts_aggregate_fields
    nodes: [dbo_Accounts!]!
}

"aggregate fields of \"dbo.Accounts\""
type dbo_Accounts_aggregate_fields {
    avg: dbo_Accounts_avg_fields
    count(columns: [dbo_Accounts_select_column!], distinct: Boolean): Int
    max: dbo_Accounts_max_fields
    min: dbo_Accounts_min_fields
    stddev: dbo_Accounts_stddev_fields
    stddev_pop: dbo_Accounts_stddev_pop_fields
    stddev_samp: dbo_Accounts_stddev_samp_fields
    sum: dbo_Accounts_sum_fields
    var_pop: dbo_Accounts_var_pop_fields
    var_samp: dbo_Accounts_var_samp_fields
    variance: dbo_Accounts_variance_fields
}

"aggregate avg on columns"
type dbo_Accounts_avg_fields {
    Balance: Float
    Status: Float
}

"aggregate max on columns"
type dbo_Accounts_max_fields {
    Balance: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Status: smallint
    TypeUid: uuid
    Uid: uuid
    UserUid: uuid
}

"aggregate min on columns"
type dbo_Accounts_min_fields {
    Balance: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Status: smallint
    TypeUid: uuid
    Uid: uuid
    UserUid: uuid
}

"response of any mutation on the table \"dbo.Accounts\""
type dbo_Accounts_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Accounts!]!
}

"aggregate stddev on columns"
type dbo_Accounts_stddev_fields {
    Balance: Float
    Status: Float
}

"aggregate stddev_pop on columns"
type dbo_Accounts_stddev_pop_fields {
    Balance: Float
    Status: Float
}

"aggregate stddev_samp on columns"
type dbo_Accounts_stddev_samp_fields {
    Balance: Float
    Status: Float
}

"aggregate sum on columns"
type dbo_Accounts_sum_fields {
    Balance: Int
    Status: smallint
}

"aggregate var_pop on columns"
type dbo_Accounts_var_pop_fields {
    Balance: Float
    Status: Float
}

"aggregate var_samp on columns"
type dbo_Accounts_var_samp_fields {
    Balance: Float
    Status: Float
}

"aggregate variance on columns"
type dbo_Accounts_variance_fields {
    Balance: Float
    Status: Float
}

"columns and relationships of \"dbo.Best2PayOperations\""
type dbo_Best2PayOperations {
    Best2Pay: Int!
    Best2PayOperationId: Int!
    Best2PayOrderId: Int!
    "An object relationship"
    Operation: dbo_Operations!
    OperationUid: uuid!
}

"aggregated selection of \"dbo.Best2PayOperations\""
type dbo_Best2PayOperations_aggregate {
    aggregate: dbo_Best2PayOperations_aggregate_fields
    nodes: [dbo_Best2PayOperations!]!
}

"aggregate fields of \"dbo.Best2PayOperations\""
type dbo_Best2PayOperations_aggregate_fields {
    avg: dbo_Best2PayOperations_avg_fields
    count(columns: [dbo_Best2PayOperations_select_column!], distinct: Boolean): Int
    max: dbo_Best2PayOperations_max_fields
    min: dbo_Best2PayOperations_min_fields
    stddev: dbo_Best2PayOperations_stddev_fields
    stddev_pop: dbo_Best2PayOperations_stddev_pop_fields
    stddev_samp: dbo_Best2PayOperations_stddev_samp_fields
    sum: dbo_Best2PayOperations_sum_fields
    var_pop: dbo_Best2PayOperations_var_pop_fields
    var_samp: dbo_Best2PayOperations_var_samp_fields
    variance: dbo_Best2PayOperations_variance_fields
}

"aggregate avg on columns"
type dbo_Best2PayOperations_avg_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate max on columns"
type dbo_Best2PayOperations_max_fields {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
    OperationUid: uuid
}

"aggregate min on columns"
type dbo_Best2PayOperations_min_fields {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
    OperationUid: uuid
}

"response of any mutation on the table \"dbo.Best2PayOperations\""
type dbo_Best2PayOperations_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Best2PayOperations!]!
}

"aggregate stddev on columns"
type dbo_Best2PayOperations_stddev_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate stddev_pop on columns"
type dbo_Best2PayOperations_stddev_pop_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate stddev_samp on columns"
type dbo_Best2PayOperations_stddev_samp_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate sum on columns"
type dbo_Best2PayOperations_sum_fields {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
}

"aggregate var_pop on columns"
type dbo_Best2PayOperations_var_pop_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate var_samp on columns"
type dbo_Best2PayOperations_var_samp_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"aggregate variance on columns"
type dbo_Best2PayOperations_variance_fields {
    Best2Pay: Float
    Best2PayOperationId: Float
    Best2PayOrderId: Float
}

"columns and relationships of \"dbo.Clients\""
type dbo_Clients {
    AllowedOrigin: String!
    ApplicationType: smallint!
    CreatedUtcDateTime: timestamp!
    IsActive: Boolean!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Name: String!
    "An array relationship"
    Operations(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "An aggregated array relationship"
    Operations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    "An array relationship"
    PaymentHistories(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): [dbo_PaymentHistory!]!
    "An aggregated array relationship"
    PaymentHistories_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): dbo_PaymentHistory_aggregate!
    RefreshTokenLifeTime: Int!
    "An array relationship"
    RefreshTokens(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): [dbo_RefreshTokens!]!
    "An aggregated array relationship"
    RefreshTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): dbo_RefreshTokens_aggregate!
    SecretHash: String!
    SecretSalt: String!
    Uid: uuid!
}

"aggregated selection of \"dbo.Clients\""
type dbo_Clients_aggregate {
    aggregate: dbo_Clients_aggregate_fields
    nodes: [dbo_Clients!]!
}

"aggregate fields of \"dbo.Clients\""
type dbo_Clients_aggregate_fields {
    avg: dbo_Clients_avg_fields
    count(columns: [dbo_Clients_select_column!], distinct: Boolean): Int
    max: dbo_Clients_max_fields
    min: dbo_Clients_min_fields
    stddev: dbo_Clients_stddev_fields
    stddev_pop: dbo_Clients_stddev_pop_fields
    stddev_samp: dbo_Clients_stddev_samp_fields
    sum: dbo_Clients_sum_fields
    var_pop: dbo_Clients_var_pop_fields
    var_samp: dbo_Clients_var_samp_fields
    variance: dbo_Clients_variance_fields
}

"aggregate avg on columns"
type dbo_Clients_avg_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate max on columns"
type dbo_Clients_max_fields {
    AllowedOrigin: String
    ApplicationType: smallint
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Name: String
    RefreshTokenLifeTime: Int
    SecretHash: String
    SecretSalt: String
    Uid: uuid
}

"aggregate min on columns"
type dbo_Clients_min_fields {
    AllowedOrigin: String
    ApplicationType: smallint
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Name: String
    RefreshTokenLifeTime: Int
    SecretHash: String
    SecretSalt: String
    Uid: uuid
}

"response of any mutation on the table \"dbo.Clients\""
type dbo_Clients_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Clients!]!
}

"aggregate stddev on columns"
type dbo_Clients_stddev_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate stddev_pop on columns"
type dbo_Clients_stddev_pop_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate stddev_samp on columns"
type dbo_Clients_stddev_samp_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate sum on columns"
type dbo_Clients_sum_fields {
    ApplicationType: smallint
    RefreshTokenLifeTime: Int
}

"aggregate var_pop on columns"
type dbo_Clients_var_pop_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate var_samp on columns"
type dbo_Clients_var_samp_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"aggregate variance on columns"
type dbo_Clients_variance_fields {
    ApplicationType: Float
    RefreshTokenLifeTime: Float
}

"columns and relationships of \"dbo.Countries\""
type dbo_Countries {
    Alpha2Code: String!
    Alpha3Code: String!
    IsActive: Boolean!
    "An array relationship"
    Registrations(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): [dbo_Registrations!]!
    "An aggregated array relationship"
    Registrations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): dbo_Registrations_aggregate!
    TelephoneCode: String
    Uid: uuid!
}

"aggregated selection of \"dbo.Countries\""
type dbo_Countries_aggregate {
    aggregate: dbo_Countries_aggregate_fields
    nodes: [dbo_Countries!]!
}

"aggregate fields of \"dbo.Countries\""
type dbo_Countries_aggregate_fields {
    count(columns: [dbo_Countries_select_column!], distinct: Boolean): Int
    max: dbo_Countries_max_fields
    min: dbo_Countries_min_fields
}

"aggregate max on columns"
type dbo_Countries_max_fields {
    Alpha2Code: String
    Alpha3Code: String
    TelephoneCode: String
    Uid: uuid
}

"aggregate min on columns"
type dbo_Countries_min_fields {
    Alpha2Code: String
    Alpha3Code: String
    TelephoneCode: String
    Uid: uuid
}

"response of any mutation on the table \"dbo.Countries\""
type dbo_Countries_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Countries!]!
}

"columns and relationships of \"dbo.Currecies\""
type dbo_Currecies {
    "An array relationship"
    AccountTypes(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): [dbo_AccountTypes!]!
    "An aggregated array relationship"
    AccountTypes_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): dbo_AccountTypes_aggregate!
    Alpha3Code: String!
    Alpha3CodeNumeric: String!
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An array relationship"
    Operations(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "An aggregated array relationship"
    Operations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    "An array relationship"
    PaymentHistories(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): [dbo_PaymentHistory!]!
    "An aggregated array relationship"
    PaymentHistories_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): dbo_PaymentHistory_aggregate!
    Uid: uuid!
    "An array relationship"
    operationsByWithdrawcurrencyuid(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "An aggregated array relationship"
    operationsByWithdrawcurrencyuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
}

"aggregated selection of \"dbo.Currecies\""
type dbo_Currecies_aggregate {
    aggregate: dbo_Currecies_aggregate_fields
    nodes: [dbo_Currecies!]!
}

"aggregate fields of \"dbo.Currecies\""
type dbo_Currecies_aggregate_fields {
    count(columns: [dbo_Currecies_select_column!], distinct: Boolean): Int
    max: dbo_Currecies_max_fields
    min: dbo_Currecies_min_fields
}

"aggregate max on columns"
type dbo_Currecies_max_fields {
    Alpha3Code: String
    Alpha3CodeNumeric: String
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"aggregate min on columns"
type dbo_Currecies_min_fields {
    Alpha3Code: String
    Alpha3CodeNumeric: String
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"response of any mutation on the table \"dbo.Currecies\""
type dbo_Currecies_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Currecies!]!
}

"columns and relationships of \"dbo.CurrentCommissionPayments\""
type dbo_CurrentCommissionPayments {
    AcceptedCurrency: String
    Amount: Int
    CreatedUtcDateTime: timestamp!
    CurrencyAmount: Int
    ErrorMessage: String
    GetCommissionRequestType: smallint
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    PaymentId: bigint!
    Rate: Int
    RawRate: numeric
    UserUid: uuid
    WithdrawCountryCode: String
    WithdrawCurrency: String
}

"aggregated selection of \"dbo.CurrentCommissionPayments\""
type dbo_CurrentCommissionPayments_aggregate {
    aggregate: dbo_CurrentCommissionPayments_aggregate_fields
    nodes: [dbo_CurrentCommissionPayments!]!
}

"aggregate fields of \"dbo.CurrentCommissionPayments\""
type dbo_CurrentCommissionPayments_aggregate_fields {
    avg: dbo_CurrentCommissionPayments_avg_fields
    count(columns: [dbo_CurrentCommissionPayments_select_column!], distinct: Boolean): Int
    max: dbo_CurrentCommissionPayments_max_fields
    min: dbo_CurrentCommissionPayments_min_fields
    stddev: dbo_CurrentCommissionPayments_stddev_fields
    stddev_pop: dbo_CurrentCommissionPayments_stddev_pop_fields
    stddev_samp: dbo_CurrentCommissionPayments_stddev_samp_fields
    sum: dbo_CurrentCommissionPayments_sum_fields
    var_pop: dbo_CurrentCommissionPayments_var_pop_fields
    var_samp: dbo_CurrentCommissionPayments_var_samp_fields
    variance: dbo_CurrentCommissionPayments_variance_fields
}

"aggregate avg on columns"
type dbo_CurrentCommissionPayments_avg_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate max on columns"
type dbo_CurrentCommissionPayments_max_fields {
    AcceptedCurrency: String
    Amount: Int
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    ErrorMessage: String
    GetCommissionRequestType: smallint
    ModifiedUtcDateTime: timestamp
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
    UserUid: uuid
    WithdrawCountryCode: String
    WithdrawCurrency: String
}

"aggregate min on columns"
type dbo_CurrentCommissionPayments_min_fields {
    AcceptedCurrency: String
    Amount: Int
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    ErrorMessage: String
    GetCommissionRequestType: smallint
    ModifiedUtcDateTime: timestamp
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
    UserUid: uuid
    WithdrawCountryCode: String
    WithdrawCurrency: String
}

"response of any mutation on the table \"dbo.CurrentCommissionPayments\""
type dbo_CurrentCommissionPayments_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_CurrentCommissionPayments!]!
}

"aggregate stddev on columns"
type dbo_CurrentCommissionPayments_stddev_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate stddev_pop on columns"
type dbo_CurrentCommissionPayments_stddev_pop_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate stddev_samp on columns"
type dbo_CurrentCommissionPayments_stddev_samp_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate sum on columns"
type dbo_CurrentCommissionPayments_sum_fields {
    Amount: Int
    CurrencyAmount: Int
    GetCommissionRequestType: smallint
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
}

"aggregate var_pop on columns"
type dbo_CurrentCommissionPayments_var_pop_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate var_samp on columns"
type dbo_CurrentCommissionPayments_var_samp_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"aggregate variance on columns"
type dbo_CurrentCommissionPayments_variance_fields {
    Amount: Float
    CurrencyAmount: Float
    GetCommissionRequestType: Float
    PaymentId: Float
    Rate: Float
    RawRate: Float
}

"columns and relationships of \"dbo.FirebaseTokens\""
type dbo_FirebaseTokens {
    Token: String!
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
}

"aggregated selection of \"dbo.FirebaseTokens\""
type dbo_FirebaseTokens_aggregate {
    aggregate: dbo_FirebaseTokens_aggregate_fields
    nodes: [dbo_FirebaseTokens!]!
}

"aggregate fields of \"dbo.FirebaseTokens\""
type dbo_FirebaseTokens_aggregate_fields {
    count(columns: [dbo_FirebaseTokens_select_column!], distinct: Boolean): Int
    max: dbo_FirebaseTokens_max_fields
    min: dbo_FirebaseTokens_min_fields
}

"aggregate max on columns"
type dbo_FirebaseTokens_max_fields {
    Token: String
    UserUid: uuid
}

"aggregate min on columns"
type dbo_FirebaseTokens_min_fields {
    Token: String
    UserUid: uuid
}

"response of any mutation on the table \"dbo.FirebaseTokens\""
type dbo_FirebaseTokens_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_FirebaseTokens!]!
}

"columns and relationships of \"dbo.InternationalMoneyTransferTransactions\""
type dbo_InternationalMoneyTransferTransactions {
    "An object relationship"
    Account: dbo_Accounts!
    Amount: Int!
    CreatedUtcDateTime: timestamp!
    Description: String
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid!
    SenderAccountUid: uuid!
    Status: Int!
    Uid: uuid!
    "An object relationship"
    accountByRecipientaccountuid: dbo_Accounts!
}

"aggregated selection of \"dbo.InternationalMoneyTransferTransactions\""
type dbo_InternationalMoneyTransferTransactions_aggregate {
    aggregate: dbo_InternationalMoneyTransferTransactions_aggregate_fields
    nodes: [dbo_InternationalMoneyTransferTransactions!]!
}

"aggregate fields of \"dbo.InternationalMoneyTransferTransactions\""
type dbo_InternationalMoneyTransferTransactions_aggregate_fields {
    avg: dbo_InternationalMoneyTransferTransactions_avg_fields
    count(columns: [dbo_InternationalMoneyTransferTransactions_select_column!], distinct: Boolean): Int
    max: dbo_InternationalMoneyTransferTransactions_max_fields
    min: dbo_InternationalMoneyTransferTransactions_min_fields
    stddev: dbo_InternationalMoneyTransferTransactions_stddev_fields
    stddev_pop: dbo_InternationalMoneyTransferTransactions_stddev_pop_fields
    stddev_samp: dbo_InternationalMoneyTransferTransactions_stddev_samp_fields
    sum: dbo_InternationalMoneyTransferTransactions_sum_fields
    var_pop: dbo_InternationalMoneyTransferTransactions_var_pop_fields
    var_samp: dbo_InternationalMoneyTransferTransactions_var_samp_fields
    variance: dbo_InternationalMoneyTransferTransactions_variance_fields
}

"aggregate avg on columns"
type dbo_InternationalMoneyTransferTransactions_avg_fields {
    Amount: Float
    Status: Float
}

"aggregate max on columns"
type dbo_InternationalMoneyTransferTransactions_max_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"aggregate min on columns"
type dbo_InternationalMoneyTransferTransactions_min_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"response of any mutation on the table \"dbo.InternationalMoneyTransferTransactions\""
type dbo_InternationalMoneyTransferTransactions_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_InternationalMoneyTransferTransactions!]!
}

"aggregate stddev on columns"
type dbo_InternationalMoneyTransferTransactions_stddev_fields {
    Amount: Float
    Status: Float
}

"aggregate stddev_pop on columns"
type dbo_InternationalMoneyTransferTransactions_stddev_pop_fields {
    Amount: Float
    Status: Float
}

"aggregate stddev_samp on columns"
type dbo_InternationalMoneyTransferTransactions_stddev_samp_fields {
    Amount: Float
    Status: Float
}

"aggregate sum on columns"
type dbo_InternationalMoneyTransferTransactions_sum_fields {
    Amount: Int
    Status: Int
}

"aggregate var_pop on columns"
type dbo_InternationalMoneyTransferTransactions_var_pop_fields {
    Amount: Float
    Status: Float
}

"aggregate var_samp on columns"
type dbo_InternationalMoneyTransferTransactions_var_samp_fields {
    Amount: Float
    Status: Float
}

"aggregate variance on columns"
type dbo_InternationalMoneyTransferTransactions_variance_fields {
    Amount: Float
    Status: Float
}

"columns and relationships of \"dbo.Limits\""
type dbo_Limits {
    CreatedUtcDateTime: timestamp!
    Direction: Int!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Period: Int!
    TotalAmount: Int!
    Uid: uuid!
}

"aggregated selection of \"dbo.Limits\""
type dbo_Limits_aggregate {
    aggregate: dbo_Limits_aggregate_fields
    nodes: [dbo_Limits!]!
}

"aggregate fields of \"dbo.Limits\""
type dbo_Limits_aggregate_fields {
    avg: dbo_Limits_avg_fields
    count(columns: [dbo_Limits_select_column!], distinct: Boolean): Int
    max: dbo_Limits_max_fields
    min: dbo_Limits_min_fields
    stddev: dbo_Limits_stddev_fields
    stddev_pop: dbo_Limits_stddev_pop_fields
    stddev_samp: dbo_Limits_stddev_samp_fields
    sum: dbo_Limits_sum_fields
    var_pop: dbo_Limits_var_pop_fields
    var_samp: dbo_Limits_var_samp_fields
    variance: dbo_Limits_variance_fields
}

"aggregate avg on columns"
type dbo_Limits_avg_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate max on columns"
type dbo_Limits_max_fields {
    CreatedUtcDateTime: timestamp
    Direction: Int
    ModifiedUtcDateTime: timestamp
    Period: Int
    TotalAmount: Int
    Uid: uuid
}

"aggregate min on columns"
type dbo_Limits_min_fields {
    CreatedUtcDateTime: timestamp
    Direction: Int
    ModifiedUtcDateTime: timestamp
    Period: Int
    TotalAmount: Int
    Uid: uuid
}

"response of any mutation on the table \"dbo.Limits\""
type dbo_Limits_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Limits!]!
}

"aggregate stddev on columns"
type dbo_Limits_stddev_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate stddev_pop on columns"
type dbo_Limits_stddev_pop_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate stddev_samp on columns"
type dbo_Limits_stddev_samp_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate sum on columns"
type dbo_Limits_sum_fields {
    Direction: Int
    Period: Int
    TotalAmount: Int
}

"aggregate var_pop on columns"
type dbo_Limits_var_pop_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate var_samp on columns"
type dbo_Limits_var_samp_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"aggregate variance on columns"
type dbo_Limits_variance_fields {
    Direction: Float
    Period: Float
    TotalAmount: Float
}

"columns and relationships of \"dbo.Managers\""
type dbo_Managers {
    FirstName: String
    Id: Int!
    LastName: String
    "An array relationship"
    Registrations(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): [dbo_Registrations!]!
    "An aggregated array relationship"
    Registrations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): dbo_Registrations_aggregate!
}

"aggregated selection of \"dbo.Managers\""
type dbo_Managers_aggregate {
    aggregate: dbo_Managers_aggregate_fields
    nodes: [dbo_Managers!]!
}

"aggregate fields of \"dbo.Managers\""
type dbo_Managers_aggregate_fields {
    avg: dbo_Managers_avg_fields
    count(columns: [dbo_Managers_select_column!], distinct: Boolean): Int
    max: dbo_Managers_max_fields
    min: dbo_Managers_min_fields
    stddev: dbo_Managers_stddev_fields
    stddev_pop: dbo_Managers_stddev_pop_fields
    stddev_samp: dbo_Managers_stddev_samp_fields
    sum: dbo_Managers_sum_fields
    var_pop: dbo_Managers_var_pop_fields
    var_samp: dbo_Managers_var_samp_fields
    variance: dbo_Managers_variance_fields
}

"aggregate avg on columns"
type dbo_Managers_avg_fields {
    Id: Float
}

"aggregate max on columns"
type dbo_Managers_max_fields {
    FirstName: String
    Id: Int
    LastName: String
}

"aggregate min on columns"
type dbo_Managers_min_fields {
    FirstName: String
    Id: Int
    LastName: String
}

"response of any mutation on the table \"dbo.Managers\""
type dbo_Managers_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Managers!]!
}

"aggregate stddev on columns"
type dbo_Managers_stddev_fields {
    Id: Float
}

"aggregate stddev_pop on columns"
type dbo_Managers_stddev_pop_fields {
    Id: Float
}

"aggregate stddev_samp on columns"
type dbo_Managers_stddev_samp_fields {
    Id: Float
}

"aggregate sum on columns"
type dbo_Managers_sum_fields {
    Id: Int
}

"aggregate var_pop on columns"
type dbo_Managers_var_pop_fields {
    Id: Float
}

"aggregate var_samp on columns"
type dbo_Managers_var_samp_fields {
    Id: Float
}

"aggregate variance on columns"
type dbo_Managers_variance_fields {
    Id: Float
}

"columns and relationships of \"dbo.MoneyOperationTypes\""
type dbo_MoneyOperationTypes {
    Type: String!
    Uid: uuid!
    "An array relationship"
    UserTransactions(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): [dbo_UserTransactions!]!
    "An aggregated array relationship"
    UserTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): dbo_UserTransactions_aggregate!
}

"aggregated selection of \"dbo.MoneyOperationTypes\""
type dbo_MoneyOperationTypes_aggregate {
    aggregate: dbo_MoneyOperationTypes_aggregate_fields
    nodes: [dbo_MoneyOperationTypes!]!
}

"aggregate fields of \"dbo.MoneyOperationTypes\""
type dbo_MoneyOperationTypes_aggregate_fields {
    count(columns: [dbo_MoneyOperationTypes_select_column!], distinct: Boolean): Int
    max: dbo_MoneyOperationTypes_max_fields
    min: dbo_MoneyOperationTypes_min_fields
}

"aggregate max on columns"
type dbo_MoneyOperationTypes_max_fields {
    Type: String
    Uid: uuid
}

"aggregate min on columns"
type dbo_MoneyOperationTypes_min_fields {
    Type: String
    Uid: uuid
}

"response of any mutation on the table \"dbo.MoneyOperationTypes\""
type dbo_MoneyOperationTypes_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_MoneyOperationTypes!]!
}

"columns and relationships of \"dbo.OperationEntityShortLinkEntities\""
type dbo_OperationEntityShortLinkEntities {
    "An object relationship"
    Operation: dbo_Operations!
    OperationEntity_Uid: uuid!
    "An object relationship"
    ShortLink: dbo_ShortLinks!
    ShortLinkEntity_Uid: uuid!
}

"aggregated selection of \"dbo.OperationEntityShortLinkEntities\""
type dbo_OperationEntityShortLinkEntities_aggregate {
    aggregate: dbo_OperationEntityShortLinkEntities_aggregate_fields
    nodes: [dbo_OperationEntityShortLinkEntities!]!
}

"aggregate fields of \"dbo.OperationEntityShortLinkEntities\""
type dbo_OperationEntityShortLinkEntities_aggregate_fields {
    count(columns: [dbo_OperationEntityShortLinkEntities_select_column!], distinct: Boolean): Int
    max: dbo_OperationEntityShortLinkEntities_max_fields
    min: dbo_OperationEntityShortLinkEntities_min_fields
}

"aggregate max on columns"
type dbo_OperationEntityShortLinkEntities_max_fields {
    OperationEntity_Uid: uuid
    ShortLinkEntity_Uid: uuid
}

"aggregate min on columns"
type dbo_OperationEntityShortLinkEntities_min_fields {
    OperationEntity_Uid: uuid
    ShortLinkEntity_Uid: uuid
}

"response of any mutation on the table \"dbo.OperationEntityShortLinkEntities\""
type dbo_OperationEntityShortLinkEntities_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_OperationEntityShortLinkEntities!]!
}

"columns and relationships of \"dbo.Operations\""
type dbo_Operations {
    AcceptedCurrencyUid: uuid!
    Amount: Int!
    "An array relationship"
    Best2PayOperations(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): [dbo_Best2PayOperations!]!
    "An aggregated array relationship"
    Best2PayOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): dbo_Best2PayOperations_aggregate!
    "An object relationship"
    Client: dbo_Clients
    ClientUid: uuid
    CountryCode: String
    CreatedUtcDateTime: timestamp!
    "An object relationship"
    Currecy: dbo_Currecies!
    CurrencyAmount: Int!
    FeeAmount: Int!
    FeeProcent: numeric!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Number: String
    "An array relationship"
    OperationEntityShortLinkEntities(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): [dbo_OperationEntityShortLinkEntities!]!
    "An aggregated array relationship"
    OperationEntityShortLinkEntities_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): dbo_OperationEntityShortLinkEntities_aggregate!
    OperationStatus: Int!
    OperationType: Int!
    OurFeeAmount: Int!
    PaymentFeeAmount: Int!
    Rate: numeric!
    Request: String
    "An array relationship"
    Transactions(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): [dbo_Transactions!]!
    "An aggregated array relationship"
    Transactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): dbo_Transactions_aggregate!
    Uid: uuid!
    UniqueNumber: Int!
    "An array relationship"
    UnistreamOperations(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): [dbo_UnistreamOperations!]!
    "An aggregated array relationship"
    UnistreamOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): dbo_UnistreamOperations_aggregate!
    "An object relationship"
    User: dbo_Users
    WhoUid: uuid!
    WhomUid: uuid
    WithdrawCurrencyUid: uuid!
    "An object relationship"
    currecyByAcceptedcurrencyuid: dbo_Currecies!
    "An object relationship"
    userByWhouid: dbo_Users!
}

"aggregated selection of \"dbo.Operations\""
type dbo_Operations_aggregate {
    aggregate: dbo_Operations_aggregate_fields
    nodes: [dbo_Operations!]!
}

"aggregate fields of \"dbo.Operations\""
type dbo_Operations_aggregate_fields {
    avg: dbo_Operations_avg_fields
    count(columns: [dbo_Operations_select_column!], distinct: Boolean): Int
    max: dbo_Operations_max_fields
    min: dbo_Operations_min_fields
    stddev: dbo_Operations_stddev_fields
    stddev_pop: dbo_Operations_stddev_pop_fields
    stddev_samp: dbo_Operations_stddev_samp_fields
    sum: dbo_Operations_sum_fields
    var_pop: dbo_Operations_var_pop_fields
    var_samp: dbo_Operations_var_samp_fields
    variance: dbo_Operations_variance_fields
}

"aggregate avg on columns"
type dbo_Operations_avg_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate max on columns"
type dbo_Operations_max_fields {
    AcceptedCurrencyUid: uuid
    Amount: Int
    ClientUid: uuid
    CountryCode: String
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    ModifiedUtcDateTime: timestamp
    Number: String
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    Request: String
    Uid: uuid
    UniqueNumber: Int
    WhoUid: uuid
    WhomUid: uuid
    WithdrawCurrencyUid: uuid
}

"aggregate min on columns"
type dbo_Operations_min_fields {
    AcceptedCurrencyUid: uuid
    Amount: Int
    ClientUid: uuid
    CountryCode: String
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    ModifiedUtcDateTime: timestamp
    Number: String
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    Request: String
    Uid: uuid
    UniqueNumber: Int
    WhoUid: uuid
    WhomUid: uuid
    WithdrawCurrencyUid: uuid
}

"response of any mutation on the table \"dbo.Operations\""
type dbo_Operations_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Operations!]!
}

"aggregate stddev on columns"
type dbo_Operations_stddev_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate stddev_pop on columns"
type dbo_Operations_stddev_pop_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate stddev_samp on columns"
type dbo_Operations_stddev_samp_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate sum on columns"
type dbo_Operations_sum_fields {
    Amount: Int
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    UniqueNumber: Int
}

"aggregate var_pop on columns"
type dbo_Operations_var_pop_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate var_samp on columns"
type dbo_Operations_var_samp_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"aggregate variance on columns"
type dbo_Operations_variance_fields {
    Amount: Float
    CurrencyAmount: Float
    FeeAmount: Float
    FeeProcent: Float
    OperationStatus: Float
    OperationType: Float
    OurFeeAmount: Float
    PaymentFeeAmount: Float
    Rate: Float
    UniqueNumber: Float
}

"columns and relationships of \"dbo.PaymentHistory\""
type dbo_PaymentHistory {
    Amount: Int!
    "An object relationship"
    Client: dbo_Clients!
    ClientUid: uuid!
    CreatedUtcDateTime: timestamp!
    "An object relationship"
    Currecy: dbo_Currecies!
    CurrencyUid: uuid!
    Date: timestamp!
    Direction: smallint!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Uid: uuid!
}

"aggregated selection of \"dbo.PaymentHistory\""
type dbo_PaymentHistory_aggregate {
    aggregate: dbo_PaymentHistory_aggregate_fields
    nodes: [dbo_PaymentHistory!]!
}

"aggregate fields of \"dbo.PaymentHistory\""
type dbo_PaymentHistory_aggregate_fields {
    avg: dbo_PaymentHistory_avg_fields
    count(columns: [dbo_PaymentHistory_select_column!], distinct: Boolean): Int
    max: dbo_PaymentHistory_max_fields
    min: dbo_PaymentHistory_min_fields
    stddev: dbo_PaymentHistory_stddev_fields
    stddev_pop: dbo_PaymentHistory_stddev_pop_fields
    stddev_samp: dbo_PaymentHistory_stddev_samp_fields
    sum: dbo_PaymentHistory_sum_fields
    var_pop: dbo_PaymentHistory_var_pop_fields
    var_samp: dbo_PaymentHistory_var_samp_fields
    variance: dbo_PaymentHistory_variance_fields
}

"aggregate avg on columns"
type dbo_PaymentHistory_avg_fields {
    Amount: Float
    Direction: Float
}

"aggregate max on columns"
type dbo_PaymentHistory_max_fields {
    Amount: Int
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    Date: timestamp
    Direction: smallint
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"aggregate min on columns"
type dbo_PaymentHistory_min_fields {
    Amount: Int
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    Date: timestamp
    Direction: smallint
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"response of any mutation on the table \"dbo.PaymentHistory\""
type dbo_PaymentHistory_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_PaymentHistory!]!
}

"aggregate stddev on columns"
type dbo_PaymentHistory_stddev_fields {
    Amount: Float
    Direction: Float
}

"aggregate stddev_pop on columns"
type dbo_PaymentHistory_stddev_pop_fields {
    Amount: Float
    Direction: Float
}

"aggregate stddev_samp on columns"
type dbo_PaymentHistory_stddev_samp_fields {
    Amount: Float
    Direction: Float
}

"aggregate sum on columns"
type dbo_PaymentHistory_sum_fields {
    Amount: Int
    Direction: smallint
}

"aggregate var_pop on columns"
type dbo_PaymentHistory_var_pop_fields {
    Amount: Float
    Direction: Float
}

"aggregate var_samp on columns"
type dbo_PaymentHistory_var_samp_fields {
    Amount: Float
    Direction: Float
}

"aggregate variance on columns"
type dbo_PaymentHistory_variance_fields {
    Amount: Float
    Direction: Float
}

"columns and relationships of \"dbo.PhoneNumberVerifications\""
type dbo_PhoneNumberVerifications {
    Code: String!
    CreatedUtcDateTime: timestamp!
    ExpiresUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String!
    Status: smallint!
    Uid: uuid!
    VerifiedUtcDateTime: timestamp
}

"aggregated selection of \"dbo.PhoneNumberVerifications\""
type dbo_PhoneNumberVerifications_aggregate {
    aggregate: dbo_PhoneNumberVerifications_aggregate_fields
    nodes: [dbo_PhoneNumberVerifications!]!
}

"aggregate fields of \"dbo.PhoneNumberVerifications\""
type dbo_PhoneNumberVerifications_aggregate_fields {
    avg: dbo_PhoneNumberVerifications_avg_fields
    count(columns: [dbo_PhoneNumberVerifications_select_column!], distinct: Boolean): Int
    max: dbo_PhoneNumberVerifications_max_fields
    min: dbo_PhoneNumberVerifications_min_fields
    stddev: dbo_PhoneNumberVerifications_stddev_fields
    stddev_pop: dbo_PhoneNumberVerifications_stddev_pop_fields
    stddev_samp: dbo_PhoneNumberVerifications_stddev_samp_fields
    sum: dbo_PhoneNumberVerifications_sum_fields
    var_pop: dbo_PhoneNumberVerifications_var_pop_fields
    var_samp: dbo_PhoneNumberVerifications_var_samp_fields
    variance: dbo_PhoneNumberVerifications_variance_fields
}

"aggregate avg on columns"
type dbo_PhoneNumberVerifications_avg_fields {
    Status: Float
}

"aggregate max on columns"
type dbo_PhoneNumberVerifications_max_fields {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Status: smallint
    Uid: uuid
    VerifiedUtcDateTime: timestamp
}

"aggregate min on columns"
type dbo_PhoneNumberVerifications_min_fields {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Status: smallint
    Uid: uuid
    VerifiedUtcDateTime: timestamp
}

"response of any mutation on the table \"dbo.PhoneNumberVerifications\""
type dbo_PhoneNumberVerifications_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_PhoneNumberVerifications!]!
}

"aggregate stddev on columns"
type dbo_PhoneNumberVerifications_stddev_fields {
    Status: Float
}

"aggregate stddev_pop on columns"
type dbo_PhoneNumberVerifications_stddev_pop_fields {
    Status: Float
}

"aggregate stddev_samp on columns"
type dbo_PhoneNumberVerifications_stddev_samp_fields {
    Status: Float
}

"aggregate sum on columns"
type dbo_PhoneNumberVerifications_sum_fields {
    Status: smallint
}

"aggregate var_pop on columns"
type dbo_PhoneNumberVerifications_var_pop_fields {
    Status: Float
}

"aggregate var_samp on columns"
type dbo_PhoneNumberVerifications_var_samp_fields {
    Status: Float
}

"aggregate variance on columns"
type dbo_PhoneNumberVerifications_variance_fields {
    Status: Float
}

"columns and relationships of \"dbo.ReferallDeviceGuid\""
type dbo_ReferallDeviceGuid {
    AppGuid: uuid!
    Id: uuid!
    RefferedUser_Uid: uuid
    "An object relationship"
    User: dbo_Users
}

"aggregated selection of \"dbo.ReferallDeviceGuid\""
type dbo_ReferallDeviceGuid_aggregate {
    aggregate: dbo_ReferallDeviceGuid_aggregate_fields
    nodes: [dbo_ReferallDeviceGuid!]!
}

"aggregate fields of \"dbo.ReferallDeviceGuid\""
type dbo_ReferallDeviceGuid_aggregate_fields {
    count(columns: [dbo_ReferallDeviceGuid_select_column!], distinct: Boolean): Int
    max: dbo_ReferallDeviceGuid_max_fields
    min: dbo_ReferallDeviceGuid_min_fields
}

"aggregate max on columns"
type dbo_ReferallDeviceGuid_max_fields {
    AppGuid: uuid
    Id: uuid
    RefferedUser_Uid: uuid
}

"aggregate min on columns"
type dbo_ReferallDeviceGuid_min_fields {
    AppGuid: uuid
    Id: uuid
    RefferedUser_Uid: uuid
}

"response of any mutation on the table \"dbo.ReferallDeviceGuid\""
type dbo_ReferallDeviceGuid_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_ReferallDeviceGuid!]!
}

"columns and relationships of \"dbo.RefreshTokens\""
type dbo_RefreshTokens {
    Body: String!
    "An object relationship"
    Client: dbo_Clients!
    ClientUid: uuid!
    CreatedUtcDateTime: timestamp!
    ExpiresUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    ProtectedTicket: String!
    Uid: uuid!
}

"aggregated selection of \"dbo.RefreshTokens\""
type dbo_RefreshTokens_aggregate {
    aggregate: dbo_RefreshTokens_aggregate_fields
    nodes: [dbo_RefreshTokens!]!
}

"aggregate fields of \"dbo.RefreshTokens\""
type dbo_RefreshTokens_aggregate_fields {
    count(columns: [dbo_RefreshTokens_select_column!], distinct: Boolean): Int
    max: dbo_RefreshTokens_max_fields
    min: dbo_RefreshTokens_min_fields
}

"aggregate max on columns"
type dbo_RefreshTokens_max_fields {
    Body: String
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    ProtectedTicket: String
    Uid: uuid
}

"aggregate min on columns"
type dbo_RefreshTokens_min_fields {
    Body: String
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    ProtectedTicket: String
    Uid: uuid
}

"response of any mutation on the table \"dbo.RefreshTokens\""
type dbo_RefreshTokens_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_RefreshTokens!]!
}

"columns and relationships of \"dbo.Registrations\""
type dbo_Registrations {
    "An object relationship"
    Country: dbo_Countries!
    CountryId: uuid!
    CreatedUtcDateTime: timestamp!
    FirstName: String
    HowComfortablyToReceiveMoney: Int!
    HowComfortablyToTranferMoney: Int!
    HowMuchTimeTransferMoneyInMonth: String
    IsDeleted: Boolean!
    IsIfYouReceiveMoneyYouRecommendApp: Boolean!
    IsWantCashBackForTransfer: Boolean!
    LastName: String
    "An object relationship"
    Manager: dbo_Managers!
    ManagerId: Int!
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Uid: uuid!
    "An object relationship"
    User: dbo_Users
    UserId: uuid
}

"aggregated selection of \"dbo.Registrations\""
type dbo_Registrations_aggregate {
    aggregate: dbo_Registrations_aggregate_fields
    nodes: [dbo_Registrations!]!
}

"aggregate fields of \"dbo.Registrations\""
type dbo_Registrations_aggregate_fields {
    avg: dbo_Registrations_avg_fields
    count(columns: [dbo_Registrations_select_column!], distinct: Boolean): Int
    max: dbo_Registrations_max_fields
    min: dbo_Registrations_min_fields
    stddev: dbo_Registrations_stddev_fields
    stddev_pop: dbo_Registrations_stddev_pop_fields
    stddev_samp: dbo_Registrations_stddev_samp_fields
    sum: dbo_Registrations_sum_fields
    var_pop: dbo_Registrations_var_pop_fields
    var_samp: dbo_Registrations_var_samp_fields
    variance: dbo_Registrations_variance_fields
}

"aggregate avg on columns"
type dbo_Registrations_avg_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate max on columns"
type dbo_Registrations_max_fields {
    CountryId: uuid
    CreatedUtcDateTime: timestamp
    FirstName: String
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    HowMuchTimeTransferMoneyInMonth: String
    LastName: String
    ManagerId: Int
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Uid: uuid
    UserId: uuid
}

"aggregate min on columns"
type dbo_Registrations_min_fields {
    CountryId: uuid
    CreatedUtcDateTime: timestamp
    FirstName: String
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    HowMuchTimeTransferMoneyInMonth: String
    LastName: String
    ManagerId: Int
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Uid: uuid
    UserId: uuid
}

"response of any mutation on the table \"dbo.Registrations\""
type dbo_Registrations_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Registrations!]!
}

"aggregate stddev on columns"
type dbo_Registrations_stddev_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate stddev_pop on columns"
type dbo_Registrations_stddev_pop_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate stddev_samp on columns"
type dbo_Registrations_stddev_samp_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate sum on columns"
type dbo_Registrations_sum_fields {
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    ManagerId: Int
}

"aggregate var_pop on columns"
type dbo_Registrations_var_pop_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate var_samp on columns"
type dbo_Registrations_var_samp_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"aggregate variance on columns"
type dbo_Registrations_variance_fields {
    HowComfortablyToReceiveMoney: Float
    HowComfortablyToTranferMoney: Float
    ManagerId: Float
}

"columns and relationships of \"dbo.ReservationCards\""
type dbo_ReservationCards {
    CardType: Int!
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
}

"aggregated selection of \"dbo.ReservationCards\""
type dbo_ReservationCards_aggregate {
    aggregate: dbo_ReservationCards_aggregate_fields
    nodes: [dbo_ReservationCards!]!
}

"aggregate fields of \"dbo.ReservationCards\""
type dbo_ReservationCards_aggregate_fields {
    avg: dbo_ReservationCards_avg_fields
    count(columns: [dbo_ReservationCards_select_column!], distinct: Boolean): Int
    max: dbo_ReservationCards_max_fields
    min: dbo_ReservationCards_min_fields
    stddev: dbo_ReservationCards_stddev_fields
    stddev_pop: dbo_ReservationCards_stddev_pop_fields
    stddev_samp: dbo_ReservationCards_stddev_samp_fields
    sum: dbo_ReservationCards_sum_fields
    var_pop: dbo_ReservationCards_var_pop_fields
    var_samp: dbo_ReservationCards_var_samp_fields
    variance: dbo_ReservationCards_variance_fields
}

"aggregate avg on columns"
type dbo_ReservationCards_avg_fields {
    CardType: Float
}

"aggregate max on columns"
type dbo_ReservationCards_max_fields {
    CardType: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    UserUid: uuid
}

"aggregate min on columns"
type dbo_ReservationCards_min_fields {
    CardType: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    UserUid: uuid
}

"response of any mutation on the table \"dbo.ReservationCards\""
type dbo_ReservationCards_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_ReservationCards!]!
}

"aggregate stddev on columns"
type dbo_ReservationCards_stddev_fields {
    CardType: Float
}

"aggregate stddev_pop on columns"
type dbo_ReservationCards_stddev_pop_fields {
    CardType: Float
}

"aggregate stddev_samp on columns"
type dbo_ReservationCards_stddev_samp_fields {
    CardType: Float
}

"aggregate sum on columns"
type dbo_ReservationCards_sum_fields {
    CardType: Int
}

"aggregate var_pop on columns"
type dbo_ReservationCards_var_pop_fields {
    CardType: Float
}

"aggregate var_samp on columns"
type dbo_ReservationCards_var_samp_fields {
    CardType: Float
}

"aggregate variance on columns"
type dbo_ReservationCards_variance_fields {
    CardType: Float
}

"columns and relationships of \"dbo.Roles\""
type dbo_Roles {
    CreatedUtcDateTime: timestamp!
    Id: smallint!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Name: String
    "An array relationship"
    UserRoles(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): [dbo_UserRoles!]!
    "An aggregated array relationship"
    UserRoles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): dbo_UserRoles_aggregate!
}

"aggregated selection of \"dbo.Roles\""
type dbo_Roles_aggregate {
    aggregate: dbo_Roles_aggregate_fields
    nodes: [dbo_Roles!]!
}

"aggregate fields of \"dbo.Roles\""
type dbo_Roles_aggregate_fields {
    avg: dbo_Roles_avg_fields
    count(columns: [dbo_Roles_select_column!], distinct: Boolean): Int
    max: dbo_Roles_max_fields
    min: dbo_Roles_min_fields
    stddev: dbo_Roles_stddev_fields
    stddev_pop: dbo_Roles_stddev_pop_fields
    stddev_samp: dbo_Roles_stddev_samp_fields
    sum: dbo_Roles_sum_fields
    var_pop: dbo_Roles_var_pop_fields
    var_samp: dbo_Roles_var_samp_fields
    variance: dbo_Roles_variance_fields
}

"aggregate avg on columns"
type dbo_Roles_avg_fields {
    Id: Float
}

"aggregate max on columns"
type dbo_Roles_max_fields {
    CreatedUtcDateTime: timestamp
    Id: smallint
    ModifiedUtcDateTime: timestamp
    Name: String
}

"aggregate min on columns"
type dbo_Roles_min_fields {
    CreatedUtcDateTime: timestamp
    Id: smallint
    ModifiedUtcDateTime: timestamp
    Name: String
}

"response of any mutation on the table \"dbo.Roles\""
type dbo_Roles_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Roles!]!
}

"aggregate stddev on columns"
type dbo_Roles_stddev_fields {
    Id: Float
}

"aggregate stddev_pop on columns"
type dbo_Roles_stddev_pop_fields {
    Id: Float
}

"aggregate stddev_samp on columns"
type dbo_Roles_stddev_samp_fields {
    Id: Float
}

"aggregate sum on columns"
type dbo_Roles_sum_fields {
    Id: smallint
}

"aggregate var_pop on columns"
type dbo_Roles_var_pop_fields {
    Id: Float
}

"aggregate var_samp on columns"
type dbo_Roles_var_samp_fields {
    Id: Float
}

"aggregate variance on columns"
type dbo_Roles_variance_fields {
    Id: Float
}

"columns and relationships of \"dbo.ShortLinks\""
type dbo_ShortLinks {
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    IsOpened: Boolean!
    Link: String
    ModifiedUtcDateTime: timestamp
    OpenDateTime: timestamp
    "An array relationship"
    OperationEntityShortLinkEntities(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): [dbo_OperationEntityShortLinkEntities!]!
    "An aggregated array relationship"
    OperationEntityShortLinkEntities_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): dbo_OperationEntityShortLinkEntities_aggregate!
    Uid: uuid!
    Url: String
}

"aggregated selection of \"dbo.ShortLinks\""
type dbo_ShortLinks_aggregate {
    aggregate: dbo_ShortLinks_aggregate_fields
    nodes: [dbo_ShortLinks!]!
}

"aggregate fields of \"dbo.ShortLinks\""
type dbo_ShortLinks_aggregate_fields {
    count(columns: [dbo_ShortLinks_select_column!], distinct: Boolean): Int
    max: dbo_ShortLinks_max_fields
    min: dbo_ShortLinks_min_fields
}

"aggregate max on columns"
type dbo_ShortLinks_max_fields {
    CreatedUtcDateTime: timestamp
    Link: String
    ModifiedUtcDateTime: timestamp
    OpenDateTime: timestamp
    Uid: uuid
    Url: String
}

"aggregate min on columns"
type dbo_ShortLinks_min_fields {
    CreatedUtcDateTime: timestamp
    Link: String
    ModifiedUtcDateTime: timestamp
    OpenDateTime: timestamp
    Uid: uuid
    Url: String
}

"response of any mutation on the table \"dbo.ShortLinks\""
type dbo_ShortLinks_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_ShortLinks!]!
}

"columns and relationships of \"dbo.Transactions\""
type dbo_Transactions {
    "An object relationship"
    Account: dbo_Accounts!
    Amount: Int!
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An object relationship"
    Operation: dbo_Operations!
    OperationUid: uuid!
    RecepientAccountUid: uuid!
    SenderAccountUid: uuid!
    TransactionStatus: Int!
    Type: Int!
    Uid: uuid!
    "An object relationship"
    accountByRecepientaccountuid: dbo_Accounts!
}

"aggregated selection of \"dbo.Transactions\""
type dbo_Transactions_aggregate {
    aggregate: dbo_Transactions_aggregate_fields
    nodes: [dbo_Transactions!]!
}

"aggregate fields of \"dbo.Transactions\""
type dbo_Transactions_aggregate_fields {
    avg: dbo_Transactions_avg_fields
    count(columns: [dbo_Transactions_select_column!], distinct: Boolean): Int
    max: dbo_Transactions_max_fields
    min: dbo_Transactions_min_fields
    stddev: dbo_Transactions_stddev_fields
    stddev_pop: dbo_Transactions_stddev_pop_fields
    stddev_samp: dbo_Transactions_stddev_samp_fields
    sum: dbo_Transactions_sum_fields
    var_pop: dbo_Transactions_var_pop_fields
    var_samp: dbo_Transactions_var_samp_fields
    variance: dbo_Transactions_variance_fields
}

"aggregate avg on columns"
type dbo_Transactions_avg_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate max on columns"
type dbo_Transactions_max_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    OperationUid: uuid
    RecepientAccountUid: uuid
    SenderAccountUid: uuid
    TransactionStatus: Int
    Type: Int
    Uid: uuid
}

"aggregate min on columns"
type dbo_Transactions_min_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    OperationUid: uuid
    RecepientAccountUid: uuid
    SenderAccountUid: uuid
    TransactionStatus: Int
    Type: Int
    Uid: uuid
}

"response of any mutation on the table \"dbo.Transactions\""
type dbo_Transactions_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Transactions!]!
}

"aggregate stddev on columns"
type dbo_Transactions_stddev_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate stddev_pop on columns"
type dbo_Transactions_stddev_pop_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate stddev_samp on columns"
type dbo_Transactions_stddev_samp_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate sum on columns"
type dbo_Transactions_sum_fields {
    Amount: Int
    TransactionStatus: Int
    Type: Int
}

"aggregate var_pop on columns"
type dbo_Transactions_var_pop_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate var_samp on columns"
type dbo_Transactions_var_samp_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"aggregate variance on columns"
type dbo_Transactions_variance_fields {
    Amount: Float
    TransactionStatus: Float
    Type: Float
}

"columns and relationships of \"dbo.UnistreamClientHistory\""
type dbo_UnistreamClientHistory {
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Uid: uuid!
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
}

"aggregated selection of \"dbo.UnistreamClientHistory\""
type dbo_UnistreamClientHistory_aggregate {
    aggregate: dbo_UnistreamClientHistory_aggregate_fields
    nodes: [dbo_UnistreamClientHistory!]!
}

"aggregate fields of \"dbo.UnistreamClientHistory\""
type dbo_UnistreamClientHistory_aggregate_fields {
    count(columns: [dbo_UnistreamClientHistory_select_column!], distinct: Boolean): Int
    max: dbo_UnistreamClientHistory_max_fields
    min: dbo_UnistreamClientHistory_min_fields
}

"aggregate max on columns"
type dbo_UnistreamClientHistory_max_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Uid: uuid
    UserUid: uuid
}

"aggregate min on columns"
type dbo_UnistreamClientHistory_min_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Uid: uuid
    UserUid: uuid
}

"response of any mutation on the table \"dbo.UnistreamClientHistory\""
type dbo_UnistreamClientHistory_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UnistreamClientHistory!]!
}

"columns and relationships of \"dbo.UnistreamOperations\""
type dbo_UnistreamOperations {
    CommandId: String
    CountryCode: String
    "An object relationship"
    Operation: dbo_Operations!
    OperationId: String
    OperationUid: uuid!
    Type: Int!
}

"aggregated selection of \"dbo.UnistreamOperations\""
type dbo_UnistreamOperations_aggregate {
    aggregate: dbo_UnistreamOperations_aggregate_fields
    nodes: [dbo_UnistreamOperations!]!
}

"aggregate fields of \"dbo.UnistreamOperations\""
type dbo_UnistreamOperations_aggregate_fields {
    avg: dbo_UnistreamOperations_avg_fields
    count(columns: [dbo_UnistreamOperations_select_column!], distinct: Boolean): Int
    max: dbo_UnistreamOperations_max_fields
    min: dbo_UnistreamOperations_min_fields
    stddev: dbo_UnistreamOperations_stddev_fields
    stddev_pop: dbo_UnistreamOperations_stddev_pop_fields
    stddev_samp: dbo_UnistreamOperations_stddev_samp_fields
    sum: dbo_UnistreamOperations_sum_fields
    var_pop: dbo_UnistreamOperations_var_pop_fields
    var_samp: dbo_UnistreamOperations_var_samp_fields
    variance: dbo_UnistreamOperations_variance_fields
}

"aggregate avg on columns"
type dbo_UnistreamOperations_avg_fields {
    Type: Float
}

"aggregate max on columns"
type dbo_UnistreamOperations_max_fields {
    CommandId: String
    CountryCode: String
    OperationId: String
    OperationUid: uuid
    Type: Int
}

"aggregate min on columns"
type dbo_UnistreamOperations_min_fields {
    CommandId: String
    CountryCode: String
    OperationId: String
    OperationUid: uuid
    Type: Int
}

"response of any mutation on the table \"dbo.UnistreamOperations\""
type dbo_UnistreamOperations_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UnistreamOperations!]!
}

"aggregate stddev on columns"
type dbo_UnistreamOperations_stddev_fields {
    Type: Float
}

"aggregate stddev_pop on columns"
type dbo_UnistreamOperations_stddev_pop_fields {
    Type: Float
}

"aggregate stddev_samp on columns"
type dbo_UnistreamOperations_stddev_samp_fields {
    Type: Float
}

"aggregate sum on columns"
type dbo_UnistreamOperations_sum_fields {
    Type: Int
}

"aggregate var_pop on columns"
type dbo_UnistreamOperations_var_pop_fields {
    Type: Float
}

"aggregate var_samp on columns"
type dbo_UnistreamOperations_var_samp_fields {
    Type: Float
}

"aggregate variance on columns"
type dbo_UnistreamOperations_variance_fields {
    Type: Float
}

"columns and relationships of \"dbo.UserCards\""
type dbo_UserCards {
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    Month: smallint
    Pan: String
    PaymentSystem: Int!
    Token: String
    Uid: uuid!
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
    Year: smallint
}

"aggregated selection of \"dbo.UserCards\""
type dbo_UserCards_aggregate {
    aggregate: dbo_UserCards_aggregate_fields
    nodes: [dbo_UserCards!]!
}

"aggregate fields of \"dbo.UserCards\""
type dbo_UserCards_aggregate_fields {
    avg: dbo_UserCards_avg_fields
    count(columns: [dbo_UserCards_select_column!], distinct: Boolean): Int
    max: dbo_UserCards_max_fields
    min: dbo_UserCards_min_fields
    stddev: dbo_UserCards_stddev_fields
    stddev_pop: dbo_UserCards_stddev_pop_fields
    stddev_samp: dbo_UserCards_stddev_samp_fields
    sum: dbo_UserCards_sum_fields
    var_pop: dbo_UserCards_var_pop_fields
    var_samp: dbo_UserCards_var_samp_fields
    variance: dbo_UserCards_variance_fields
}

"aggregate avg on columns"
type dbo_UserCards_avg_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate max on columns"
type dbo_UserCards_max_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Month: smallint
    Pan: String
    PaymentSystem: Int
    Token: String
    Uid: uuid
    UserUid: uuid
    Year: smallint
}

"aggregate min on columns"
type dbo_UserCards_min_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    Month: smallint
    Pan: String
    PaymentSystem: Int
    Token: String
    Uid: uuid
    UserUid: uuid
    Year: smallint
}

"response of any mutation on the table \"dbo.UserCards\""
type dbo_UserCards_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserCards!]!
}

"aggregate stddev on columns"
type dbo_UserCards_stddev_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate stddev_pop on columns"
type dbo_UserCards_stddev_pop_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate stddev_samp on columns"
type dbo_UserCards_stddev_samp_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate sum on columns"
type dbo_UserCards_sum_fields {
    Month: smallint
    PaymentSystem: Int
    Year: smallint
}

"aggregate var_pop on columns"
type dbo_UserCards_var_pop_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate var_samp on columns"
type dbo_UserCards_var_samp_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"aggregate variance on columns"
type dbo_UserCards_variance_fields {
    Month: Float
    PaymentSystem: Float
    Year: Float
}

"columns and relationships of \"dbo.UserDetails\""
type dbo_UserDetails {
    AddressUid: uuid
    BirthDate: timestamp
    BirthPlace: String
    CreatedUtcDateTime: timestamp!
    DocumentUid: uuid
    FirstName: String
    Gender: smallint!
    IsDeleted: Boolean!
    LastName: String
    MiddleName: String
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    RefUser_Uid: uuid
    "An object relationship"
    User: dbo_Users!
    "An array relationship"
    UserDetailsAddresses(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): [dbo_UserDetailsAddresses!]!
    "An aggregated array relationship"
    UserDetailsAddresses_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): dbo_UserDetailsAddresses_aggregate!
    "An array relationship"
    UserDetailsDocuments(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): [dbo_UserDetailsDocuments!]!
    "An aggregated array relationship"
    UserDetailsDocuments_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): dbo_UserDetailsDocuments_aggregate!
    UserUid: uuid!
    "An object relationship"
    userByRefuserUid: dbo_Users
}

"columns and relationships of \"dbo.UserDetailsAddresses\""
type dbo_UserDetailsAddresses {
    Apartment: String
    Building: String
    City: String
    CountryCode: String
    CreatedUtcDateTime: timestamp!
    House: String
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    PartAddressString: String
    PostCode: String
    State: String
    Street: String
    Uid: uuid!
    "An object relationship"
    UserDetail: dbo_UserDetails!
    UserDetailsUid: uuid!
}

"aggregated selection of \"dbo.UserDetailsAddresses\""
type dbo_UserDetailsAddresses_aggregate {
    aggregate: dbo_UserDetailsAddresses_aggregate_fields
    nodes: [dbo_UserDetailsAddresses!]!
}

"aggregate fields of \"dbo.UserDetailsAddresses\""
type dbo_UserDetailsAddresses_aggregate_fields {
    count(columns: [dbo_UserDetailsAddresses_select_column!], distinct: Boolean): Int
    max: dbo_UserDetailsAddresses_max_fields
    min: dbo_UserDetailsAddresses_min_fields
}

"aggregate max on columns"
type dbo_UserDetailsAddresses_max_fields {
    Apartment: String
    Building: String
    City: String
    CountryCode: String
    CreatedUtcDateTime: timestamp
    House: String
    ModifiedUtcDateTime: timestamp
    PartAddressString: String
    PostCode: String
    State: String
    Street: String
    Uid: uuid
    UserDetailsUid: uuid
}

"aggregate min on columns"
type dbo_UserDetailsAddresses_min_fields {
    Apartment: String
    Building: String
    City: String
    CountryCode: String
    CreatedUtcDateTime: timestamp
    House: String
    ModifiedUtcDateTime: timestamp
    PartAddressString: String
    PostCode: String
    State: String
    Street: String
    Uid: uuid
    UserDetailsUid: uuid
}

"response of any mutation on the table \"dbo.UserDetailsAddresses\""
type dbo_UserDetailsAddresses_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserDetailsAddresses!]!
}

"columns and relationships of \"dbo.UserDetailsDocuments\""
type dbo_UserDetailsDocuments {
    Authority: String
    CountryOfResidence: String
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    IssueDate: timestamp
    IssuerDepartmentCode: String
    ModifiedUtcDateTime: timestamp
    Number: String
    Series: String
    Uid: uuid!
    "An object relationship"
    UserDetail: dbo_UserDetails!
    UserDetailsUid: uuid!
}

"aggregated selection of \"dbo.UserDetailsDocuments\""
type dbo_UserDetailsDocuments_aggregate {
    aggregate: dbo_UserDetailsDocuments_aggregate_fields
    nodes: [dbo_UserDetailsDocuments!]!
}

"aggregate fields of \"dbo.UserDetailsDocuments\""
type dbo_UserDetailsDocuments_aggregate_fields {
    count(columns: [dbo_UserDetailsDocuments_select_column!], distinct: Boolean): Int
    max: dbo_UserDetailsDocuments_max_fields
    min: dbo_UserDetailsDocuments_min_fields
}

"aggregate max on columns"
type dbo_UserDetailsDocuments_max_fields {
    Authority: String
    CountryOfResidence: String
    CreatedUtcDateTime: timestamp
    IssueDate: timestamp
    IssuerDepartmentCode: String
    ModifiedUtcDateTime: timestamp
    Number: String
    Series: String
    Uid: uuid
    UserDetailsUid: uuid
}

"aggregate min on columns"
type dbo_UserDetailsDocuments_min_fields {
    Authority: String
    CountryOfResidence: String
    CreatedUtcDateTime: timestamp
    IssueDate: timestamp
    IssuerDepartmentCode: String
    ModifiedUtcDateTime: timestamp
    Number: String
    Series: String
    Uid: uuid
    UserDetailsUid: uuid
}

"response of any mutation on the table \"dbo.UserDetailsDocuments\""
type dbo_UserDetailsDocuments_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserDetailsDocuments!]!
}

"aggregated selection of \"dbo.UserDetails\""
type dbo_UserDetails_aggregate {
    aggregate: dbo_UserDetails_aggregate_fields
    nodes: [dbo_UserDetails!]!
}

"aggregate fields of \"dbo.UserDetails\""
type dbo_UserDetails_aggregate_fields {
    avg: dbo_UserDetails_avg_fields
    count(columns: [dbo_UserDetails_select_column!], distinct: Boolean): Int
    max: dbo_UserDetails_max_fields
    min: dbo_UserDetails_min_fields
    stddev: dbo_UserDetails_stddev_fields
    stddev_pop: dbo_UserDetails_stddev_pop_fields
    stddev_samp: dbo_UserDetails_stddev_samp_fields
    sum: dbo_UserDetails_sum_fields
    var_pop: dbo_UserDetails_var_pop_fields
    var_samp: dbo_UserDetails_var_samp_fields
    variance: dbo_UserDetails_variance_fields
}

"aggregate avg on columns"
type dbo_UserDetails_avg_fields {
    Gender: Float
}

"aggregate max on columns"
type dbo_UserDetails_max_fields {
    AddressUid: uuid
    BirthDate: timestamp
    BirthPlace: String
    CreatedUtcDateTime: timestamp
    DocumentUid: uuid
    FirstName: String
    Gender: smallint
    LastName: String
    MiddleName: String
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    RefUser_Uid: uuid
    UserUid: uuid
}

"aggregate min on columns"
type dbo_UserDetails_min_fields {
    AddressUid: uuid
    BirthDate: timestamp
    BirthPlace: String
    CreatedUtcDateTime: timestamp
    DocumentUid: uuid
    FirstName: String
    Gender: smallint
    LastName: String
    MiddleName: String
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    RefUser_Uid: uuid
    UserUid: uuid
}

"response of any mutation on the table \"dbo.UserDetails\""
type dbo_UserDetails_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserDetails!]!
}

"aggregate stddev on columns"
type dbo_UserDetails_stddev_fields {
    Gender: Float
}

"aggregate stddev_pop on columns"
type dbo_UserDetails_stddev_pop_fields {
    Gender: Float
}

"aggregate stddev_samp on columns"
type dbo_UserDetails_stddev_samp_fields {
    Gender: Float
}

"aggregate sum on columns"
type dbo_UserDetails_sum_fields {
    Gender: smallint
}

"aggregate var_pop on columns"
type dbo_UserDetails_var_pop_fields {
    Gender: Float
}

"aggregate var_samp on columns"
type dbo_UserDetails_var_samp_fields {
    Gender: Float
}

"aggregate variance on columns"
type dbo_UserDetails_variance_fields {
    Gender: Float
}

"columns and relationships of \"dbo.UserDeviceGuids\""
type dbo_UserDeviceGuids {
    DeviceGuid: uuid!
    Id: uuid!
    "An object relationship"
    User: dbo_Users
    User_Uid: uuid
}

"aggregated selection of \"dbo.UserDeviceGuids\""
type dbo_UserDeviceGuids_aggregate {
    aggregate: dbo_UserDeviceGuids_aggregate_fields
    nodes: [dbo_UserDeviceGuids!]!
}

"aggregate fields of \"dbo.UserDeviceGuids\""
type dbo_UserDeviceGuids_aggregate_fields {
    count(columns: [dbo_UserDeviceGuids_select_column!], distinct: Boolean): Int
    max: dbo_UserDeviceGuids_max_fields
    min: dbo_UserDeviceGuids_min_fields
}

"aggregate max on columns"
type dbo_UserDeviceGuids_max_fields {
    DeviceGuid: uuid
    Id: uuid
    User_Uid: uuid
}

"aggregate min on columns"
type dbo_UserDeviceGuids_min_fields {
    DeviceGuid: uuid
    Id: uuid
    User_Uid: uuid
}

"response of any mutation on the table \"dbo.UserDeviceGuids\""
type dbo_UserDeviceGuids_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserDeviceGuids!]!
}

"columns and relationships of \"dbo.UserPhoneVerifications\""
type dbo_UserPhoneVerifications {
    Code: String!
    CreatedUtcDateTime: timestamp!
    ExpiresUtcDateTime: timestamp!
    IsDeleted: Boolean!
    MaxVerificationAttemps: smallint!
    ModifiedUtcDateTime: timestamp
    Status: smallint!
    Uid: uuid!
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
    VerificationAttemps: smallint!
    VerifiedUtcDateTime: timestamp
}

"aggregated selection of \"dbo.UserPhoneVerifications\""
type dbo_UserPhoneVerifications_aggregate {
    aggregate: dbo_UserPhoneVerifications_aggregate_fields
    nodes: [dbo_UserPhoneVerifications!]!
}

"aggregate fields of \"dbo.UserPhoneVerifications\""
type dbo_UserPhoneVerifications_aggregate_fields {
    avg: dbo_UserPhoneVerifications_avg_fields
    count(columns: [dbo_UserPhoneVerifications_select_column!], distinct: Boolean): Int
    max: dbo_UserPhoneVerifications_max_fields
    min: dbo_UserPhoneVerifications_min_fields
    stddev: dbo_UserPhoneVerifications_stddev_fields
    stddev_pop: dbo_UserPhoneVerifications_stddev_pop_fields
    stddev_samp: dbo_UserPhoneVerifications_stddev_samp_fields
    sum: dbo_UserPhoneVerifications_sum_fields
    var_pop: dbo_UserPhoneVerifications_var_pop_fields
    var_samp: dbo_UserPhoneVerifications_var_samp_fields
    variance: dbo_UserPhoneVerifications_variance_fields
}

"aggregate avg on columns"
type dbo_UserPhoneVerifications_avg_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate max on columns"
type dbo_UserPhoneVerifications_max_fields {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    MaxVerificationAttemps: smallint
    ModifiedUtcDateTime: timestamp
    Status: smallint
    Uid: uuid
    UserUid: uuid
    VerificationAttemps: smallint
    VerifiedUtcDateTime: timestamp
}

"aggregate min on columns"
type dbo_UserPhoneVerifications_min_fields {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    MaxVerificationAttemps: smallint
    ModifiedUtcDateTime: timestamp
    Status: smallint
    Uid: uuid
    UserUid: uuid
    VerificationAttemps: smallint
    VerifiedUtcDateTime: timestamp
}

"response of any mutation on the table \"dbo.UserPhoneVerifications\""
type dbo_UserPhoneVerifications_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserPhoneVerifications!]!
}

"aggregate stddev on columns"
type dbo_UserPhoneVerifications_stddev_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate stddev_pop on columns"
type dbo_UserPhoneVerifications_stddev_pop_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate stddev_samp on columns"
type dbo_UserPhoneVerifications_stddev_samp_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate sum on columns"
type dbo_UserPhoneVerifications_sum_fields {
    MaxVerificationAttemps: smallint
    Status: smallint
    VerificationAttemps: smallint
}

"aggregate var_pop on columns"
type dbo_UserPhoneVerifications_var_pop_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate var_samp on columns"
type dbo_UserPhoneVerifications_var_samp_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"aggregate variance on columns"
type dbo_UserPhoneVerifications_variance_fields {
    MaxVerificationAttemps: Float
    Status: Float
    VerificationAttemps: Float
}

"columns and relationships of \"dbo.UserRoles\""
type dbo_UserRoles {
    CreatedUtcDateTime: timestamp!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An object relationship"
    Role: dbo_Roles!
    RoleId: smallint!
    "An object relationship"
    User: dbo_Users!
    UserUid: uuid!
}

"aggregated selection of \"dbo.UserRoles\""
type dbo_UserRoles_aggregate {
    aggregate: dbo_UserRoles_aggregate_fields
    nodes: [dbo_UserRoles!]!
}

"aggregate fields of \"dbo.UserRoles\""
type dbo_UserRoles_aggregate_fields {
    avg: dbo_UserRoles_avg_fields
    count(columns: [dbo_UserRoles_select_column!], distinct: Boolean): Int
    max: dbo_UserRoles_max_fields
    min: dbo_UserRoles_min_fields
    stddev: dbo_UserRoles_stddev_fields
    stddev_pop: dbo_UserRoles_stddev_pop_fields
    stddev_samp: dbo_UserRoles_stddev_samp_fields
    sum: dbo_UserRoles_sum_fields
    var_pop: dbo_UserRoles_var_pop_fields
    var_samp: dbo_UserRoles_var_samp_fields
    variance: dbo_UserRoles_variance_fields
}

"aggregate avg on columns"
type dbo_UserRoles_avg_fields {
    RoleId: Float
}

"aggregate max on columns"
type dbo_UserRoles_max_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    RoleId: smallint
    UserUid: uuid
}

"aggregate min on columns"
type dbo_UserRoles_min_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    RoleId: smallint
    UserUid: uuid
}

"response of any mutation on the table \"dbo.UserRoles\""
type dbo_UserRoles_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserRoles!]!
}

"aggregate stddev on columns"
type dbo_UserRoles_stddev_fields {
    RoleId: Float
}

"aggregate stddev_pop on columns"
type dbo_UserRoles_stddev_pop_fields {
    RoleId: Float
}

"aggregate stddev_samp on columns"
type dbo_UserRoles_stddev_samp_fields {
    RoleId: Float
}

"aggregate sum on columns"
type dbo_UserRoles_sum_fields {
    RoleId: smallint
}

"aggregate var_pop on columns"
type dbo_UserRoles_var_pop_fields {
    RoleId: Float
}

"aggregate var_samp on columns"
type dbo_UserRoles_var_samp_fields {
    RoleId: Float
}

"aggregate variance on columns"
type dbo_UserRoles_variance_fields {
    RoleId: Float
}

"columns and relationships of \"dbo.UserTransactions\""
type dbo_UserTransactions {
    "An object relationship"
    Account: dbo_Accounts!
    AccountUid: uuid!
    Amount: Int!
    CreatedUtcDateTime: timestamp!
    Description: String
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An object relationship"
    MoneyOperationType: dbo_MoneyOperationTypes!
    OperationTypeUid: uuid!
    Uid: uuid!
}

"aggregated selection of \"dbo.UserTransactions\""
type dbo_UserTransactions_aggregate {
    aggregate: dbo_UserTransactions_aggregate_fields
    nodes: [dbo_UserTransactions!]!
}

"aggregate fields of \"dbo.UserTransactions\""
type dbo_UserTransactions_aggregate_fields {
    avg: dbo_UserTransactions_avg_fields
    count(columns: [dbo_UserTransactions_select_column!], distinct: Boolean): Int
    max: dbo_UserTransactions_max_fields
    min: dbo_UserTransactions_min_fields
    stddev: dbo_UserTransactions_stddev_fields
    stddev_pop: dbo_UserTransactions_stddev_pop_fields
    stddev_samp: dbo_UserTransactions_stddev_samp_fields
    sum: dbo_UserTransactions_sum_fields
    var_pop: dbo_UserTransactions_var_pop_fields
    var_samp: dbo_UserTransactions_var_samp_fields
    variance: dbo_UserTransactions_variance_fields
}

"aggregate avg on columns"
type dbo_UserTransactions_avg_fields {
    Amount: Float
}

"aggregate max on columns"
type dbo_UserTransactions_max_fields {
    AccountUid: uuid
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    OperationTypeUid: uuid
    Uid: uuid
}

"aggregate min on columns"
type dbo_UserTransactions_min_fields {
    AccountUid: uuid
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    OperationTypeUid: uuid
    Uid: uuid
}

"response of any mutation on the table \"dbo.UserTransactions\""
type dbo_UserTransactions_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_UserTransactions!]!
}

"aggregate stddev on columns"
type dbo_UserTransactions_stddev_fields {
    Amount: Float
}

"aggregate stddev_pop on columns"
type dbo_UserTransactions_stddev_pop_fields {
    Amount: Float
}

"aggregate stddev_samp on columns"
type dbo_UserTransactions_stddev_samp_fields {
    Amount: Float
}

"aggregate sum on columns"
type dbo_UserTransactions_sum_fields {
    Amount: Int
}

"aggregate var_pop on columns"
type dbo_UserTransactions_var_pop_fields {
    Amount: Float
}

"aggregate var_samp on columns"
type dbo_UserTransactions_var_samp_fields {
    Amount: Float
}

"aggregate variance on columns"
type dbo_UserTransactions_variance_fields {
    Amount: Float
}

"columns and relationships of \"dbo.Users\""
type dbo_Users {
    "An array relationship"
    Accounts(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): [dbo_Accounts!]!
    "An aggregated array relationship"
    Accounts_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): dbo_Accounts_aggregate!
    CreatedUtcDateTime: timestamp!
    "An array relationship"
    FirebaseTokens(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): [dbo_FirebaseTokens!]!
    "An aggregated array relationship"
    FirebaseTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): dbo_FirebaseTokens_aggregate!
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    "An array relationship"
    Operations(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "An aggregated array relationship"
    Operations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    RefCode: String
    "An array relationship"
    ReferallDeviceGuids(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): [dbo_ReferallDeviceGuid!]!
    "An aggregated array relationship"
    ReferallDeviceGuids_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): dbo_ReferallDeviceGuid_aggregate!
    "An array relationship"
    Registrations(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): [dbo_Registrations!]!
    "An aggregated array relationship"
    Registrations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): dbo_Registrations_aggregate!
    "An array relationship"
    ReservationCards(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): [dbo_ReservationCards!]!
    "An aggregated array relationship"
    ReservationCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): dbo_ReservationCards_aggregate!
    SecretHash: String!
    SecretSalt: String!
    Status: Int!
    Uid: uuid!
    "An array relationship"
    UnistreamClientHistories(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): [dbo_UnistreamClientHistory!]!
    "An aggregated array relationship"
    UnistreamClientHistories_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): dbo_UnistreamClientHistory_aggregate!
    "An array relationship"
    UserCards(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): [dbo_UserCards!]!
    "An aggregated array relationship"
    UserCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): dbo_UserCards_aggregate!
    "An array relationship"
    UserDetails(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): [dbo_UserDetails!]!
    UserDetailsUid: uuid
    "An aggregated array relationship"
    UserDetails_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): dbo_UserDetails_aggregate!
    "An array relationship"
    UserDeviceGuids(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): [dbo_UserDeviceGuids!]!
    "An aggregated array relationship"
    UserDeviceGuids_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): dbo_UserDeviceGuids_aggregate!
    UserName: String!
    "An array relationship"
    UserPhoneVerifications(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): [dbo_UserPhoneVerifications!]!
    "An aggregated array relationship"
    UserPhoneVerifications_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): dbo_UserPhoneVerifications_aggregate!
    "An array relationship"
    UserRoles(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): [dbo_UserRoles!]!
    "An aggregated array relationship"
    UserRoles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): dbo_UserRoles_aggregate!
    "An array relationship"
    operationsByWhomuid(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "An aggregated array relationship"
    operationsByWhomuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    "An array relationship"
    userDetailsByRefuserUid(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): [dbo_UserDetails!]!
    "An aggregated array relationship"
    userDetailsByRefuserUid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): dbo_UserDetails_aggregate!
}

"aggregated selection of \"dbo.Users\""
type dbo_Users_aggregate {
    aggregate: dbo_Users_aggregate_fields
    nodes: [dbo_Users!]!
}

"aggregate fields of \"dbo.Users\""
type dbo_Users_aggregate_fields {
    avg: dbo_Users_avg_fields
    count(columns: [dbo_Users_select_column!], distinct: Boolean): Int
    max: dbo_Users_max_fields
    min: dbo_Users_min_fields
    stddev: dbo_Users_stddev_fields
    stddev_pop: dbo_Users_stddev_pop_fields
    stddev_samp: dbo_Users_stddev_samp_fields
    sum: dbo_Users_sum_fields
    var_pop: dbo_Users_var_pop_fields
    var_samp: dbo_Users_var_samp_fields
    variance: dbo_Users_variance_fields
}

"aggregate avg on columns"
type dbo_Users_avg_fields {
    Status: Float
}

"aggregate max on columns"
type dbo_Users_max_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    RefCode: String
    SecretHash: String
    SecretSalt: String
    Status: Int
    Uid: uuid
    UserDetailsUid: uuid
    UserName: String
}

"aggregate min on columns"
type dbo_Users_min_fields {
    CreatedUtcDateTime: timestamp
    ModifiedUtcDateTime: timestamp
    RefCode: String
    SecretHash: String
    SecretSalt: String
    Status: Int
    Uid: uuid
    UserDetailsUid: uuid
    UserName: String
}

"response of any mutation on the table \"dbo.Users\""
type dbo_Users_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_Users!]!
}

"aggregate stddev on columns"
type dbo_Users_stddev_fields {
    Status: Float
}

"aggregate stddev_pop on columns"
type dbo_Users_stddev_pop_fields {
    Status: Float
}

"aggregate stddev_samp on columns"
type dbo_Users_stddev_samp_fields {
    Status: Float
}

"aggregate sum on columns"
type dbo_Users_sum_fields {
    Status: Int
}

"aggregate var_pop on columns"
type dbo_Users_var_pop_fields {
    Status: Float
}

"aggregate var_samp on columns"
type dbo_Users_var_samp_fields {
    Status: Float
}

"aggregate variance on columns"
type dbo_Users_variance_fields {
    Status: Float
}

"columns and relationships of \"dbo.ZamZamMoneyTransferTransactions\""
type dbo_ZamZamMoneyTransferTransactions {
    "An object relationship"
    Account: dbo_Accounts!
    Amount: Int!
    CreatedUtcDateTime: timestamp!
    Description: String
    IsDeleted: Boolean!
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid!
    SenderAccountUid: uuid!
    Status: Int!
    Uid: uuid!
    "An object relationship"
    accountByRecipientaccountuid: dbo_Accounts!
}

"aggregated selection of \"dbo.ZamZamMoneyTransferTransactions\""
type dbo_ZamZamMoneyTransferTransactions_aggregate {
    aggregate: dbo_ZamZamMoneyTransferTransactions_aggregate_fields
    nodes: [dbo_ZamZamMoneyTransferTransactions!]!
}

"aggregate fields of \"dbo.ZamZamMoneyTransferTransactions\""
type dbo_ZamZamMoneyTransferTransactions_aggregate_fields {
    avg: dbo_ZamZamMoneyTransferTransactions_avg_fields
    count(columns: [dbo_ZamZamMoneyTransferTransactions_select_column!], distinct: Boolean): Int
    max: dbo_ZamZamMoneyTransferTransactions_max_fields
    min: dbo_ZamZamMoneyTransferTransactions_min_fields
    stddev: dbo_ZamZamMoneyTransferTransactions_stddev_fields
    stddev_pop: dbo_ZamZamMoneyTransferTransactions_stddev_pop_fields
    stddev_samp: dbo_ZamZamMoneyTransferTransactions_stddev_samp_fields
    sum: dbo_ZamZamMoneyTransferTransactions_sum_fields
    var_pop: dbo_ZamZamMoneyTransferTransactions_var_pop_fields
    var_samp: dbo_ZamZamMoneyTransferTransactions_var_samp_fields
    variance: dbo_ZamZamMoneyTransferTransactions_variance_fields
}

"aggregate avg on columns"
type dbo_ZamZamMoneyTransferTransactions_avg_fields {
    Amount: Float
    Status: Float
}

"aggregate max on columns"
type dbo_ZamZamMoneyTransferTransactions_max_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"aggregate min on columns"
type dbo_ZamZamMoneyTransferTransactions_min_fields {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"response of any mutation on the table \"dbo.ZamZamMoneyTransferTransactions\""
type dbo_ZamZamMoneyTransferTransactions_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo_ZamZamMoneyTransferTransactions!]!
}

"aggregate stddev on columns"
type dbo_ZamZamMoneyTransferTransactions_stddev_fields {
    Amount: Float
    Status: Float
}

"aggregate stddev_pop on columns"
type dbo_ZamZamMoneyTransferTransactions_stddev_pop_fields {
    Amount: Float
    Status: Float
}

"aggregate stddev_samp on columns"
type dbo_ZamZamMoneyTransferTransactions_stddev_samp_fields {
    Amount: Float
    Status: Float
}

"aggregate sum on columns"
type dbo_ZamZamMoneyTransferTransactions_sum_fields {
    Amount: Int
    Status: Int
}

"aggregate var_pop on columns"
type dbo_ZamZamMoneyTransferTransactions_var_pop_fields {
    Amount: Float
    Status: Float
}

"aggregate var_samp on columns"
type dbo_ZamZamMoneyTransferTransactions_var_samp_fields {
    Amount: Float
    Status: Float
}

"aggregate variance on columns"
type dbo_ZamZamMoneyTransferTransactions_variance_fields {
    Amount: Float
    Status: Float
}

"columns and relationships of \"dbo.__MigrationHistory\""
type dbo___MigrationHistory {
    ContextKey: String!
    MigrationId: String!
    Model: bytea!
    ProductVersion: String!
}

"aggregated selection of \"dbo.__MigrationHistory\""
type dbo___MigrationHistory_aggregate {
    aggregate: dbo___MigrationHistory_aggregate_fields
    nodes: [dbo___MigrationHistory!]!
}

"aggregate fields of \"dbo.__MigrationHistory\""
type dbo___MigrationHistory_aggregate_fields {
    count(columns: [dbo___MigrationHistory_select_column!], distinct: Boolean): Int
    max: dbo___MigrationHistory_max_fields
    min: dbo___MigrationHistory_min_fields
}

"aggregate max on columns"
type dbo___MigrationHistory_max_fields {
    ContextKey: String
    MigrationId: String
    ProductVersion: String
}

"aggregate min on columns"
type dbo___MigrationHistory_min_fields {
    ContextKey: String
    MigrationId: String
    ProductVersion: String
}

"response of any mutation on the table \"dbo.__MigrationHistory\""
type dbo___MigrationHistory_mutation_response {
    "number of affected rows by the mutation"
    affected_rows: Int!
    "data of the affected rows by the mutation"
    returning: [dbo___MigrationHistory!]!
}

"mutation root"
type mutation_root {
    "delete data from the table: \"dbo.AccountTypes\""
    delete_dbo_AccountTypes(
        "filter the rows which have to be deleted"
        where: dbo_AccountTypes_bool_exp!
    ): dbo_AccountTypes_mutation_response
    "delete single row from the table: \"dbo.AccountTypes\""
    delete_dbo_AccountTypes_by_pk(Uid: uuid!): dbo_AccountTypes
    "delete data from the table: \"dbo.Accounts\""
    delete_dbo_Accounts(
        "filter the rows which have to be deleted"
        where: dbo_Accounts_bool_exp!
    ): dbo_Accounts_mutation_response
    "delete single row from the table: \"dbo.Accounts\""
    delete_dbo_Accounts_by_pk(Uid: uuid!): dbo_Accounts
    "delete data from the table: \"dbo.Best2PayOperations\""
    delete_dbo_Best2PayOperations(
        "filter the rows which have to be deleted"
        where: dbo_Best2PayOperations_bool_exp!
    ): dbo_Best2PayOperations_mutation_response
    "delete single row from the table: \"dbo.Best2PayOperations\""
    delete_dbo_Best2PayOperations_by_pk(OperationUid: uuid!): dbo_Best2PayOperations
    "delete data from the table: \"dbo.Clients\""
    delete_dbo_Clients(
        "filter the rows which have to be deleted"
        where: dbo_Clients_bool_exp!
    ): dbo_Clients_mutation_response
    "delete single row from the table: \"dbo.Clients\""
    delete_dbo_Clients_by_pk(Uid: uuid!): dbo_Clients
    "delete data from the table: \"dbo.Countries\""
    delete_dbo_Countries(
        "filter the rows which have to be deleted"
        where: dbo_Countries_bool_exp!
    ): dbo_Countries_mutation_response
    "delete single row from the table: \"dbo.Countries\""
    delete_dbo_Countries_by_pk(Uid: uuid!): dbo_Countries
    "delete data from the table: \"dbo.Currecies\""
    delete_dbo_Currecies(
        "filter the rows which have to be deleted"
        where: dbo_Currecies_bool_exp!
    ): dbo_Currecies_mutation_response
    "delete single row from the table: \"dbo.Currecies\""
    delete_dbo_Currecies_by_pk(Uid: uuid!): dbo_Currecies
    "delete data from the table: \"dbo.CurrentCommissionPayments\""
    delete_dbo_CurrentCommissionPayments(
        "filter the rows which have to be deleted"
        where: dbo_CurrentCommissionPayments_bool_exp!
    ): dbo_CurrentCommissionPayments_mutation_response
    "delete single row from the table: \"dbo.CurrentCommissionPayments\""
    delete_dbo_CurrentCommissionPayments_by_pk(PaymentId: bigint!): dbo_CurrentCommissionPayments
    "delete data from the table: \"dbo.FirebaseTokens\""
    delete_dbo_FirebaseTokens(
        "filter the rows which have to be deleted"
        where: dbo_FirebaseTokens_bool_exp!
    ): dbo_FirebaseTokens_mutation_response
    "delete single row from the table: \"dbo.FirebaseTokens\""
    delete_dbo_FirebaseTokens_by_pk(Token: String!, UserUid: uuid!): dbo_FirebaseTokens
    "delete data from the table: \"dbo.InternationalMoneyTransferTransactions\""
    delete_dbo_InternationalMoneyTransferTransactions(
        "filter the rows which have to be deleted"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp!
    ): dbo_InternationalMoneyTransferTransactions_mutation_response
    "delete single row from the table: \"dbo.InternationalMoneyTransferTransactions\""
    delete_dbo_InternationalMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_InternationalMoneyTransferTransactions
    "delete data from the table: \"dbo.Limits\""
    delete_dbo_Limits(
        "filter the rows which have to be deleted"
        where: dbo_Limits_bool_exp!
    ): dbo_Limits_mutation_response
    "delete single row from the table: \"dbo.Limits\""
    delete_dbo_Limits_by_pk(Uid: uuid!): dbo_Limits
    "delete data from the table: \"dbo.Managers\""
    delete_dbo_Managers(
        "filter the rows which have to be deleted"
        where: dbo_Managers_bool_exp!
    ): dbo_Managers_mutation_response
    "delete single row from the table: \"dbo.Managers\""
    delete_dbo_Managers_by_pk(Id: Int!): dbo_Managers
    "delete data from the table: \"dbo.MoneyOperationTypes\""
    delete_dbo_MoneyOperationTypes(
        "filter the rows which have to be deleted"
        where: dbo_MoneyOperationTypes_bool_exp!
    ): dbo_MoneyOperationTypes_mutation_response
    "delete single row from the table: \"dbo.MoneyOperationTypes\""
    delete_dbo_MoneyOperationTypes_by_pk(Uid: uuid!): dbo_MoneyOperationTypes
    "delete data from the table: \"dbo.OperationEntityShortLinkEntities\""
    delete_dbo_OperationEntityShortLinkEntities(
        "filter the rows which have to be deleted"
        where: dbo_OperationEntityShortLinkEntities_bool_exp!
    ): dbo_OperationEntityShortLinkEntities_mutation_response
    "delete single row from the table: \"dbo.OperationEntityShortLinkEntities\""
    delete_dbo_OperationEntityShortLinkEntities_by_pk(OperationEntity_Uid: uuid!, ShortLinkEntity_Uid: uuid!): dbo_OperationEntityShortLinkEntities
    "delete data from the table: \"dbo.Operations\""
    delete_dbo_Operations(
        "filter the rows which have to be deleted"
        where: dbo_Operations_bool_exp!
    ): dbo_Operations_mutation_response
    "delete single row from the table: \"dbo.Operations\""
    delete_dbo_Operations_by_pk(Uid: uuid!): dbo_Operations
    "delete data from the table: \"dbo.PaymentHistory\""
    delete_dbo_PaymentHistory(
        "filter the rows which have to be deleted"
        where: dbo_PaymentHistory_bool_exp!
    ): dbo_PaymentHistory_mutation_response
    "delete single row from the table: \"dbo.PaymentHistory\""
    delete_dbo_PaymentHistory_by_pk(Uid: uuid!): dbo_PaymentHistory
    "delete data from the table: \"dbo.PhoneNumberVerifications\""
    delete_dbo_PhoneNumberVerifications(
        "filter the rows which have to be deleted"
        where: dbo_PhoneNumberVerifications_bool_exp!
    ): dbo_PhoneNumberVerifications_mutation_response
    "delete single row from the table: \"dbo.PhoneNumberVerifications\""
    delete_dbo_PhoneNumberVerifications_by_pk(Uid: uuid!): dbo_PhoneNumberVerifications
    "delete data from the table: \"dbo.ReferallDeviceGuid\""
    delete_dbo_ReferallDeviceGuid(
        "filter the rows which have to be deleted"
        where: dbo_ReferallDeviceGuid_bool_exp!
    ): dbo_ReferallDeviceGuid_mutation_response
    "delete single row from the table: \"dbo.ReferallDeviceGuid\""
    delete_dbo_ReferallDeviceGuid_by_pk(Id: uuid!): dbo_ReferallDeviceGuid
    "delete data from the table: \"dbo.RefreshTokens\""
    delete_dbo_RefreshTokens(
        "filter the rows which have to be deleted"
        where: dbo_RefreshTokens_bool_exp!
    ): dbo_RefreshTokens_mutation_response
    "delete single row from the table: \"dbo.RefreshTokens\""
    delete_dbo_RefreshTokens_by_pk(Uid: uuid!): dbo_RefreshTokens
    "delete data from the table: \"dbo.Registrations\""
    delete_dbo_Registrations(
        "filter the rows which have to be deleted"
        where: dbo_Registrations_bool_exp!
    ): dbo_Registrations_mutation_response
    "delete single row from the table: \"dbo.Registrations\""
    delete_dbo_Registrations_by_pk(Uid: uuid!): dbo_Registrations
    "delete data from the table: \"dbo.ReservationCards\""
    delete_dbo_ReservationCards(
        "filter the rows which have to be deleted"
        where: dbo_ReservationCards_bool_exp!
    ): dbo_ReservationCards_mutation_response
    "delete single row from the table: \"dbo.ReservationCards\""
    delete_dbo_ReservationCards_by_pk(CardType: Int!, UserUid: uuid!): dbo_ReservationCards
    "delete data from the table: \"dbo.Roles\""
    delete_dbo_Roles(
        "filter the rows which have to be deleted"
        where: dbo_Roles_bool_exp!
    ): dbo_Roles_mutation_response
    "delete single row from the table: \"dbo.Roles\""
    delete_dbo_Roles_by_pk(Id: smallint!): dbo_Roles
    "delete data from the table: \"dbo.ShortLinks\""
    delete_dbo_ShortLinks(
        "filter the rows which have to be deleted"
        where: dbo_ShortLinks_bool_exp!
    ): dbo_ShortLinks_mutation_response
    "delete single row from the table: \"dbo.ShortLinks\""
    delete_dbo_ShortLinks_by_pk(Uid: uuid!): dbo_ShortLinks
    "delete data from the table: \"dbo.Transactions\""
    delete_dbo_Transactions(
        "filter the rows which have to be deleted"
        where: dbo_Transactions_bool_exp!
    ): dbo_Transactions_mutation_response
    "delete single row from the table: \"dbo.Transactions\""
    delete_dbo_Transactions_by_pk(Uid: uuid!): dbo_Transactions
    "delete data from the table: \"dbo.UnistreamClientHistory\""
    delete_dbo_UnistreamClientHistory(
        "filter the rows which have to be deleted"
        where: dbo_UnistreamClientHistory_bool_exp!
    ): dbo_UnistreamClientHistory_mutation_response
    "delete single row from the table: \"dbo.UnistreamClientHistory\""
    delete_dbo_UnistreamClientHistory_by_pk(Uid: uuid!): dbo_UnistreamClientHistory
    "delete data from the table: \"dbo.UnistreamOperations\""
    delete_dbo_UnistreamOperations(
        "filter the rows which have to be deleted"
        where: dbo_UnistreamOperations_bool_exp!
    ): dbo_UnistreamOperations_mutation_response
    "delete single row from the table: \"dbo.UnistreamOperations\""
    delete_dbo_UnistreamOperations_by_pk(OperationUid: uuid!): dbo_UnistreamOperations
    "delete data from the table: \"dbo.UserCards\""
    delete_dbo_UserCards(
        "filter the rows which have to be deleted"
        where: dbo_UserCards_bool_exp!
    ): dbo_UserCards_mutation_response
    "delete single row from the table: \"dbo.UserCards\""
    delete_dbo_UserCards_by_pk(Uid: uuid!): dbo_UserCards
    "delete data from the table: \"dbo.UserDetails\""
    delete_dbo_UserDetails(
        "filter the rows which have to be deleted"
        where: dbo_UserDetails_bool_exp!
    ): dbo_UserDetails_mutation_response
    "delete data from the table: \"dbo.UserDetailsAddresses\""
    delete_dbo_UserDetailsAddresses(
        "filter the rows which have to be deleted"
        where: dbo_UserDetailsAddresses_bool_exp!
    ): dbo_UserDetailsAddresses_mutation_response
    "delete single row from the table: \"dbo.UserDetailsAddresses\""
    delete_dbo_UserDetailsAddresses_by_pk(Uid: uuid!): dbo_UserDetailsAddresses
    "delete data from the table: \"dbo.UserDetailsDocuments\""
    delete_dbo_UserDetailsDocuments(
        "filter the rows which have to be deleted"
        where: dbo_UserDetailsDocuments_bool_exp!
    ): dbo_UserDetailsDocuments_mutation_response
    "delete single row from the table: \"dbo.UserDetailsDocuments\""
    delete_dbo_UserDetailsDocuments_by_pk(Uid: uuid!): dbo_UserDetailsDocuments
    "delete single row from the table: \"dbo.UserDetails\""
    delete_dbo_UserDetails_by_pk(UserUid: uuid!): dbo_UserDetails
    "delete data from the table: \"dbo.UserDeviceGuids\""
    delete_dbo_UserDeviceGuids(
        "filter the rows which have to be deleted"
        where: dbo_UserDeviceGuids_bool_exp!
    ): dbo_UserDeviceGuids_mutation_response
    "delete single row from the table: \"dbo.UserDeviceGuids\""
    delete_dbo_UserDeviceGuids_by_pk(Id: uuid!): dbo_UserDeviceGuids
    "delete data from the table: \"dbo.UserPhoneVerifications\""
    delete_dbo_UserPhoneVerifications(
        "filter the rows which have to be deleted"
        where: dbo_UserPhoneVerifications_bool_exp!
    ): dbo_UserPhoneVerifications_mutation_response
    "delete single row from the table: \"dbo.UserPhoneVerifications\""
    delete_dbo_UserPhoneVerifications_by_pk(Uid: uuid!): dbo_UserPhoneVerifications
    "delete data from the table: \"dbo.UserRoles\""
    delete_dbo_UserRoles(
        "filter the rows which have to be deleted"
        where: dbo_UserRoles_bool_exp!
    ): dbo_UserRoles_mutation_response
    "delete single row from the table: \"dbo.UserRoles\""
    delete_dbo_UserRoles_by_pk(RoleId: smallint!, UserUid: uuid!): dbo_UserRoles
    "delete data from the table: \"dbo.UserTransactions\""
    delete_dbo_UserTransactions(
        "filter the rows which have to be deleted"
        where: dbo_UserTransactions_bool_exp!
    ): dbo_UserTransactions_mutation_response
    "delete single row from the table: \"dbo.UserTransactions\""
    delete_dbo_UserTransactions_by_pk(Uid: uuid!): dbo_UserTransactions
    "delete data from the table: \"dbo.Users\""
    delete_dbo_Users(
        "filter the rows which have to be deleted"
        where: dbo_Users_bool_exp!
    ): dbo_Users_mutation_response
    "delete single row from the table: \"dbo.Users\""
    delete_dbo_Users_by_pk(Uid: uuid!): dbo_Users
    "delete data from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    delete_dbo_ZamZamMoneyTransferTransactions(
        "filter the rows which have to be deleted"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp!
    ): dbo_ZamZamMoneyTransferTransactions_mutation_response
    "delete single row from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    delete_dbo_ZamZamMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_ZamZamMoneyTransferTransactions
    "delete data from the table: \"dbo.__MigrationHistory\""
    delete_dbo___MigrationHistory(
        "filter the rows which have to be deleted"
        where: dbo___MigrationHistory_bool_exp!
    ): dbo___MigrationHistory_mutation_response
    "delete single row from the table: \"dbo.__MigrationHistory\""
    delete_dbo___MigrationHistory_by_pk(ContextKey: String!, MigrationId: String!): dbo___MigrationHistory
    "insert data into the table: \"dbo.AccountTypes\""
    insert_dbo_AccountTypes(
        "the rows to be inserted"
        objects: [dbo_AccountTypes_insert_input!]!,
        "on conflict condition"
        on_conflict: dbo_AccountTypes_on_conflict
    ): dbo_AccountTypes_mutation_response
    "insert a single row into the table: \"dbo.AccountTypes\""
    insert_dbo_AccountTypes_one(
        "the row to be inserted"
        object: dbo_AccountTypes_insert_input!,
        "on conflict condition"
        on_conflict: dbo_AccountTypes_on_conflict
    ): dbo_AccountTypes
    "insert data into the table: \"dbo.Accounts\""
    insert_dbo_Accounts(
        "the rows to be inserted"
        objects: [dbo_Accounts_insert_input!]!
    ): dbo_Accounts_mutation_response
    "insert a single row into the table: \"dbo.Accounts\""
    insert_dbo_Accounts_one(
        "the row to be inserted"
        object: dbo_Accounts_insert_input!
    ): dbo_Accounts
    "insert data into the table: \"dbo.Best2PayOperations\""
    insert_dbo_Best2PayOperations(
        "the rows to be inserted"
        objects: [dbo_Best2PayOperations_insert_input!]!
    ): dbo_Best2PayOperations_mutation_response
    "insert a single row into the table: \"dbo.Best2PayOperations\""
    insert_dbo_Best2PayOperations_one(
        "the row to be inserted"
        object: dbo_Best2PayOperations_insert_input!
    ): dbo_Best2PayOperations
    "insert data into the table: \"dbo.Clients\""
    insert_dbo_Clients(
        "the rows to be inserted"
        objects: [dbo_Clients_insert_input!]!,
        "on conflict condition"
        on_conflict: dbo_Clients_on_conflict
    ): dbo_Clients_mutation_response
    "insert a single row into the table: \"dbo.Clients\""
    insert_dbo_Clients_one(
        "the row to be inserted"
        object: dbo_Clients_insert_input!,
        "on conflict condition"
        on_conflict: dbo_Clients_on_conflict
    ): dbo_Clients
    "insert data into the table: \"dbo.Countries\""
    insert_dbo_Countries(
        "the rows to be inserted"
        objects: [dbo_Countries_insert_input!]!
    ): dbo_Countries_mutation_response
    "insert a single row into the table: \"dbo.Countries\""
    insert_dbo_Countries_one(
        "the row to be inserted"
        object: dbo_Countries_insert_input!
    ): dbo_Countries
    "insert data into the table: \"dbo.Currecies\""
    insert_dbo_Currecies(
        "the rows to be inserted"
        objects: [dbo_Currecies_insert_input!]!,
        "on conflict condition"
        on_conflict: dbo_Currecies_on_conflict
    ): dbo_Currecies_mutation_response
    "insert a single row into the table: \"dbo.Currecies\""
    insert_dbo_Currecies_one(
        "the row to be inserted"
        object: dbo_Currecies_insert_input!,
        "on conflict condition"
        on_conflict: dbo_Currecies_on_conflict
    ): dbo_Currecies
    "insert data into the table: \"dbo.CurrentCommissionPayments\""
    insert_dbo_CurrentCommissionPayments(
        "the rows to be inserted"
        objects: [dbo_CurrentCommissionPayments_insert_input!]!
    ): dbo_CurrentCommissionPayments_mutation_response
    "insert a single row into the table: \"dbo.CurrentCommissionPayments\""
    insert_dbo_CurrentCommissionPayments_one(
        "the row to be inserted"
        object: dbo_CurrentCommissionPayments_insert_input!
    ): dbo_CurrentCommissionPayments
    "insert data into the table: \"dbo.FirebaseTokens\""
    insert_dbo_FirebaseTokens(
        "the rows to be inserted"
        objects: [dbo_FirebaseTokens_insert_input!]!
    ): dbo_FirebaseTokens_mutation_response
    "insert a single row into the table: \"dbo.FirebaseTokens\""
    insert_dbo_FirebaseTokens_one(
        "the row to be inserted"
        object: dbo_FirebaseTokens_insert_input!
    ): dbo_FirebaseTokens
    "insert data into the table: \"dbo.InternationalMoneyTransferTransactions\""
    insert_dbo_InternationalMoneyTransferTransactions(
        "the rows to be inserted"
        objects: [dbo_InternationalMoneyTransferTransactions_insert_input!]!
    ): dbo_InternationalMoneyTransferTransactions_mutation_response
    "insert a single row into the table: \"dbo.InternationalMoneyTransferTransactions\""
    insert_dbo_InternationalMoneyTransferTransactions_one(
        "the row to be inserted"
        object: dbo_InternationalMoneyTransferTransactions_insert_input!
    ): dbo_InternationalMoneyTransferTransactions
    "insert data into the table: \"dbo.Limits\""
    insert_dbo_Limits(
        "the rows to be inserted"
        objects: [dbo_Limits_insert_input!]!
    ): dbo_Limits_mutation_response
    "insert a single row into the table: \"dbo.Limits\""
    insert_dbo_Limits_one(
        "the row to be inserted"
        object: dbo_Limits_insert_input!
    ): dbo_Limits
    "insert data into the table: \"dbo.Managers\""
    insert_dbo_Managers(
        "the rows to be inserted"
        objects: [dbo_Managers_insert_input!]!
    ): dbo_Managers_mutation_response
    "insert a single row into the table: \"dbo.Managers\""
    insert_dbo_Managers_one(
        "the row to be inserted"
        object: dbo_Managers_insert_input!
    ): dbo_Managers
    "insert data into the table: \"dbo.MoneyOperationTypes\""
    insert_dbo_MoneyOperationTypes(
        "the rows to be inserted"
        objects: [dbo_MoneyOperationTypes_insert_input!]!
    ): dbo_MoneyOperationTypes_mutation_response
    "insert a single row into the table: \"dbo.MoneyOperationTypes\""
    insert_dbo_MoneyOperationTypes_one(
        "the row to be inserted"
        object: dbo_MoneyOperationTypes_insert_input!
    ): dbo_MoneyOperationTypes
    "insert data into the table: \"dbo.OperationEntityShortLinkEntities\""
    insert_dbo_OperationEntityShortLinkEntities(
        "the rows to be inserted"
        objects: [dbo_OperationEntityShortLinkEntities_insert_input!]!
    ): dbo_OperationEntityShortLinkEntities_mutation_response
    "insert a single row into the table: \"dbo.OperationEntityShortLinkEntities\""
    insert_dbo_OperationEntityShortLinkEntities_one(
        "the row to be inserted"
        object: dbo_OperationEntityShortLinkEntities_insert_input!
    ): dbo_OperationEntityShortLinkEntities
    "insert data into the table: \"dbo.Operations\""
    insert_dbo_Operations(
        "the rows to be inserted"
        objects: [dbo_Operations_insert_input!]!
    ): dbo_Operations_mutation_response
    "insert a single row into the table: \"dbo.Operations\""
    insert_dbo_Operations_one(
        "the row to be inserted"
        object: dbo_Operations_insert_input!
    ): dbo_Operations
    "insert data into the table: \"dbo.PaymentHistory\""
    insert_dbo_PaymentHistory(
        "the rows to be inserted"
        objects: [dbo_PaymentHistory_insert_input!]!
    ): dbo_PaymentHistory_mutation_response
    "insert a single row into the table: \"dbo.PaymentHistory\""
    insert_dbo_PaymentHistory_one(
        "the row to be inserted"
        object: dbo_PaymentHistory_insert_input!
    ): dbo_PaymentHistory
    "insert data into the table: \"dbo.PhoneNumberVerifications\""
    insert_dbo_PhoneNumberVerifications(
        "the rows to be inserted"
        objects: [dbo_PhoneNumberVerifications_insert_input!]!
    ): dbo_PhoneNumberVerifications_mutation_response
    "insert a single row into the table: \"dbo.PhoneNumberVerifications\""
    insert_dbo_PhoneNumberVerifications_one(
        "the row to be inserted"
        object: dbo_PhoneNumberVerifications_insert_input!
    ): dbo_PhoneNumberVerifications
    "insert data into the table: \"dbo.ReferallDeviceGuid\""
    insert_dbo_ReferallDeviceGuid(
        "the rows to be inserted"
        objects: [dbo_ReferallDeviceGuid_insert_input!]!
    ): dbo_ReferallDeviceGuid_mutation_response
    "insert a single row into the table: \"dbo.ReferallDeviceGuid\""
    insert_dbo_ReferallDeviceGuid_one(
        "the row to be inserted"
        object: dbo_ReferallDeviceGuid_insert_input!
    ): dbo_ReferallDeviceGuid
    "insert data into the table: \"dbo.RefreshTokens\""
    insert_dbo_RefreshTokens(
        "the rows to be inserted"
        objects: [dbo_RefreshTokens_insert_input!]!
    ): dbo_RefreshTokens_mutation_response
    "insert a single row into the table: \"dbo.RefreshTokens\""
    insert_dbo_RefreshTokens_one(
        "the row to be inserted"
        object: dbo_RefreshTokens_insert_input!
    ): dbo_RefreshTokens
    "insert data into the table: \"dbo.Registrations\""
    insert_dbo_Registrations(
        "the rows to be inserted"
        objects: [dbo_Registrations_insert_input!]!
    ): dbo_Registrations_mutation_response
    "insert a single row into the table: \"dbo.Registrations\""
    insert_dbo_Registrations_one(
        "the row to be inserted"
        object: dbo_Registrations_insert_input!
    ): dbo_Registrations
    "insert data into the table: \"dbo.ReservationCards\""
    insert_dbo_ReservationCards(
        "the rows to be inserted"
        objects: [dbo_ReservationCards_insert_input!]!
    ): dbo_ReservationCards_mutation_response
    "insert a single row into the table: \"dbo.ReservationCards\""
    insert_dbo_ReservationCards_one(
        "the row to be inserted"
        object: dbo_ReservationCards_insert_input!
    ): dbo_ReservationCards
    "insert data into the table: \"dbo.Roles\""
    insert_dbo_Roles(
        "the rows to be inserted"
        objects: [dbo_Roles_insert_input!]!
    ): dbo_Roles_mutation_response
    "insert a single row into the table: \"dbo.Roles\""
    insert_dbo_Roles_one(
        "the row to be inserted"
        object: dbo_Roles_insert_input!
    ): dbo_Roles
    "insert data into the table: \"dbo.ShortLinks\""
    insert_dbo_ShortLinks(
        "the rows to be inserted"
        objects: [dbo_ShortLinks_insert_input!]!
    ): dbo_ShortLinks_mutation_response
    "insert a single row into the table: \"dbo.ShortLinks\""
    insert_dbo_ShortLinks_one(
        "the row to be inserted"
        object: dbo_ShortLinks_insert_input!
    ): dbo_ShortLinks
    "insert data into the table: \"dbo.Transactions\""
    insert_dbo_Transactions(
        "the rows to be inserted"
        objects: [dbo_Transactions_insert_input!]!
    ): dbo_Transactions_mutation_response
    "insert a single row into the table: \"dbo.Transactions\""
    insert_dbo_Transactions_one(
        "the row to be inserted"
        object: dbo_Transactions_insert_input!
    ): dbo_Transactions
    "insert data into the table: \"dbo.UnistreamClientHistory\""
    insert_dbo_UnistreamClientHistory(
        "the rows to be inserted"
        objects: [dbo_UnistreamClientHistory_insert_input!]!
    ): dbo_UnistreamClientHistory_mutation_response
    "insert a single row into the table: \"dbo.UnistreamClientHistory\""
    insert_dbo_UnistreamClientHistory_one(
        "the row to be inserted"
        object: dbo_UnistreamClientHistory_insert_input!
    ): dbo_UnistreamClientHistory
    "insert data into the table: \"dbo.UnistreamOperations\""
    insert_dbo_UnistreamOperations(
        "the rows to be inserted"
        objects: [dbo_UnistreamOperations_insert_input!]!
    ): dbo_UnistreamOperations_mutation_response
    "insert a single row into the table: \"dbo.UnistreamOperations\""
    insert_dbo_UnistreamOperations_one(
        "the row to be inserted"
        object: dbo_UnistreamOperations_insert_input!
    ): dbo_UnistreamOperations
    "insert data into the table: \"dbo.UserCards\""
    insert_dbo_UserCards(
        "the rows to be inserted"
        objects: [dbo_UserCards_insert_input!]!
    ): dbo_UserCards_mutation_response
    "insert a single row into the table: \"dbo.UserCards\""
    insert_dbo_UserCards_one(
        "the row to be inserted"
        object: dbo_UserCards_insert_input!
    ): dbo_UserCards
    "insert data into the table: \"dbo.UserDetails\""
    insert_dbo_UserDetails(
        "the rows to be inserted"
        objects: [dbo_UserDetails_insert_input!]!
    ): dbo_UserDetails_mutation_response
    "insert data into the table: \"dbo.UserDetailsAddresses\""
    insert_dbo_UserDetailsAddresses(
        "the rows to be inserted"
        objects: [dbo_UserDetailsAddresses_insert_input!]!
    ): dbo_UserDetailsAddresses_mutation_response
    "insert a single row into the table: \"dbo.UserDetailsAddresses\""
    insert_dbo_UserDetailsAddresses_one(
        "the row to be inserted"
        object: dbo_UserDetailsAddresses_insert_input!
    ): dbo_UserDetailsAddresses
    "insert data into the table: \"dbo.UserDetailsDocuments\""
    insert_dbo_UserDetailsDocuments(
        "the rows to be inserted"
        objects: [dbo_UserDetailsDocuments_insert_input!]!
    ): dbo_UserDetailsDocuments_mutation_response
    "insert a single row into the table: \"dbo.UserDetailsDocuments\""
    insert_dbo_UserDetailsDocuments_one(
        "the row to be inserted"
        object: dbo_UserDetailsDocuments_insert_input!
    ): dbo_UserDetailsDocuments
    "insert a single row into the table: \"dbo.UserDetails\""
    insert_dbo_UserDetails_one(
        "the row to be inserted"
        object: dbo_UserDetails_insert_input!
    ): dbo_UserDetails
    "insert data into the table: \"dbo.UserDeviceGuids\""
    insert_dbo_UserDeviceGuids(
        "the rows to be inserted"
        objects: [dbo_UserDeviceGuids_insert_input!]!
    ): dbo_UserDeviceGuids_mutation_response
    "insert a single row into the table: \"dbo.UserDeviceGuids\""
    insert_dbo_UserDeviceGuids_one(
        "the row to be inserted"
        object: dbo_UserDeviceGuids_insert_input!
    ): dbo_UserDeviceGuids
    "insert data into the table: \"dbo.UserPhoneVerifications\""
    insert_dbo_UserPhoneVerifications(
        "the rows to be inserted"
        objects: [dbo_UserPhoneVerifications_insert_input!]!
    ): dbo_UserPhoneVerifications_mutation_response
    "insert a single row into the table: \"dbo.UserPhoneVerifications\""
    insert_dbo_UserPhoneVerifications_one(
        "the row to be inserted"
        object: dbo_UserPhoneVerifications_insert_input!
    ): dbo_UserPhoneVerifications
    "insert data into the table: \"dbo.UserRoles\""
    insert_dbo_UserRoles(
        "the rows to be inserted"
        objects: [dbo_UserRoles_insert_input!]!
    ): dbo_UserRoles_mutation_response
    "insert a single row into the table: \"dbo.UserRoles\""
    insert_dbo_UserRoles_one(
        "the row to be inserted"
        object: dbo_UserRoles_insert_input!
    ): dbo_UserRoles
    "insert data into the table: \"dbo.UserTransactions\""
    insert_dbo_UserTransactions(
        "the rows to be inserted"
        objects: [dbo_UserTransactions_insert_input!]!
    ): dbo_UserTransactions_mutation_response
    "insert a single row into the table: \"dbo.UserTransactions\""
    insert_dbo_UserTransactions_one(
        "the row to be inserted"
        object: dbo_UserTransactions_insert_input!
    ): dbo_UserTransactions
    "insert data into the table: \"dbo.Users\""
    insert_dbo_Users(
        "the rows to be inserted"
        objects: [dbo_Users_insert_input!]!,
        "on conflict condition"
        on_conflict: dbo_Users_on_conflict
    ): dbo_Users_mutation_response
    "insert a single row into the table: \"dbo.Users\""
    insert_dbo_Users_one(
        "the row to be inserted"
        object: dbo_Users_insert_input!,
        "on conflict condition"
        on_conflict: dbo_Users_on_conflict
    ): dbo_Users
    "insert data into the table: \"dbo.ZamZamMoneyTransferTransactions\""
    insert_dbo_ZamZamMoneyTransferTransactions(
        "the rows to be inserted"
        objects: [dbo_ZamZamMoneyTransferTransactions_insert_input!]!
    ): dbo_ZamZamMoneyTransferTransactions_mutation_response
    "insert a single row into the table: \"dbo.ZamZamMoneyTransferTransactions\""
    insert_dbo_ZamZamMoneyTransferTransactions_one(
        "the row to be inserted"
        object: dbo_ZamZamMoneyTransferTransactions_insert_input!
    ): dbo_ZamZamMoneyTransferTransactions
    "insert data into the table: \"dbo.__MigrationHistory\""
    insert_dbo___MigrationHistory(
        "the rows to be inserted"
        objects: [dbo___MigrationHistory_insert_input!]!
    ): dbo___MigrationHistory_mutation_response
    "insert a single row into the table: \"dbo.__MigrationHistory\""
    insert_dbo___MigrationHistory_one(
        "the row to be inserted"
        object: dbo___MigrationHistory_insert_input!
    ): dbo___MigrationHistory
    "update data of the table: \"dbo.AccountTypes\""
    update_dbo_AccountTypes(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_AccountTypes_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_AccountTypes_set_input,
        "filter the rows which have to be updated"
        where: dbo_AccountTypes_bool_exp!
    ): dbo_AccountTypes_mutation_response
    "update single row of the table: \"dbo.AccountTypes\""
    update_dbo_AccountTypes_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_AccountTypes_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_AccountTypes_set_input,
        pk_columns: dbo_AccountTypes_pk_columns_input!
    ): dbo_AccountTypes
    "update data of the table: \"dbo.Accounts\""
    update_dbo_Accounts(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Accounts_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Accounts_set_input,
        "filter the rows which have to be updated"
        where: dbo_Accounts_bool_exp!
    ): dbo_Accounts_mutation_response
    "update single row of the table: \"dbo.Accounts\""
    update_dbo_Accounts_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Accounts_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Accounts_set_input,
        pk_columns: dbo_Accounts_pk_columns_input!
    ): dbo_Accounts
    "update data of the table: \"dbo.Best2PayOperations\""
    update_dbo_Best2PayOperations(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Best2PayOperations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Best2PayOperations_set_input,
        "filter the rows which have to be updated"
        where: dbo_Best2PayOperations_bool_exp!
    ): dbo_Best2PayOperations_mutation_response
    "update single row of the table: \"dbo.Best2PayOperations\""
    update_dbo_Best2PayOperations_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Best2PayOperations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Best2PayOperations_set_input,
        pk_columns: dbo_Best2PayOperations_pk_columns_input!
    ): dbo_Best2PayOperations
    "update data of the table: \"dbo.Clients\""
    update_dbo_Clients(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Clients_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Clients_set_input,
        "filter the rows which have to be updated"
        where: dbo_Clients_bool_exp!
    ): dbo_Clients_mutation_response
    "update single row of the table: \"dbo.Clients\""
    update_dbo_Clients_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Clients_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Clients_set_input,
        pk_columns: dbo_Clients_pk_columns_input!
    ): dbo_Clients
    "update data of the table: \"dbo.Countries\""
    update_dbo_Countries(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Countries_set_input,
        "filter the rows which have to be updated"
        where: dbo_Countries_bool_exp!
    ): dbo_Countries_mutation_response
    "update single row of the table: \"dbo.Countries\""
    update_dbo_Countries_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Countries_set_input,
        pk_columns: dbo_Countries_pk_columns_input!
    ): dbo_Countries
    "update data of the table: \"dbo.Currecies\""
    update_dbo_Currecies(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Currecies_set_input,
        "filter the rows which have to be updated"
        where: dbo_Currecies_bool_exp!
    ): dbo_Currecies_mutation_response
    "update single row of the table: \"dbo.Currecies\""
    update_dbo_Currecies_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Currecies_set_input,
        pk_columns: dbo_Currecies_pk_columns_input!
    ): dbo_Currecies
    "update data of the table: \"dbo.CurrentCommissionPayments\""
    update_dbo_CurrentCommissionPayments(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_CurrentCommissionPayments_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_CurrentCommissionPayments_set_input,
        "filter the rows which have to be updated"
        where: dbo_CurrentCommissionPayments_bool_exp!
    ): dbo_CurrentCommissionPayments_mutation_response
    "update single row of the table: \"dbo.CurrentCommissionPayments\""
    update_dbo_CurrentCommissionPayments_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_CurrentCommissionPayments_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_CurrentCommissionPayments_set_input,
        pk_columns: dbo_CurrentCommissionPayments_pk_columns_input!
    ): dbo_CurrentCommissionPayments
    "update data of the table: \"dbo.FirebaseTokens\""
    update_dbo_FirebaseTokens(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_FirebaseTokens_set_input,
        "filter the rows which have to be updated"
        where: dbo_FirebaseTokens_bool_exp!
    ): dbo_FirebaseTokens_mutation_response
    "update single row of the table: \"dbo.FirebaseTokens\""
    update_dbo_FirebaseTokens_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_FirebaseTokens_set_input,
        pk_columns: dbo_FirebaseTokens_pk_columns_input!
    ): dbo_FirebaseTokens
    "update data of the table: \"dbo.InternationalMoneyTransferTransactions\""
    update_dbo_InternationalMoneyTransferTransactions(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_InternationalMoneyTransferTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_InternationalMoneyTransferTransactions_set_input,
        "filter the rows which have to be updated"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp!
    ): dbo_InternationalMoneyTransferTransactions_mutation_response
    "update single row of the table: \"dbo.InternationalMoneyTransferTransactions\""
    update_dbo_InternationalMoneyTransferTransactions_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_InternationalMoneyTransferTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_InternationalMoneyTransferTransactions_set_input,
        pk_columns: dbo_InternationalMoneyTransferTransactions_pk_columns_input!
    ): dbo_InternationalMoneyTransferTransactions
    "update data of the table: \"dbo.Limits\""
    update_dbo_Limits(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Limits_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Limits_set_input,
        "filter the rows which have to be updated"
        where: dbo_Limits_bool_exp!
    ): dbo_Limits_mutation_response
    "update single row of the table: \"dbo.Limits\""
    update_dbo_Limits_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Limits_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Limits_set_input,
        pk_columns: dbo_Limits_pk_columns_input!
    ): dbo_Limits
    "update data of the table: \"dbo.Managers\""
    update_dbo_Managers(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Managers_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Managers_set_input,
        "filter the rows which have to be updated"
        where: dbo_Managers_bool_exp!
    ): dbo_Managers_mutation_response
    "update single row of the table: \"dbo.Managers\""
    update_dbo_Managers_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Managers_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Managers_set_input,
        pk_columns: dbo_Managers_pk_columns_input!
    ): dbo_Managers
    "update data of the table: \"dbo.MoneyOperationTypes\""
    update_dbo_MoneyOperationTypes(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_MoneyOperationTypes_set_input,
        "filter the rows which have to be updated"
        where: dbo_MoneyOperationTypes_bool_exp!
    ): dbo_MoneyOperationTypes_mutation_response
    "update single row of the table: \"dbo.MoneyOperationTypes\""
    update_dbo_MoneyOperationTypes_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_MoneyOperationTypes_set_input,
        pk_columns: dbo_MoneyOperationTypes_pk_columns_input!
    ): dbo_MoneyOperationTypes
    "update data of the table: \"dbo.OperationEntityShortLinkEntities\""
    update_dbo_OperationEntityShortLinkEntities(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_OperationEntityShortLinkEntities_set_input,
        "filter the rows which have to be updated"
        where: dbo_OperationEntityShortLinkEntities_bool_exp!
    ): dbo_OperationEntityShortLinkEntities_mutation_response
    "update single row of the table: \"dbo.OperationEntityShortLinkEntities\""
    update_dbo_OperationEntityShortLinkEntities_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_OperationEntityShortLinkEntities_set_input,
        pk_columns: dbo_OperationEntityShortLinkEntities_pk_columns_input!
    ): dbo_OperationEntityShortLinkEntities
    "update data of the table: \"dbo.Operations\""
    update_dbo_Operations(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Operations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Operations_set_input,
        "filter the rows which have to be updated"
        where: dbo_Operations_bool_exp!
    ): dbo_Operations_mutation_response
    "update single row of the table: \"dbo.Operations\""
    update_dbo_Operations_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Operations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Operations_set_input,
        pk_columns: dbo_Operations_pk_columns_input!
    ): dbo_Operations
    "update data of the table: \"dbo.PaymentHistory\""
    update_dbo_PaymentHistory(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_PaymentHistory_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_PaymentHistory_set_input,
        "filter the rows which have to be updated"
        where: dbo_PaymentHistory_bool_exp!
    ): dbo_PaymentHistory_mutation_response
    "update single row of the table: \"dbo.PaymentHistory\""
    update_dbo_PaymentHistory_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_PaymentHistory_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_PaymentHistory_set_input,
        pk_columns: dbo_PaymentHistory_pk_columns_input!
    ): dbo_PaymentHistory
    "update data of the table: \"dbo.PhoneNumberVerifications\""
    update_dbo_PhoneNumberVerifications(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_PhoneNumberVerifications_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_PhoneNumberVerifications_set_input,
        "filter the rows which have to be updated"
        where: dbo_PhoneNumberVerifications_bool_exp!
    ): dbo_PhoneNumberVerifications_mutation_response
    "update single row of the table: \"dbo.PhoneNumberVerifications\""
    update_dbo_PhoneNumberVerifications_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_PhoneNumberVerifications_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_PhoneNumberVerifications_set_input,
        pk_columns: dbo_PhoneNumberVerifications_pk_columns_input!
    ): dbo_PhoneNumberVerifications
    "update data of the table: \"dbo.ReferallDeviceGuid\""
    update_dbo_ReferallDeviceGuid(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ReferallDeviceGuid_set_input,
        "filter the rows which have to be updated"
        where: dbo_ReferallDeviceGuid_bool_exp!
    ): dbo_ReferallDeviceGuid_mutation_response
    "update single row of the table: \"dbo.ReferallDeviceGuid\""
    update_dbo_ReferallDeviceGuid_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ReferallDeviceGuid_set_input,
        pk_columns: dbo_ReferallDeviceGuid_pk_columns_input!
    ): dbo_ReferallDeviceGuid
    "update data of the table: \"dbo.RefreshTokens\""
    update_dbo_RefreshTokens(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_RefreshTokens_set_input,
        "filter the rows which have to be updated"
        where: dbo_RefreshTokens_bool_exp!
    ): dbo_RefreshTokens_mutation_response
    "update single row of the table: \"dbo.RefreshTokens\""
    update_dbo_RefreshTokens_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_RefreshTokens_set_input,
        pk_columns: dbo_RefreshTokens_pk_columns_input!
    ): dbo_RefreshTokens
    "update data of the table: \"dbo.Registrations\""
    update_dbo_Registrations(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Registrations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Registrations_set_input,
        "filter the rows which have to be updated"
        where: dbo_Registrations_bool_exp!
    ): dbo_Registrations_mutation_response
    "update single row of the table: \"dbo.Registrations\""
    update_dbo_Registrations_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Registrations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Registrations_set_input,
        pk_columns: dbo_Registrations_pk_columns_input!
    ): dbo_Registrations
    "update data of the table: \"dbo.ReservationCards\""
    update_dbo_ReservationCards(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_ReservationCards_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ReservationCards_set_input,
        "filter the rows which have to be updated"
        where: dbo_ReservationCards_bool_exp!
    ): dbo_ReservationCards_mutation_response
    "update single row of the table: \"dbo.ReservationCards\""
    update_dbo_ReservationCards_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_ReservationCards_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ReservationCards_set_input,
        pk_columns: dbo_ReservationCards_pk_columns_input!
    ): dbo_ReservationCards
    "update data of the table: \"dbo.Roles\""
    update_dbo_Roles(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Roles_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Roles_set_input,
        "filter the rows which have to be updated"
        where: dbo_Roles_bool_exp!
    ): dbo_Roles_mutation_response
    "update single row of the table: \"dbo.Roles\""
    update_dbo_Roles_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Roles_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Roles_set_input,
        pk_columns: dbo_Roles_pk_columns_input!
    ): dbo_Roles
    "update data of the table: \"dbo.ShortLinks\""
    update_dbo_ShortLinks(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ShortLinks_set_input,
        "filter the rows which have to be updated"
        where: dbo_ShortLinks_bool_exp!
    ): dbo_ShortLinks_mutation_response
    "update single row of the table: \"dbo.ShortLinks\""
    update_dbo_ShortLinks_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ShortLinks_set_input,
        pk_columns: dbo_ShortLinks_pk_columns_input!
    ): dbo_ShortLinks
    "update data of the table: \"dbo.Transactions\""
    update_dbo_Transactions(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Transactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Transactions_set_input,
        "filter the rows which have to be updated"
        where: dbo_Transactions_bool_exp!
    ): dbo_Transactions_mutation_response
    "update single row of the table: \"dbo.Transactions\""
    update_dbo_Transactions_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Transactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Transactions_set_input,
        pk_columns: dbo_Transactions_pk_columns_input!
    ): dbo_Transactions
    "update data of the table: \"dbo.UnistreamClientHistory\""
    update_dbo_UnistreamClientHistory(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UnistreamClientHistory_set_input,
        "filter the rows which have to be updated"
        where: dbo_UnistreamClientHistory_bool_exp!
    ): dbo_UnistreamClientHistory_mutation_response
    "update single row of the table: \"dbo.UnistreamClientHistory\""
    update_dbo_UnistreamClientHistory_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UnistreamClientHistory_set_input,
        pk_columns: dbo_UnistreamClientHistory_pk_columns_input!
    ): dbo_UnistreamClientHistory
    "update data of the table: \"dbo.UnistreamOperations\""
    update_dbo_UnistreamOperations(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UnistreamOperations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UnistreamOperations_set_input,
        "filter the rows which have to be updated"
        where: dbo_UnistreamOperations_bool_exp!
    ): dbo_UnistreamOperations_mutation_response
    "update single row of the table: \"dbo.UnistreamOperations\""
    update_dbo_UnistreamOperations_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UnistreamOperations_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UnistreamOperations_set_input,
        pk_columns: dbo_UnistreamOperations_pk_columns_input!
    ): dbo_UnistreamOperations
    "update data of the table: \"dbo.UserCards\""
    update_dbo_UserCards(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserCards_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserCards_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserCards_bool_exp!
    ): dbo_UserCards_mutation_response
    "update single row of the table: \"dbo.UserCards\""
    update_dbo_UserCards_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserCards_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserCards_set_input,
        pk_columns: dbo_UserCards_pk_columns_input!
    ): dbo_UserCards
    "update data of the table: \"dbo.UserDetails\""
    update_dbo_UserDetails(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserDetails_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetails_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserDetails_bool_exp!
    ): dbo_UserDetails_mutation_response
    "update data of the table: \"dbo.UserDetailsAddresses\""
    update_dbo_UserDetailsAddresses(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetailsAddresses_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserDetailsAddresses_bool_exp!
    ): dbo_UserDetailsAddresses_mutation_response
    "update single row of the table: \"dbo.UserDetailsAddresses\""
    update_dbo_UserDetailsAddresses_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetailsAddresses_set_input,
        pk_columns: dbo_UserDetailsAddresses_pk_columns_input!
    ): dbo_UserDetailsAddresses
    "update data of the table: \"dbo.UserDetailsDocuments\""
    update_dbo_UserDetailsDocuments(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetailsDocuments_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserDetailsDocuments_bool_exp!
    ): dbo_UserDetailsDocuments_mutation_response
    "update single row of the table: \"dbo.UserDetailsDocuments\""
    update_dbo_UserDetailsDocuments_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetailsDocuments_set_input,
        pk_columns: dbo_UserDetailsDocuments_pk_columns_input!
    ): dbo_UserDetailsDocuments
    "update single row of the table: \"dbo.UserDetails\""
    update_dbo_UserDetails_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserDetails_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDetails_set_input,
        pk_columns: dbo_UserDetails_pk_columns_input!
    ): dbo_UserDetails
    "update data of the table: \"dbo.UserDeviceGuids\""
    update_dbo_UserDeviceGuids(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDeviceGuids_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserDeviceGuids_bool_exp!
    ): dbo_UserDeviceGuids_mutation_response
    "update single row of the table: \"dbo.UserDeviceGuids\""
    update_dbo_UserDeviceGuids_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserDeviceGuids_set_input,
        pk_columns: dbo_UserDeviceGuids_pk_columns_input!
    ): dbo_UserDeviceGuids
    "update data of the table: \"dbo.UserPhoneVerifications\""
    update_dbo_UserPhoneVerifications(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserPhoneVerifications_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserPhoneVerifications_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserPhoneVerifications_bool_exp!
    ): dbo_UserPhoneVerifications_mutation_response
    "update single row of the table: \"dbo.UserPhoneVerifications\""
    update_dbo_UserPhoneVerifications_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserPhoneVerifications_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserPhoneVerifications_set_input,
        pk_columns: dbo_UserPhoneVerifications_pk_columns_input!
    ): dbo_UserPhoneVerifications
    "update data of the table: \"dbo.UserRoles\""
    update_dbo_UserRoles(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserRoles_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserRoles_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserRoles_bool_exp!
    ): dbo_UserRoles_mutation_response
    "update single row of the table: \"dbo.UserRoles\""
    update_dbo_UserRoles_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserRoles_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserRoles_set_input,
        pk_columns: dbo_UserRoles_pk_columns_input!
    ): dbo_UserRoles
    "update data of the table: \"dbo.UserTransactions\""
    update_dbo_UserTransactions(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserTransactions_set_input,
        "filter the rows which have to be updated"
        where: dbo_UserTransactions_bool_exp!
    ): dbo_UserTransactions_mutation_response
    "update single row of the table: \"dbo.UserTransactions\""
    update_dbo_UserTransactions_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_UserTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_UserTransactions_set_input,
        pk_columns: dbo_UserTransactions_pk_columns_input!
    ): dbo_UserTransactions
    "update data of the table: \"dbo.Users\""
    update_dbo_Users(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Users_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Users_set_input,
        "filter the rows which have to be updated"
        where: dbo_Users_bool_exp!
    ): dbo_Users_mutation_response
    "update single row of the table: \"dbo.Users\""
    update_dbo_Users_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_Users_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_Users_set_input,
        pk_columns: dbo_Users_pk_columns_input!
    ): dbo_Users
    "update data of the table: \"dbo.ZamZamMoneyTransferTransactions\""
    update_dbo_ZamZamMoneyTransferTransactions(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_ZamZamMoneyTransferTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ZamZamMoneyTransferTransactions_set_input,
        "filter the rows which have to be updated"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp!
    ): dbo_ZamZamMoneyTransferTransactions_mutation_response
    "update single row of the table: \"dbo.ZamZamMoneyTransferTransactions\""
    update_dbo_ZamZamMoneyTransferTransactions_by_pk(
        "increments the integer columns with given value of the filtered values"
        _inc: dbo_ZamZamMoneyTransferTransactions_inc_input,
        "sets the columns of the filtered rows to the given values"
        _set: dbo_ZamZamMoneyTransferTransactions_set_input,
        pk_columns: dbo_ZamZamMoneyTransferTransactions_pk_columns_input!
    ): dbo_ZamZamMoneyTransferTransactions
    "update data of the table: \"dbo.__MigrationHistory\""
    update_dbo___MigrationHistory(
        "sets the columns of the filtered rows to the given values"
        _set: dbo___MigrationHistory_set_input,
        "filter the rows which have to be updated"
        where: dbo___MigrationHistory_bool_exp!
    ): dbo___MigrationHistory_mutation_response
    "update single row of the table: \"dbo.__MigrationHistory\""
    update_dbo___MigrationHistory_by_pk(
        "sets the columns of the filtered rows to the given values"
        _set: dbo___MigrationHistory_set_input,
        pk_columns: dbo___MigrationHistory_pk_columns_input!
    ): dbo___MigrationHistory
}

"query root"
type query_root {
    "fetch data from the table: \"dbo.AccountTypes\""
    dbo_AccountTypes(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): [dbo_AccountTypes!]!
    "fetch aggregated fields from the table: \"dbo.AccountTypes\""
    dbo_AccountTypes_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): dbo_AccountTypes_aggregate!
    "fetch data from the table: \"dbo.AccountTypes\" using primary key columns"
    dbo_AccountTypes_by_pk(Uid: uuid!): dbo_AccountTypes
    "fetch data from the table: \"dbo.Accounts\""
    dbo_Accounts(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): [dbo_Accounts!]!
    "fetch aggregated fields from the table: \"dbo.Accounts\""
    dbo_Accounts_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): dbo_Accounts_aggregate!
    "fetch data from the table: \"dbo.Accounts\" using primary key columns"
    dbo_Accounts_by_pk(Uid: uuid!): dbo_Accounts
    "fetch data from the table: \"dbo.Best2PayOperations\""
    dbo_Best2PayOperations(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): [dbo_Best2PayOperations!]!
    "fetch aggregated fields from the table: \"dbo.Best2PayOperations\""
    dbo_Best2PayOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): dbo_Best2PayOperations_aggregate!
    "fetch data from the table: \"dbo.Best2PayOperations\" using primary key columns"
    dbo_Best2PayOperations_by_pk(OperationUid: uuid!): dbo_Best2PayOperations
    "fetch data from the table: \"dbo.Clients\""
    dbo_Clients(
        "distinct select on columns"
        distinct_on: [dbo_Clients_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Clients_order_by!],
        "filter the rows returned"
        where: dbo_Clients_bool_exp
    ): [dbo_Clients!]!
    "fetch aggregated fields from the table: \"dbo.Clients\""
    dbo_Clients_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Clients_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Clients_order_by!],
        "filter the rows returned"
        where: dbo_Clients_bool_exp
    ): dbo_Clients_aggregate!
    "fetch data from the table: \"dbo.Clients\" using primary key columns"
    dbo_Clients_by_pk(Uid: uuid!): dbo_Clients
    "fetch data from the table: \"dbo.Countries\""
    dbo_Countries(
        "distinct select on columns"
        distinct_on: [dbo_Countries_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Countries_order_by!],
        "filter the rows returned"
        where: dbo_Countries_bool_exp
    ): [dbo_Countries!]!
    "fetch aggregated fields from the table: \"dbo.Countries\""
    dbo_Countries_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Countries_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Countries_order_by!],
        "filter the rows returned"
        where: dbo_Countries_bool_exp
    ): dbo_Countries_aggregate!
    "fetch data from the table: \"dbo.Countries\" using primary key columns"
    dbo_Countries_by_pk(Uid: uuid!): dbo_Countries
    "fetch data from the table: \"dbo.Currecies\""
    dbo_Currecies(
        "distinct select on columns"
        distinct_on: [dbo_Currecies_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Currecies_order_by!],
        "filter the rows returned"
        where: dbo_Currecies_bool_exp
    ): [dbo_Currecies!]!
    "fetch aggregated fields from the table: \"dbo.Currecies\""
    dbo_Currecies_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Currecies_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Currecies_order_by!],
        "filter the rows returned"
        where: dbo_Currecies_bool_exp
    ): dbo_Currecies_aggregate!
    "fetch data from the table: \"dbo.Currecies\" using primary key columns"
    dbo_Currecies_by_pk(Uid: uuid!): dbo_Currecies
    "fetch data from the table: \"dbo.CurrentCommissionPayments\""
    dbo_CurrentCommissionPayments(
        "distinct select on columns"
        distinct_on: [dbo_CurrentCommissionPayments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_CurrentCommissionPayments_order_by!],
        "filter the rows returned"
        where: dbo_CurrentCommissionPayments_bool_exp
    ): [dbo_CurrentCommissionPayments!]!
    "fetch aggregated fields from the table: \"dbo.CurrentCommissionPayments\""
    dbo_CurrentCommissionPayments_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_CurrentCommissionPayments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_CurrentCommissionPayments_order_by!],
        "filter the rows returned"
        where: dbo_CurrentCommissionPayments_bool_exp
    ): dbo_CurrentCommissionPayments_aggregate!
    "fetch data from the table: \"dbo.CurrentCommissionPayments\" using primary key columns"
    dbo_CurrentCommissionPayments_by_pk(PaymentId: bigint!): dbo_CurrentCommissionPayments
    "fetch data from the table: \"dbo.FirebaseTokens\""
    dbo_FirebaseTokens(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): [dbo_FirebaseTokens!]!
    "fetch aggregated fields from the table: \"dbo.FirebaseTokens\""
    dbo_FirebaseTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): dbo_FirebaseTokens_aggregate!
    "fetch data from the table: \"dbo.FirebaseTokens\" using primary key columns"
    dbo_FirebaseTokens_by_pk(Token: String!, UserUid: uuid!): dbo_FirebaseTokens
    "fetch data from the table: \"dbo.InternationalMoneyTransferTransactions\""
    dbo_InternationalMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): [dbo_InternationalMoneyTransferTransactions!]!
    "fetch aggregated fields from the table: \"dbo.InternationalMoneyTransferTransactions\""
    dbo_InternationalMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): dbo_InternationalMoneyTransferTransactions_aggregate!
    "fetch data from the table: \"dbo.InternationalMoneyTransferTransactions\" using primary key columns"
    dbo_InternationalMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_InternationalMoneyTransferTransactions
    "fetch data from the table: \"dbo.Limits\""
    dbo_Limits(
        "distinct select on columns"
        distinct_on: [dbo_Limits_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Limits_order_by!],
        "filter the rows returned"
        where: dbo_Limits_bool_exp
    ): [dbo_Limits!]!
    "fetch aggregated fields from the table: \"dbo.Limits\""
    dbo_Limits_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Limits_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Limits_order_by!],
        "filter the rows returned"
        where: dbo_Limits_bool_exp
    ): dbo_Limits_aggregate!
    "fetch data from the table: \"dbo.Limits\" using primary key columns"
    dbo_Limits_by_pk(Uid: uuid!): dbo_Limits
    "fetch data from the table: \"dbo.Managers\""
    dbo_Managers(
        "distinct select on columns"
        distinct_on: [dbo_Managers_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Managers_order_by!],
        "filter the rows returned"
        where: dbo_Managers_bool_exp
    ): [dbo_Managers!]!
    "fetch aggregated fields from the table: \"dbo.Managers\""
    dbo_Managers_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Managers_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Managers_order_by!],
        "filter the rows returned"
        where: dbo_Managers_bool_exp
    ): dbo_Managers_aggregate!
    "fetch data from the table: \"dbo.Managers\" using primary key columns"
    dbo_Managers_by_pk(Id: Int!): dbo_Managers
    "fetch data from the table: \"dbo.MoneyOperationTypes\""
    dbo_MoneyOperationTypes(
        "distinct select on columns"
        distinct_on: [dbo_MoneyOperationTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_MoneyOperationTypes_order_by!],
        "filter the rows returned"
        where: dbo_MoneyOperationTypes_bool_exp
    ): [dbo_MoneyOperationTypes!]!
    "fetch aggregated fields from the table: \"dbo.MoneyOperationTypes\""
    dbo_MoneyOperationTypes_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_MoneyOperationTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_MoneyOperationTypes_order_by!],
        "filter the rows returned"
        where: dbo_MoneyOperationTypes_bool_exp
    ): dbo_MoneyOperationTypes_aggregate!
    "fetch data from the table: \"dbo.MoneyOperationTypes\" using primary key columns"
    dbo_MoneyOperationTypes_by_pk(Uid: uuid!): dbo_MoneyOperationTypes
    "fetch data from the table: \"dbo.OperationEntityShortLinkEntities\""
    dbo_OperationEntityShortLinkEntities(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): [dbo_OperationEntityShortLinkEntities!]!
    "fetch aggregated fields from the table: \"dbo.OperationEntityShortLinkEntities\""
    dbo_OperationEntityShortLinkEntities_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): dbo_OperationEntityShortLinkEntities_aggregate!
    "fetch data from the table: \"dbo.OperationEntityShortLinkEntities\" using primary key columns"
    dbo_OperationEntityShortLinkEntities_by_pk(OperationEntity_Uid: uuid!, ShortLinkEntity_Uid: uuid!): dbo_OperationEntityShortLinkEntities
    "fetch data from the table: \"dbo.Operations\""
    dbo_Operations(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "fetch aggregated fields from the table: \"dbo.Operations\""
    dbo_Operations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    "fetch data from the table: \"dbo.Operations\" using primary key columns"
    dbo_Operations_by_pk(Uid: uuid!): dbo_Operations
    "fetch data from the table: \"dbo.PaymentHistory\""
    dbo_PaymentHistory(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): [dbo_PaymentHistory!]!
    "fetch aggregated fields from the table: \"dbo.PaymentHistory\""
    dbo_PaymentHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): dbo_PaymentHistory_aggregate!
    "fetch data from the table: \"dbo.PaymentHistory\" using primary key columns"
    dbo_PaymentHistory_by_pk(Uid: uuid!): dbo_PaymentHistory
    "fetch data from the table: \"dbo.PhoneNumberVerifications\""
    dbo_PhoneNumberVerifications(
        "distinct select on columns"
        distinct_on: [dbo_PhoneNumberVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PhoneNumberVerifications_order_by!],
        "filter the rows returned"
        where: dbo_PhoneNumberVerifications_bool_exp
    ): [dbo_PhoneNumberVerifications!]!
    "fetch aggregated fields from the table: \"dbo.PhoneNumberVerifications\""
    dbo_PhoneNumberVerifications_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PhoneNumberVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PhoneNumberVerifications_order_by!],
        "filter the rows returned"
        where: dbo_PhoneNumberVerifications_bool_exp
    ): dbo_PhoneNumberVerifications_aggregate!
    "fetch data from the table: \"dbo.PhoneNumberVerifications\" using primary key columns"
    dbo_PhoneNumberVerifications_by_pk(Uid: uuid!): dbo_PhoneNumberVerifications
    "fetch data from the table: \"dbo.ReferallDeviceGuid\""
    dbo_ReferallDeviceGuid(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): [dbo_ReferallDeviceGuid!]!
    "fetch aggregated fields from the table: \"dbo.ReferallDeviceGuid\""
    dbo_ReferallDeviceGuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): dbo_ReferallDeviceGuid_aggregate!
    "fetch data from the table: \"dbo.ReferallDeviceGuid\" using primary key columns"
    dbo_ReferallDeviceGuid_by_pk(Id: uuid!): dbo_ReferallDeviceGuid
    "fetch data from the table: \"dbo.RefreshTokens\""
    dbo_RefreshTokens(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): [dbo_RefreshTokens!]!
    "fetch aggregated fields from the table: \"dbo.RefreshTokens\""
    dbo_RefreshTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): dbo_RefreshTokens_aggregate!
    "fetch data from the table: \"dbo.RefreshTokens\" using primary key columns"
    dbo_RefreshTokens_by_pk(Uid: uuid!): dbo_RefreshTokens
    "fetch data from the table: \"dbo.Registrations\""
    dbo_Registrations(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): [dbo_Registrations!]!
    "fetch aggregated fields from the table: \"dbo.Registrations\""
    dbo_Registrations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): dbo_Registrations_aggregate!
    "fetch data from the table: \"dbo.Registrations\" using primary key columns"
    dbo_Registrations_by_pk(Uid: uuid!): dbo_Registrations
    "fetch data from the table: \"dbo.ReservationCards\""
    dbo_ReservationCards(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): [dbo_ReservationCards!]!
    "fetch aggregated fields from the table: \"dbo.ReservationCards\""
    dbo_ReservationCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): dbo_ReservationCards_aggregate!
    "fetch data from the table: \"dbo.ReservationCards\" using primary key columns"
    dbo_ReservationCards_by_pk(CardType: Int!, UserUid: uuid!): dbo_ReservationCards
    "fetch data from the table: \"dbo.Roles\""
    dbo_Roles(
        "distinct select on columns"
        distinct_on: [dbo_Roles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Roles_order_by!],
        "filter the rows returned"
        where: dbo_Roles_bool_exp
    ): [dbo_Roles!]!
    "fetch aggregated fields from the table: \"dbo.Roles\""
    dbo_Roles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Roles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Roles_order_by!],
        "filter the rows returned"
        where: dbo_Roles_bool_exp
    ): dbo_Roles_aggregate!
    "fetch data from the table: \"dbo.Roles\" using primary key columns"
    dbo_Roles_by_pk(Id: smallint!): dbo_Roles
    "fetch data from the table: \"dbo.ShortLinks\""
    dbo_ShortLinks(
        "distinct select on columns"
        distinct_on: [dbo_ShortLinks_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ShortLinks_order_by!],
        "filter the rows returned"
        where: dbo_ShortLinks_bool_exp
    ): [dbo_ShortLinks!]!
    "fetch aggregated fields from the table: \"dbo.ShortLinks\""
    dbo_ShortLinks_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ShortLinks_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ShortLinks_order_by!],
        "filter the rows returned"
        where: dbo_ShortLinks_bool_exp
    ): dbo_ShortLinks_aggregate!
    "fetch data from the table: \"dbo.ShortLinks\" using primary key columns"
    dbo_ShortLinks_by_pk(Uid: uuid!): dbo_ShortLinks
    "fetch data from the table: \"dbo.Transactions\""
    dbo_Transactions(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): [dbo_Transactions!]!
    "fetch aggregated fields from the table: \"dbo.Transactions\""
    dbo_Transactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): dbo_Transactions_aggregate!
    "fetch data from the table: \"dbo.Transactions\" using primary key columns"
    dbo_Transactions_by_pk(Uid: uuid!): dbo_Transactions
    "fetch data from the table: \"dbo.UnistreamClientHistory\""
    dbo_UnistreamClientHistory(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): [dbo_UnistreamClientHistory!]!
    "fetch aggregated fields from the table: \"dbo.UnistreamClientHistory\""
    dbo_UnistreamClientHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): dbo_UnistreamClientHistory_aggregate!
    "fetch data from the table: \"dbo.UnistreamClientHistory\" using primary key columns"
    dbo_UnistreamClientHistory_by_pk(Uid: uuid!): dbo_UnistreamClientHistory
    "fetch data from the table: \"dbo.UnistreamOperations\""
    dbo_UnistreamOperations(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): [dbo_UnistreamOperations!]!
    "fetch aggregated fields from the table: \"dbo.UnistreamOperations\""
    dbo_UnistreamOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): dbo_UnistreamOperations_aggregate!
    "fetch data from the table: \"dbo.UnistreamOperations\" using primary key columns"
    dbo_UnistreamOperations_by_pk(OperationUid: uuid!): dbo_UnistreamOperations
    "fetch data from the table: \"dbo.UserCards\""
    dbo_UserCards(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): [dbo_UserCards!]!
    "fetch aggregated fields from the table: \"dbo.UserCards\""
    dbo_UserCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): dbo_UserCards_aggregate!
    "fetch data from the table: \"dbo.UserCards\" using primary key columns"
    dbo_UserCards_by_pk(Uid: uuid!): dbo_UserCards
    "fetch data from the table: \"dbo.UserDetails\""
    dbo_UserDetails(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): [dbo_UserDetails!]!
    "fetch data from the table: \"dbo.UserDetailsAddresses\""
    dbo_UserDetailsAddresses(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): [dbo_UserDetailsAddresses!]!
    "fetch aggregated fields from the table: \"dbo.UserDetailsAddresses\""
    dbo_UserDetailsAddresses_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): dbo_UserDetailsAddresses_aggregate!
    "fetch data from the table: \"dbo.UserDetailsAddresses\" using primary key columns"
    dbo_UserDetailsAddresses_by_pk(Uid: uuid!): dbo_UserDetailsAddresses
    "fetch data from the table: \"dbo.UserDetailsDocuments\""
    dbo_UserDetailsDocuments(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): [dbo_UserDetailsDocuments!]!
    "fetch aggregated fields from the table: \"dbo.UserDetailsDocuments\""
    dbo_UserDetailsDocuments_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): dbo_UserDetailsDocuments_aggregate!
    "fetch data from the table: \"dbo.UserDetailsDocuments\" using primary key columns"
    dbo_UserDetailsDocuments_by_pk(Uid: uuid!): dbo_UserDetailsDocuments
    "fetch aggregated fields from the table: \"dbo.UserDetails\""
    dbo_UserDetails_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): dbo_UserDetails_aggregate!
    "fetch data from the table: \"dbo.UserDetails\" using primary key columns"
    dbo_UserDetails_by_pk(UserUid: uuid!): dbo_UserDetails
    "fetch data from the table: \"dbo.UserDeviceGuids\""
    dbo_UserDeviceGuids(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): [dbo_UserDeviceGuids!]!
    "fetch aggregated fields from the table: \"dbo.UserDeviceGuids\""
    dbo_UserDeviceGuids_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): dbo_UserDeviceGuids_aggregate!
    "fetch data from the table: \"dbo.UserDeviceGuids\" using primary key columns"
    dbo_UserDeviceGuids_by_pk(Id: uuid!): dbo_UserDeviceGuids
    "fetch data from the table: \"dbo.UserPhoneVerifications\""
    dbo_UserPhoneVerifications(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): [dbo_UserPhoneVerifications!]!
    "fetch aggregated fields from the table: \"dbo.UserPhoneVerifications\""
    dbo_UserPhoneVerifications_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): dbo_UserPhoneVerifications_aggregate!
    "fetch data from the table: \"dbo.UserPhoneVerifications\" using primary key columns"
    dbo_UserPhoneVerifications_by_pk(Uid: uuid!): dbo_UserPhoneVerifications
    "fetch data from the table: \"dbo.UserRoles\""
    dbo_UserRoles(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): [dbo_UserRoles!]!
    "fetch aggregated fields from the table: \"dbo.UserRoles\""
    dbo_UserRoles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): dbo_UserRoles_aggregate!
    "fetch data from the table: \"dbo.UserRoles\" using primary key columns"
    dbo_UserRoles_by_pk(RoleId: smallint!, UserUid: uuid!): dbo_UserRoles
    "fetch data from the table: \"dbo.UserTransactions\""
    dbo_UserTransactions(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): [dbo_UserTransactions!]!
    "fetch aggregated fields from the table: \"dbo.UserTransactions\""
    dbo_UserTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): dbo_UserTransactions_aggregate!
    "fetch data from the table: \"dbo.UserTransactions\" using primary key columns"
    dbo_UserTransactions_by_pk(Uid: uuid!): dbo_UserTransactions
    "fetch data from the table: \"dbo.Users\""
    dbo_Users(
        "distinct select on columns"
        distinct_on: [dbo_Users_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Users_order_by!],
        "filter the rows returned"
        where: dbo_Users_bool_exp
    ): [dbo_Users!]!
    "fetch aggregated fields from the table: \"dbo.Users\""
    dbo_Users_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Users_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Users_order_by!],
        "filter the rows returned"
        where: dbo_Users_bool_exp
    ): dbo_Users_aggregate!
    "fetch data from the table: \"dbo.Users\" using primary key columns"
    dbo_Users_by_pk(Uid: uuid!): dbo_Users
    "fetch data from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    dbo_ZamZamMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): [dbo_ZamZamMoneyTransferTransactions!]!
    "fetch aggregated fields from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    dbo_ZamZamMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): dbo_ZamZamMoneyTransferTransactions_aggregate!
    "fetch data from the table: \"dbo.ZamZamMoneyTransferTransactions\" using primary key columns"
    dbo_ZamZamMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_ZamZamMoneyTransferTransactions
    "fetch data from the table: \"dbo.__MigrationHistory\""
    dbo___MigrationHistory(
        "distinct select on columns"
        distinct_on: [dbo___MigrationHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo___MigrationHistory_order_by!],
        "filter the rows returned"
        where: dbo___MigrationHistory_bool_exp
    ): [dbo___MigrationHistory!]!
    "fetch aggregated fields from the table: \"dbo.__MigrationHistory\""
    dbo___MigrationHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo___MigrationHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo___MigrationHistory_order_by!],
        "filter the rows returned"
        where: dbo___MigrationHistory_bool_exp
    ): dbo___MigrationHistory_aggregate!
    "fetch data from the table: \"dbo.__MigrationHistory\" using primary key columns"
    dbo___MigrationHistory_by_pk(ContextKey: String!, MigrationId: String!): dbo___MigrationHistory
}

"subscription root"
type subscription_root {
    "fetch data from the table: \"dbo.AccountTypes\""
    dbo_AccountTypes(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): [dbo_AccountTypes!]!
    "fetch aggregated fields from the table: \"dbo.AccountTypes\""
    dbo_AccountTypes_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_AccountTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_AccountTypes_order_by!],
        "filter the rows returned"
        where: dbo_AccountTypes_bool_exp
    ): dbo_AccountTypes_aggregate!
    "fetch data from the table: \"dbo.AccountTypes\" using primary key columns"
    dbo_AccountTypes_by_pk(Uid: uuid!): dbo_AccountTypes
    "fetch data from the table: \"dbo.Accounts\""
    dbo_Accounts(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): [dbo_Accounts!]!
    "fetch aggregated fields from the table: \"dbo.Accounts\""
    dbo_Accounts_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Accounts_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Accounts_order_by!],
        "filter the rows returned"
        where: dbo_Accounts_bool_exp
    ): dbo_Accounts_aggregate!
    "fetch data from the table: \"dbo.Accounts\" using primary key columns"
    dbo_Accounts_by_pk(Uid: uuid!): dbo_Accounts
    "fetch data from the table: \"dbo.Best2PayOperations\""
    dbo_Best2PayOperations(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): [dbo_Best2PayOperations!]!
    "fetch aggregated fields from the table: \"dbo.Best2PayOperations\""
    dbo_Best2PayOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Best2PayOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Best2PayOperations_order_by!],
        "filter the rows returned"
        where: dbo_Best2PayOperations_bool_exp
    ): dbo_Best2PayOperations_aggregate!
    "fetch data from the table: \"dbo.Best2PayOperations\" using primary key columns"
    dbo_Best2PayOperations_by_pk(OperationUid: uuid!): dbo_Best2PayOperations
    "fetch data from the table: \"dbo.Clients\""
    dbo_Clients(
        "distinct select on columns"
        distinct_on: [dbo_Clients_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Clients_order_by!],
        "filter the rows returned"
        where: dbo_Clients_bool_exp
    ): [dbo_Clients!]!
    "fetch aggregated fields from the table: \"dbo.Clients\""
    dbo_Clients_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Clients_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Clients_order_by!],
        "filter the rows returned"
        where: dbo_Clients_bool_exp
    ): dbo_Clients_aggregate!
    "fetch data from the table: \"dbo.Clients\" using primary key columns"
    dbo_Clients_by_pk(Uid: uuid!): dbo_Clients
    "fetch data from the table: \"dbo.Countries\""
    dbo_Countries(
        "distinct select on columns"
        distinct_on: [dbo_Countries_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Countries_order_by!],
        "filter the rows returned"
        where: dbo_Countries_bool_exp
    ): [dbo_Countries!]!
    "fetch aggregated fields from the table: \"dbo.Countries\""
    dbo_Countries_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Countries_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Countries_order_by!],
        "filter the rows returned"
        where: dbo_Countries_bool_exp
    ): dbo_Countries_aggregate!
    "fetch data from the table: \"dbo.Countries\" using primary key columns"
    dbo_Countries_by_pk(Uid: uuid!): dbo_Countries
    "fetch data from the table: \"dbo.Currecies\""
    dbo_Currecies(
        "distinct select on columns"
        distinct_on: [dbo_Currecies_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Currecies_order_by!],
        "filter the rows returned"
        where: dbo_Currecies_bool_exp
    ): [dbo_Currecies!]!
    "fetch aggregated fields from the table: \"dbo.Currecies\""
    dbo_Currecies_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Currecies_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Currecies_order_by!],
        "filter the rows returned"
        where: dbo_Currecies_bool_exp
    ): dbo_Currecies_aggregate!
    "fetch data from the table: \"dbo.Currecies\" using primary key columns"
    dbo_Currecies_by_pk(Uid: uuid!): dbo_Currecies
    "fetch data from the table: \"dbo.CurrentCommissionPayments\""
    dbo_CurrentCommissionPayments(
        "distinct select on columns"
        distinct_on: [dbo_CurrentCommissionPayments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_CurrentCommissionPayments_order_by!],
        "filter the rows returned"
        where: dbo_CurrentCommissionPayments_bool_exp
    ): [dbo_CurrentCommissionPayments!]!
    "fetch aggregated fields from the table: \"dbo.CurrentCommissionPayments\""
    dbo_CurrentCommissionPayments_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_CurrentCommissionPayments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_CurrentCommissionPayments_order_by!],
        "filter the rows returned"
        where: dbo_CurrentCommissionPayments_bool_exp
    ): dbo_CurrentCommissionPayments_aggregate!
    "fetch data from the table: \"dbo.CurrentCommissionPayments\" using primary key columns"
    dbo_CurrentCommissionPayments_by_pk(PaymentId: bigint!): dbo_CurrentCommissionPayments
    "fetch data from the table: \"dbo.FirebaseTokens\""
    dbo_FirebaseTokens(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): [dbo_FirebaseTokens!]!
    "fetch aggregated fields from the table: \"dbo.FirebaseTokens\""
    dbo_FirebaseTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_FirebaseTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_FirebaseTokens_order_by!],
        "filter the rows returned"
        where: dbo_FirebaseTokens_bool_exp
    ): dbo_FirebaseTokens_aggregate!
    "fetch data from the table: \"dbo.FirebaseTokens\" using primary key columns"
    dbo_FirebaseTokens_by_pk(Token: String!, UserUid: uuid!): dbo_FirebaseTokens
    "fetch data from the table: \"dbo.InternationalMoneyTransferTransactions\""
    dbo_InternationalMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): [dbo_InternationalMoneyTransferTransactions!]!
    "fetch aggregated fields from the table: \"dbo.InternationalMoneyTransferTransactions\""
    dbo_InternationalMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_InternationalMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_InternationalMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_InternationalMoneyTransferTransactions_bool_exp
    ): dbo_InternationalMoneyTransferTransactions_aggregate!
    "fetch data from the table: \"dbo.InternationalMoneyTransferTransactions\" using primary key columns"
    dbo_InternationalMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_InternationalMoneyTransferTransactions
    "fetch data from the table: \"dbo.Limits\""
    dbo_Limits(
        "distinct select on columns"
        distinct_on: [dbo_Limits_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Limits_order_by!],
        "filter the rows returned"
        where: dbo_Limits_bool_exp
    ): [dbo_Limits!]!
    "fetch aggregated fields from the table: \"dbo.Limits\""
    dbo_Limits_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Limits_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Limits_order_by!],
        "filter the rows returned"
        where: dbo_Limits_bool_exp
    ): dbo_Limits_aggregate!
    "fetch data from the table: \"dbo.Limits\" using primary key columns"
    dbo_Limits_by_pk(Uid: uuid!): dbo_Limits
    "fetch data from the table: \"dbo.Managers\""
    dbo_Managers(
        "distinct select on columns"
        distinct_on: [dbo_Managers_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Managers_order_by!],
        "filter the rows returned"
        where: dbo_Managers_bool_exp
    ): [dbo_Managers!]!
    "fetch aggregated fields from the table: \"dbo.Managers\""
    dbo_Managers_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Managers_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Managers_order_by!],
        "filter the rows returned"
        where: dbo_Managers_bool_exp
    ): dbo_Managers_aggregate!
    "fetch data from the table: \"dbo.Managers\" using primary key columns"
    dbo_Managers_by_pk(Id: Int!): dbo_Managers
    "fetch data from the table: \"dbo.MoneyOperationTypes\""
    dbo_MoneyOperationTypes(
        "distinct select on columns"
        distinct_on: [dbo_MoneyOperationTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_MoneyOperationTypes_order_by!],
        "filter the rows returned"
        where: dbo_MoneyOperationTypes_bool_exp
    ): [dbo_MoneyOperationTypes!]!
    "fetch aggregated fields from the table: \"dbo.MoneyOperationTypes\""
    dbo_MoneyOperationTypes_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_MoneyOperationTypes_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_MoneyOperationTypes_order_by!],
        "filter the rows returned"
        where: dbo_MoneyOperationTypes_bool_exp
    ): dbo_MoneyOperationTypes_aggregate!
    "fetch data from the table: \"dbo.MoneyOperationTypes\" using primary key columns"
    dbo_MoneyOperationTypes_by_pk(Uid: uuid!): dbo_MoneyOperationTypes
    "fetch data from the table: \"dbo.OperationEntityShortLinkEntities\""
    dbo_OperationEntityShortLinkEntities(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): [dbo_OperationEntityShortLinkEntities!]!
    "fetch aggregated fields from the table: \"dbo.OperationEntityShortLinkEntities\""
    dbo_OperationEntityShortLinkEntities_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_OperationEntityShortLinkEntities_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_OperationEntityShortLinkEntities_order_by!],
        "filter the rows returned"
        where: dbo_OperationEntityShortLinkEntities_bool_exp
    ): dbo_OperationEntityShortLinkEntities_aggregate!
    "fetch data from the table: \"dbo.OperationEntityShortLinkEntities\" using primary key columns"
    dbo_OperationEntityShortLinkEntities_by_pk(OperationEntity_Uid: uuid!, ShortLinkEntity_Uid: uuid!): dbo_OperationEntityShortLinkEntities
    "fetch data from the table: \"dbo.Operations\""
    dbo_Operations(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): [dbo_Operations!]!
    "fetch aggregated fields from the table: \"dbo.Operations\""
    dbo_Operations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Operations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Operations_order_by!],
        "filter the rows returned"
        where: dbo_Operations_bool_exp
    ): dbo_Operations_aggregate!
    "fetch data from the table: \"dbo.Operations\" using primary key columns"
    dbo_Operations_by_pk(Uid: uuid!): dbo_Operations
    "fetch data from the table: \"dbo.PaymentHistory\""
    dbo_PaymentHistory(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): [dbo_PaymentHistory!]!
    "fetch aggregated fields from the table: \"dbo.PaymentHistory\""
    dbo_PaymentHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PaymentHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PaymentHistory_order_by!],
        "filter the rows returned"
        where: dbo_PaymentHistory_bool_exp
    ): dbo_PaymentHistory_aggregate!
    "fetch data from the table: \"dbo.PaymentHistory\" using primary key columns"
    dbo_PaymentHistory_by_pk(Uid: uuid!): dbo_PaymentHistory
    "fetch data from the table: \"dbo.PhoneNumberVerifications\""
    dbo_PhoneNumberVerifications(
        "distinct select on columns"
        distinct_on: [dbo_PhoneNumberVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PhoneNumberVerifications_order_by!],
        "filter the rows returned"
        where: dbo_PhoneNumberVerifications_bool_exp
    ): [dbo_PhoneNumberVerifications!]!
    "fetch aggregated fields from the table: \"dbo.PhoneNumberVerifications\""
    dbo_PhoneNumberVerifications_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_PhoneNumberVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_PhoneNumberVerifications_order_by!],
        "filter the rows returned"
        where: dbo_PhoneNumberVerifications_bool_exp
    ): dbo_PhoneNumberVerifications_aggregate!
    "fetch data from the table: \"dbo.PhoneNumberVerifications\" using primary key columns"
    dbo_PhoneNumberVerifications_by_pk(Uid: uuid!): dbo_PhoneNumberVerifications
    "fetch data from the table: \"dbo.ReferallDeviceGuid\""
    dbo_ReferallDeviceGuid(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): [dbo_ReferallDeviceGuid!]!
    "fetch aggregated fields from the table: \"dbo.ReferallDeviceGuid\""
    dbo_ReferallDeviceGuid_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReferallDeviceGuid_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReferallDeviceGuid_order_by!],
        "filter the rows returned"
        where: dbo_ReferallDeviceGuid_bool_exp
    ): dbo_ReferallDeviceGuid_aggregate!
    "fetch data from the table: \"dbo.ReferallDeviceGuid\" using primary key columns"
    dbo_ReferallDeviceGuid_by_pk(Id: uuid!): dbo_ReferallDeviceGuid
    "fetch data from the table: \"dbo.RefreshTokens\""
    dbo_RefreshTokens(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): [dbo_RefreshTokens!]!
    "fetch aggregated fields from the table: \"dbo.RefreshTokens\""
    dbo_RefreshTokens_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_RefreshTokens_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_RefreshTokens_order_by!],
        "filter the rows returned"
        where: dbo_RefreshTokens_bool_exp
    ): dbo_RefreshTokens_aggregate!
    "fetch data from the table: \"dbo.RefreshTokens\" using primary key columns"
    dbo_RefreshTokens_by_pk(Uid: uuid!): dbo_RefreshTokens
    "fetch data from the table: \"dbo.Registrations\""
    dbo_Registrations(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): [dbo_Registrations!]!
    "fetch aggregated fields from the table: \"dbo.Registrations\""
    dbo_Registrations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Registrations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Registrations_order_by!],
        "filter the rows returned"
        where: dbo_Registrations_bool_exp
    ): dbo_Registrations_aggregate!
    "fetch data from the table: \"dbo.Registrations\" using primary key columns"
    dbo_Registrations_by_pk(Uid: uuid!): dbo_Registrations
    "fetch data from the table: \"dbo.ReservationCards\""
    dbo_ReservationCards(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): [dbo_ReservationCards!]!
    "fetch aggregated fields from the table: \"dbo.ReservationCards\""
    dbo_ReservationCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ReservationCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ReservationCards_order_by!],
        "filter the rows returned"
        where: dbo_ReservationCards_bool_exp
    ): dbo_ReservationCards_aggregate!
    "fetch data from the table: \"dbo.ReservationCards\" using primary key columns"
    dbo_ReservationCards_by_pk(CardType: Int!, UserUid: uuid!): dbo_ReservationCards
    "fetch data from the table: \"dbo.Roles\""
    dbo_Roles(
        "distinct select on columns"
        distinct_on: [dbo_Roles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Roles_order_by!],
        "filter the rows returned"
        where: dbo_Roles_bool_exp
    ): [dbo_Roles!]!
    "fetch aggregated fields from the table: \"dbo.Roles\""
    dbo_Roles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Roles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Roles_order_by!],
        "filter the rows returned"
        where: dbo_Roles_bool_exp
    ): dbo_Roles_aggregate!
    "fetch data from the table: \"dbo.Roles\" using primary key columns"
    dbo_Roles_by_pk(Id: smallint!): dbo_Roles
    "fetch data from the table: \"dbo.ShortLinks\""
    dbo_ShortLinks(
        "distinct select on columns"
        distinct_on: [dbo_ShortLinks_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ShortLinks_order_by!],
        "filter the rows returned"
        where: dbo_ShortLinks_bool_exp
    ): [dbo_ShortLinks!]!
    "fetch aggregated fields from the table: \"dbo.ShortLinks\""
    dbo_ShortLinks_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ShortLinks_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ShortLinks_order_by!],
        "filter the rows returned"
        where: dbo_ShortLinks_bool_exp
    ): dbo_ShortLinks_aggregate!
    "fetch data from the table: \"dbo.ShortLinks\" using primary key columns"
    dbo_ShortLinks_by_pk(Uid: uuid!): dbo_ShortLinks
    "fetch data from the table: \"dbo.Transactions\""
    dbo_Transactions(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): [dbo_Transactions!]!
    "fetch aggregated fields from the table: \"dbo.Transactions\""
    dbo_Transactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Transactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Transactions_order_by!],
        "filter the rows returned"
        where: dbo_Transactions_bool_exp
    ): dbo_Transactions_aggregate!
    "fetch data from the table: \"dbo.Transactions\" using primary key columns"
    dbo_Transactions_by_pk(Uid: uuid!): dbo_Transactions
    "fetch data from the table: \"dbo.UnistreamClientHistory\""
    dbo_UnistreamClientHistory(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): [dbo_UnistreamClientHistory!]!
    "fetch aggregated fields from the table: \"dbo.UnistreamClientHistory\""
    dbo_UnistreamClientHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamClientHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamClientHistory_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamClientHistory_bool_exp
    ): dbo_UnistreamClientHistory_aggregate!
    "fetch data from the table: \"dbo.UnistreamClientHistory\" using primary key columns"
    dbo_UnistreamClientHistory_by_pk(Uid: uuid!): dbo_UnistreamClientHistory
    "fetch data from the table: \"dbo.UnistreamOperations\""
    dbo_UnistreamOperations(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): [dbo_UnistreamOperations!]!
    "fetch aggregated fields from the table: \"dbo.UnistreamOperations\""
    dbo_UnistreamOperations_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UnistreamOperations_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UnistreamOperations_order_by!],
        "filter the rows returned"
        where: dbo_UnistreamOperations_bool_exp
    ): dbo_UnistreamOperations_aggregate!
    "fetch data from the table: \"dbo.UnistreamOperations\" using primary key columns"
    dbo_UnistreamOperations_by_pk(OperationUid: uuid!): dbo_UnistreamOperations
    "fetch data from the table: \"dbo.UserCards\""
    dbo_UserCards(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): [dbo_UserCards!]!
    "fetch aggregated fields from the table: \"dbo.UserCards\""
    dbo_UserCards_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserCards_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserCards_order_by!],
        "filter the rows returned"
        where: dbo_UserCards_bool_exp
    ): dbo_UserCards_aggregate!
    "fetch data from the table: \"dbo.UserCards\" using primary key columns"
    dbo_UserCards_by_pk(Uid: uuid!): dbo_UserCards
    "fetch data from the table: \"dbo.UserDetails\""
    dbo_UserDetails(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): [dbo_UserDetails!]!
    "fetch data from the table: \"dbo.UserDetailsAddresses\""
    dbo_UserDetailsAddresses(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): [dbo_UserDetailsAddresses!]!
    "fetch aggregated fields from the table: \"dbo.UserDetailsAddresses\""
    dbo_UserDetailsAddresses_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsAddresses_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsAddresses_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsAddresses_bool_exp
    ): dbo_UserDetailsAddresses_aggregate!
    "fetch data from the table: \"dbo.UserDetailsAddresses\" using primary key columns"
    dbo_UserDetailsAddresses_by_pk(Uid: uuid!): dbo_UserDetailsAddresses
    "fetch data from the table: \"dbo.UserDetailsDocuments\""
    dbo_UserDetailsDocuments(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): [dbo_UserDetailsDocuments!]!
    "fetch aggregated fields from the table: \"dbo.UserDetailsDocuments\""
    dbo_UserDetailsDocuments_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetailsDocuments_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetailsDocuments_order_by!],
        "filter the rows returned"
        where: dbo_UserDetailsDocuments_bool_exp
    ): dbo_UserDetailsDocuments_aggregate!
    "fetch data from the table: \"dbo.UserDetailsDocuments\" using primary key columns"
    dbo_UserDetailsDocuments_by_pk(Uid: uuid!): dbo_UserDetailsDocuments
    "fetch aggregated fields from the table: \"dbo.UserDetails\""
    dbo_UserDetails_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDetails_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDetails_order_by!],
        "filter the rows returned"
        where: dbo_UserDetails_bool_exp
    ): dbo_UserDetails_aggregate!
    "fetch data from the table: \"dbo.UserDetails\" using primary key columns"
    dbo_UserDetails_by_pk(UserUid: uuid!): dbo_UserDetails
    "fetch data from the table: \"dbo.UserDeviceGuids\""
    dbo_UserDeviceGuids(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): [dbo_UserDeviceGuids!]!
    "fetch aggregated fields from the table: \"dbo.UserDeviceGuids\""
    dbo_UserDeviceGuids_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserDeviceGuids_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserDeviceGuids_order_by!],
        "filter the rows returned"
        where: dbo_UserDeviceGuids_bool_exp
    ): dbo_UserDeviceGuids_aggregate!
    "fetch data from the table: \"dbo.UserDeviceGuids\" using primary key columns"
    dbo_UserDeviceGuids_by_pk(Id: uuid!): dbo_UserDeviceGuids
    "fetch data from the table: \"dbo.UserPhoneVerifications\""
    dbo_UserPhoneVerifications(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): [dbo_UserPhoneVerifications!]!
    "fetch aggregated fields from the table: \"dbo.UserPhoneVerifications\""
    dbo_UserPhoneVerifications_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserPhoneVerifications_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserPhoneVerifications_order_by!],
        "filter the rows returned"
        where: dbo_UserPhoneVerifications_bool_exp
    ): dbo_UserPhoneVerifications_aggregate!
    "fetch data from the table: \"dbo.UserPhoneVerifications\" using primary key columns"
    dbo_UserPhoneVerifications_by_pk(Uid: uuid!): dbo_UserPhoneVerifications
    "fetch data from the table: \"dbo.UserRoles\""
    dbo_UserRoles(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): [dbo_UserRoles!]!
    "fetch aggregated fields from the table: \"dbo.UserRoles\""
    dbo_UserRoles_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserRoles_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserRoles_order_by!],
        "filter the rows returned"
        where: dbo_UserRoles_bool_exp
    ): dbo_UserRoles_aggregate!
    "fetch data from the table: \"dbo.UserRoles\" using primary key columns"
    dbo_UserRoles_by_pk(RoleId: smallint!, UserUid: uuid!): dbo_UserRoles
    "fetch data from the table: \"dbo.UserTransactions\""
    dbo_UserTransactions(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): [dbo_UserTransactions!]!
    "fetch aggregated fields from the table: \"dbo.UserTransactions\""
    dbo_UserTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_UserTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_UserTransactions_order_by!],
        "filter the rows returned"
        where: dbo_UserTransactions_bool_exp
    ): dbo_UserTransactions_aggregate!
    "fetch data from the table: \"dbo.UserTransactions\" using primary key columns"
    dbo_UserTransactions_by_pk(Uid: uuid!): dbo_UserTransactions
    "fetch data from the table: \"dbo.Users\""
    dbo_Users(
        "distinct select on columns"
        distinct_on: [dbo_Users_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Users_order_by!],
        "filter the rows returned"
        where: dbo_Users_bool_exp
    ): [dbo_Users!]!
    "fetch aggregated fields from the table: \"dbo.Users\""
    dbo_Users_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_Users_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_Users_order_by!],
        "filter the rows returned"
        where: dbo_Users_bool_exp
    ): dbo_Users_aggregate!
    "fetch data from the table: \"dbo.Users\" using primary key columns"
    dbo_Users_by_pk(Uid: uuid!): dbo_Users
    "fetch data from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    dbo_ZamZamMoneyTransferTransactions(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): [dbo_ZamZamMoneyTransferTransactions!]!
    "fetch aggregated fields from the table: \"dbo.ZamZamMoneyTransferTransactions\""
    dbo_ZamZamMoneyTransferTransactions_aggregate(
        "distinct select on columns"
        distinct_on: [dbo_ZamZamMoneyTransferTransactions_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo_ZamZamMoneyTransferTransactions_order_by!],
        "filter the rows returned"
        where: dbo_ZamZamMoneyTransferTransactions_bool_exp
    ): dbo_ZamZamMoneyTransferTransactions_aggregate!
    "fetch data from the table: \"dbo.ZamZamMoneyTransferTransactions\" using primary key columns"
    dbo_ZamZamMoneyTransferTransactions_by_pk(Uid: uuid!): dbo_ZamZamMoneyTransferTransactions
    "fetch data from the table: \"dbo.__MigrationHistory\""
    dbo___MigrationHistory(
        "distinct select on columns"
        distinct_on: [dbo___MigrationHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo___MigrationHistory_order_by!],
        "filter the rows returned"
        where: dbo___MigrationHistory_bool_exp
    ): [dbo___MigrationHistory!]!
    "fetch aggregated fields from the table: \"dbo.__MigrationHistory\""
    dbo___MigrationHistory_aggregate(
        "distinct select on columns"
        distinct_on: [dbo___MigrationHistory_select_column!],
        "limit the number of rows returned"
        limit: Int,
        "skip the first n rows. Use only with order_by"
        offset: Int,
        "sort the rows by one or more columns"
        order_by: [dbo___MigrationHistory_order_by!],
        "filter the rows returned"
        where: dbo___MigrationHistory_bool_exp
    ): dbo___MigrationHistory_aggregate!
    "fetch data from the table: \"dbo.__MigrationHistory\" using primary key columns"
    dbo___MigrationHistory_by_pk(ContextKey: String!, MigrationId: String!): dbo___MigrationHistory
}

"unique or primary key constraints on table \"dbo.AccountTypes\""
enum dbo_AccountTypes_constraint {
    "unique or primary key constraint"
    AccountTypes_IX_Name
}

"select columns of table \"dbo.AccountTypes\""
enum dbo_AccountTypes_select_column {
    "column name"
    AutoGenerateAccount
    "column name"
    CreatedUtcDateTime
    "column name"
    CurrencyUid
    "column name"
    IsDeleted
    "column name"
    MaxBalance
    "column name"
    ModifiedUtcDateTime
    "column name"
    Name
    "column name"
    Uid
}

"update columns of table \"dbo.AccountTypes\""
enum dbo_AccountTypes_update_column {
    "column name"
    AutoGenerateAccount
    "column name"
    CreatedUtcDateTime
    "column name"
    CurrencyUid
    "column name"
    IsDeleted
    "column name"
    MaxBalance
    "column name"
    ModifiedUtcDateTime
    "column name"
    Name
    "column name"
    Uid
}

"select columns of table \"dbo.Accounts\""
enum dbo_Accounts_select_column {
    "column name"
    Balance
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Status
    "column name"
    TypeUid
    "column name"
    Uid
    "column name"
    UserUid
}

"select columns of table \"dbo.Best2PayOperations\""
enum dbo_Best2PayOperations_select_column {
    "column name"
    Best2Pay
    "column name"
    Best2PayOperationId
    "column name"
    Best2PayOrderId
    "column name"
    OperationUid
}

"unique or primary key constraints on table \"dbo.Clients\""
enum dbo_Clients_constraint {
    "unique or primary key constraint"
    Clients_IX_Name
}

"select columns of table \"dbo.Clients\""
enum dbo_Clients_select_column {
    "column name"
    AllowedOrigin
    "column name"
    ApplicationType
    "column name"
    CreatedUtcDateTime
    "column name"
    IsActive
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Name
    "column name"
    RefreshTokenLifeTime
    "column name"
    SecretHash
    "column name"
    SecretSalt
    "column name"
    Uid
}

"update columns of table \"dbo.Clients\""
enum dbo_Clients_update_column {
    "column name"
    AllowedOrigin
    "column name"
    ApplicationType
    "column name"
    CreatedUtcDateTime
    "column name"
    IsActive
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Name
    "column name"
    RefreshTokenLifeTime
    "column name"
    SecretHash
    "column name"
    SecretSalt
    "column name"
    Uid
}

"select columns of table \"dbo.Countries\""
enum dbo_Countries_select_column {
    "column name"
    Alpha2Code
    "column name"
    Alpha3Code
    "column name"
    IsActive
    "column name"
    TelephoneCode
    "column name"
    Uid
}

"unique or primary key constraints on table \"dbo.Currecies\""
enum dbo_Currecies_constraint {
    "unique or primary key constraint"
    Currecies_IX_Alpha3Code
}

"select columns of table \"dbo.Currecies\""
enum dbo_Currecies_select_column {
    "column name"
    Alpha3Code
    "column name"
    Alpha3CodeNumeric
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Uid
}

"update columns of table \"dbo.Currecies\""
enum dbo_Currecies_update_column {
    "column name"
    Alpha3Code
    "column name"
    Alpha3CodeNumeric
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Uid
}

"select columns of table \"dbo.CurrentCommissionPayments\""
enum dbo_CurrentCommissionPayments_select_column {
    "column name"
    AcceptedCurrency
    "column name"
    Amount
    "column name"
    CreatedUtcDateTime
    "column name"
    CurrencyAmount
    "column name"
    ErrorMessage
    "column name"
    GetCommissionRequestType
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    PaymentId
    "column name"
    Rate
    "column name"
    RawRate
    "column name"
    UserUid
    "column name"
    WithdrawCountryCode
    "column name"
    WithdrawCurrency
}

"select columns of table \"dbo.FirebaseTokens\""
enum dbo_FirebaseTokens_select_column {
    "column name"
    Token
    "column name"
    UserUid
}

"select columns of table \"dbo.InternationalMoneyTransferTransactions\""
enum dbo_InternationalMoneyTransferTransactions_select_column {
    "column name"
    Amount
    "column name"
    CreatedUtcDateTime
    "column name"
    Description
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    RecipientAccountUid
    "column name"
    SenderAccountUid
    "column name"
    Status
    "column name"
    Uid
}

"select columns of table \"dbo.Limits\""
enum dbo_Limits_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    Direction
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Period
    "column name"
    TotalAmount
    "column name"
    Uid
}

"select columns of table \"dbo.Managers\""
enum dbo_Managers_select_column {
    "column name"
    FirstName
    "column name"
    Id
    "column name"
    LastName
}

"select columns of table \"dbo.MoneyOperationTypes\""
enum dbo_MoneyOperationTypes_select_column {
    "column name"
    Type
    "column name"
    Uid
}

"select columns of table \"dbo.OperationEntityShortLinkEntities\""
enum dbo_OperationEntityShortLinkEntities_select_column {
    "column name"
    OperationEntity_Uid
    "column name"
    ShortLinkEntity_Uid
}

"select columns of table \"dbo.Operations\""
enum dbo_Operations_select_column {
    "column name"
    AcceptedCurrencyUid
    "column name"
    Amount
    "column name"
    ClientUid
    "column name"
    CountryCode
    "column name"
    CreatedUtcDateTime
    "column name"
    CurrencyAmount
    "column name"
    FeeAmount
    "column name"
    FeeProcent
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Number
    "column name"
    OperationStatus
    "column name"
    OperationType
    "column name"
    OurFeeAmount
    "column name"
    PaymentFeeAmount
    "column name"
    Rate
    "column name"
    Request
    "column name"
    Uid
    "column name"
    UniqueNumber
    "column name"
    WhoUid
    "column name"
    WhomUid
    "column name"
    WithdrawCurrencyUid
}

"select columns of table \"dbo.PaymentHistory\""
enum dbo_PaymentHistory_select_column {
    "column name"
    Amount
    "column name"
    ClientUid
    "column name"
    CreatedUtcDateTime
    "column name"
    CurrencyUid
    "column name"
    Date
    "column name"
    Direction
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Uid
}

"select columns of table \"dbo.PhoneNumberVerifications\""
enum dbo_PhoneNumberVerifications_select_column {
    "column name"
    Code
    "column name"
    CreatedUtcDateTime
    "column name"
    ExpiresUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    PhoneNumber
    "column name"
    Status
    "column name"
    Uid
    "column name"
    VerifiedUtcDateTime
}

"select columns of table \"dbo.ReferallDeviceGuid\""
enum dbo_ReferallDeviceGuid_select_column {
    "column name"
    AppGuid
    "column name"
    Id
    "column name"
    RefferedUser_Uid
}

"select columns of table \"dbo.RefreshTokens\""
enum dbo_RefreshTokens_select_column {
    "column name"
    Body
    "column name"
    ClientUid
    "column name"
    CreatedUtcDateTime
    "column name"
    ExpiresUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    ProtectedTicket
    "column name"
    Uid
}

"select columns of table \"dbo.Registrations\""
enum dbo_Registrations_select_column {
    "column name"
    CountryId
    "column name"
    CreatedUtcDateTime
    "column name"
    FirstName
    "column name"
    HowComfortablyToReceiveMoney
    "column name"
    HowComfortablyToTranferMoney
    "column name"
    HowMuchTimeTransferMoneyInMonth
    "column name"
    IsDeleted
    "column name"
    IsIfYouReceiveMoneyYouRecommendApp
    "column name"
    IsWantCashBackForTransfer
    "column name"
    LastName
    "column name"
    ManagerId
    "column name"
    ModifiedUtcDateTime
    "column name"
    PhoneNumber
    "column name"
    Uid
    "column name"
    UserId
}

"select columns of table \"dbo.ReservationCards\""
enum dbo_ReservationCards_select_column {
    "column name"
    CardType
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    UserUid
}

"select columns of table \"dbo.Roles\""
enum dbo_Roles_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    Id
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Name
}

"select columns of table \"dbo.ShortLinks\""
enum dbo_ShortLinks_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    IsOpened
    "column name"
    Link
    "column name"
    ModifiedUtcDateTime
    "column name"
    OpenDateTime
    "column name"
    Uid
    "column name"
    Url
}

"select columns of table \"dbo.Transactions\""
enum dbo_Transactions_select_column {
    "column name"
    Amount
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    OperationUid
    "column name"
    RecepientAccountUid
    "column name"
    SenderAccountUid
    "column name"
    TransactionStatus
    "column name"
    Type
    "column name"
    Uid
}

"select columns of table \"dbo.UnistreamClientHistory\""
enum dbo_UnistreamClientHistory_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Uid
    "column name"
    UserUid
}

"select columns of table \"dbo.UnistreamOperations\""
enum dbo_UnistreamOperations_select_column {
    "column name"
    CommandId
    "column name"
    CountryCode
    "column name"
    OperationId
    "column name"
    OperationUid
    "column name"
    Type
}

"select columns of table \"dbo.UserCards\""
enum dbo_UserCards_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    Month
    "column name"
    Pan
    "column name"
    PaymentSystem
    "column name"
    Token
    "column name"
    Uid
    "column name"
    UserUid
    "column name"
    Year
}

"select columns of table \"dbo.UserDetailsAddresses\""
enum dbo_UserDetailsAddresses_select_column {
    "column name"
    Apartment
    "column name"
    Building
    "column name"
    City
    "column name"
    CountryCode
    "column name"
    CreatedUtcDateTime
    "column name"
    House
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    PartAddressString
    "column name"
    PostCode
    "column name"
    State
    "column name"
    Street
    "column name"
    Uid
    "column name"
    UserDetailsUid
}

"select columns of table \"dbo.UserDetailsDocuments\""
enum dbo_UserDetailsDocuments_select_column {
    "column name"
    Authority
    "column name"
    CountryOfResidence
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    IssueDate
    "column name"
    IssuerDepartmentCode
    "column name"
    ModifiedUtcDateTime
    "column name"
    Number
    "column name"
    Series
    "column name"
    Uid
    "column name"
    UserDetailsUid
}

"select columns of table \"dbo.UserDetails\""
enum dbo_UserDetails_select_column {
    "column name"
    AddressUid
    "column name"
    BirthDate
    "column name"
    BirthPlace
    "column name"
    CreatedUtcDateTime
    "column name"
    DocumentUid
    "column name"
    FirstName
    "column name"
    Gender
    "column name"
    IsDeleted
    "column name"
    LastName
    "column name"
    MiddleName
    "column name"
    ModifiedUtcDateTime
    "column name"
    PhoneNumber
    "column name"
    RefUser_Uid
    "column name"
    UserUid
}

"select columns of table \"dbo.UserDeviceGuids\""
enum dbo_UserDeviceGuids_select_column {
    "column name"
    DeviceGuid
    "column name"
    Id
    "column name"
    User_Uid
}

"select columns of table \"dbo.UserPhoneVerifications\""
enum dbo_UserPhoneVerifications_select_column {
    "column name"
    Code
    "column name"
    CreatedUtcDateTime
    "column name"
    ExpiresUtcDateTime
    "column name"
    IsDeleted
    "column name"
    MaxVerificationAttemps
    "column name"
    ModifiedUtcDateTime
    "column name"
    Status
    "column name"
    Uid
    "column name"
    UserUid
    "column name"
    VerificationAttemps
    "column name"
    VerifiedUtcDateTime
}

"select columns of table \"dbo.UserRoles\""
enum dbo_UserRoles_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    RoleId
    "column name"
    UserUid
}

"select columns of table \"dbo.UserTransactions\""
enum dbo_UserTransactions_select_column {
    "column name"
    AccountUid
    "column name"
    Amount
    "column name"
    CreatedUtcDateTime
    "column name"
    Description
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    OperationTypeUid
    "column name"
    Uid
}

"unique or primary key constraints on table \"dbo.Users\""
enum dbo_Users_constraint {
    "unique or primary key constraint"
    Users_IX_UserName
}

"select columns of table \"dbo.Users\""
enum dbo_Users_select_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    RefCode
    "column name"
    SecretHash
    "column name"
    SecretSalt
    "column name"
    Status
    "column name"
    Uid
    "column name"
    UserDetailsUid
    "column name"
    UserName
}

"update columns of table \"dbo.Users\""
enum dbo_Users_update_column {
    "column name"
    CreatedUtcDateTime
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    RefCode
    "column name"
    SecretHash
    "column name"
    SecretSalt
    "column name"
    Status
    "column name"
    Uid
    "column name"
    UserDetailsUid
    "column name"
    UserName
}

"select columns of table \"dbo.ZamZamMoneyTransferTransactions\""
enum dbo_ZamZamMoneyTransferTransactions_select_column {
    "column name"
    Amount
    "column name"
    CreatedUtcDateTime
    "column name"
    Description
    "column name"
    IsDeleted
    "column name"
    ModifiedUtcDateTime
    "column name"
    RecipientAccountUid
    "column name"
    SenderAccountUid
    "column name"
    Status
    "column name"
    Uid
}

"select columns of table \"dbo.__MigrationHistory\""
enum dbo___MigrationHistory_select_column {
    "column name"
    ContextKey
    "column name"
    MigrationId
    "column name"
    Model
    "column name"
    ProductVersion
}

"column ordering options"
enum order_by {
    "in the ascending order, nulls last"
    asc
    "in the ascending order, nulls first"
    asc_nulls_first
    "in the ascending order, nulls last"
    asc_nulls_last
    "in the descending order, nulls first"
    desc
    "in the descending order, nulls first"
    desc_nulls_first
    "in the descending order, nulls last"
    desc_nulls_last
}

"expression to compare columns of type Boolean. All fields are combined with logical 'AND'."
input Boolean_comparison_exp {
    _eq: Boolean
    _gt: Boolean
    _gte: Boolean
    _in: [Boolean!]
    _is_null: Boolean
    _lt: Boolean
    _lte: Boolean
    _neq: Boolean
    _nin: [Boolean!]
}

"expression to compare columns of type Int. All fields are combined with logical 'AND'."
input Int_comparison_exp {
    _eq: Int
    _gt: Int
    _gte: Int
    _in: [Int!]
    _is_null: Boolean
    _lt: Int
    _lte: Int
    _neq: Int
    _nin: [Int!]
}

"expression to compare columns of type String. All fields are combined with logical 'AND'."
input String_comparison_exp {
    _eq: String
    _gt: String
    _gte: String
    _ilike: String
    _in: [String!]
    _is_null: Boolean
    _like: String
    _lt: String
    _lte: String
    _neq: String
    _nilike: String
    _nin: [String!]
    _nlike: String
    _nsimilar: String
    _similar: String
}

"expression to compare columns of type bigint. All fields are combined with logical 'AND'."
input bigint_comparison_exp {
    _eq: bigint
    _gt: bigint
    _gte: bigint
    _in: [bigint!]
    _is_null: Boolean
    _lt: bigint
    _lte: bigint
    _neq: bigint
    _nin: [bigint!]
}

"expression to compare columns of type bytea. All fields are combined with logical 'AND'."
input bytea_comparison_exp {
    _eq: bytea
    _gt: bytea
    _gte: bytea
    _in: [bytea!]
    _is_null: Boolean
    _lt: bytea
    _lte: bytea
    _neq: bytea
    _nin: [bytea!]
}

"order by aggregate values of table \"dbo.AccountTypes\""
input dbo_AccountTypes_aggregate_order_by {
    avg: dbo_AccountTypes_avg_order_by
    count: order_by
    max: dbo_AccountTypes_max_order_by
    min: dbo_AccountTypes_min_order_by
    stddev: dbo_AccountTypes_stddev_order_by
    stddev_pop: dbo_AccountTypes_stddev_pop_order_by
    stddev_samp: dbo_AccountTypes_stddev_samp_order_by
    sum: dbo_AccountTypes_sum_order_by
    var_pop: dbo_AccountTypes_var_pop_order_by
    var_samp: dbo_AccountTypes_var_samp_order_by
    variance: dbo_AccountTypes_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.AccountTypes\""
input dbo_AccountTypes_arr_rel_insert_input {
    data: [dbo_AccountTypes_insert_input!]!
    on_conflict: dbo_AccountTypes_on_conflict
}

"order by avg() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_avg_order_by {
    MaxBalance: order_by
}

"Boolean expression to filter rows from the table \"dbo.AccountTypes\". All fields are combined with a logical 'AND'."
input dbo_AccountTypes_bool_exp {
    Accounts: dbo_Accounts_bool_exp
    AutoGenerateAccount: Boolean_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Currecy: dbo_Currecies_bool_exp
    CurrencyUid: uuid_comparison_exp
    IsDeleted: Boolean_comparison_exp
    MaxBalance: Int_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Name: String_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_AccountTypes_bool_exp]
    _not: dbo_AccountTypes_bool_exp
    _or: [dbo_AccountTypes_bool_exp]
}

"input type for incrementing integer column in table \"dbo.AccountTypes\""
input dbo_AccountTypes_inc_input {
    MaxBalance: Int
}

"input type for inserting data into table \"dbo.AccountTypes\""
input dbo_AccountTypes_insert_input {
    Accounts: dbo_Accounts_arr_rel_insert_input
    AutoGenerateAccount: Boolean
    CreatedUtcDateTime: timestamp
    Currecy: dbo_Currecies_obj_rel_insert_input
    CurrencyUid: uuid
    IsDeleted: Boolean
    MaxBalance: Int
    ModifiedUtcDateTime: timestamp
    Name: String
    Uid: uuid
}

"order by max() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_max_order_by {
    CreatedUtcDateTime: order_by
    CurrencyUid: order_by
    MaxBalance: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_min_order_by {
    CreatedUtcDateTime: order_by
    CurrencyUid: order_by
    MaxBalance: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.AccountTypes\""
input dbo_AccountTypes_obj_rel_insert_input {
    data: dbo_AccountTypes_insert_input!
    on_conflict: dbo_AccountTypes_on_conflict
}

"on conflict condition type for table \"dbo.AccountTypes\""
input dbo_AccountTypes_on_conflict {
    constraint: dbo_AccountTypes_constraint!
    update_columns: [dbo_AccountTypes_update_column!]!
    where: dbo_AccountTypes_bool_exp
}

"ordering options when selecting data from \"dbo.AccountTypes\""
input dbo_AccountTypes_order_by {
    Accounts_aggregate: dbo_Accounts_aggregate_order_by
    AutoGenerateAccount: order_by
    CreatedUtcDateTime: order_by
    Currecy: dbo_Currecies_order_by
    CurrencyUid: order_by
    IsDeleted: order_by
    MaxBalance: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.AccountTypes\""
input dbo_AccountTypes_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.AccountTypes\""
input dbo_AccountTypes_set_input {
    AutoGenerateAccount: Boolean
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    IsDeleted: Boolean
    MaxBalance: Int
    ModifiedUtcDateTime: timestamp
    Name: String
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_stddev_order_by {
    MaxBalance: order_by
}

"order by stddev_pop() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_stddev_pop_order_by {
    MaxBalance: order_by
}

"order by stddev_samp() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_stddev_samp_order_by {
    MaxBalance: order_by
}

"order by sum() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_sum_order_by {
    MaxBalance: order_by
}

"order by var_pop() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_var_pop_order_by {
    MaxBalance: order_by
}

"order by var_samp() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_var_samp_order_by {
    MaxBalance: order_by
}

"order by variance() on columns of table \"dbo.AccountTypes\""
input dbo_AccountTypes_variance_order_by {
    MaxBalance: order_by
}

"order by aggregate values of table \"dbo.Accounts\""
input dbo_Accounts_aggregate_order_by {
    avg: dbo_Accounts_avg_order_by
    count: order_by
    max: dbo_Accounts_max_order_by
    min: dbo_Accounts_min_order_by
    stddev: dbo_Accounts_stddev_order_by
    stddev_pop: dbo_Accounts_stddev_pop_order_by
    stddev_samp: dbo_Accounts_stddev_samp_order_by
    sum: dbo_Accounts_sum_order_by
    var_pop: dbo_Accounts_var_pop_order_by
    var_samp: dbo_Accounts_var_samp_order_by
    variance: dbo_Accounts_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Accounts\""
input dbo_Accounts_arr_rel_insert_input {
    data: [dbo_Accounts_insert_input!]!
}

"order by avg() on columns of table \"dbo.Accounts\""
input dbo_Accounts_avg_order_by {
    Balance: order_by
    Status: order_by
}

"Boolean expression to filter rows from the table \"dbo.Accounts\". All fields are combined with a logical 'AND'."
input dbo_Accounts_bool_exp {
    AccountType: dbo_AccountTypes_bool_exp
    Balance: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    InternationalMoneyTransferTransactions: dbo_InternationalMoneyTransferTransactions_bool_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Status: smallint_comparison_exp
    Transactions: dbo_Transactions_bool_exp
    TypeUid: uuid_comparison_exp
    Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserTransactions: dbo_UserTransactions_bool_exp
    UserUid: uuid_comparison_exp
    ZamZamMoneyTransferTransactions: dbo_ZamZamMoneyTransferTransactions_bool_exp
    _and: [dbo_Accounts_bool_exp]
    _not: dbo_Accounts_bool_exp
    _or: [dbo_Accounts_bool_exp]
    internationalMoneyTransferTransactionsBySenderaccountuid: dbo_InternationalMoneyTransferTransactions_bool_exp
    transactionsBySenderaccountuid: dbo_Transactions_bool_exp
    zamZamMoneyTransferTransactionsBySenderaccountuid: dbo_ZamZamMoneyTransferTransactions_bool_exp
}

"input type for incrementing integer column in table \"dbo.Accounts\""
input dbo_Accounts_inc_input {
    Balance: Int
    Status: smallint
}

"input type for inserting data into table \"dbo.Accounts\""
input dbo_Accounts_insert_input {
    AccountType: dbo_AccountTypes_obj_rel_insert_input
    Balance: Int
    CreatedUtcDateTime: timestamp
    InternationalMoneyTransferTransactions: dbo_InternationalMoneyTransferTransactions_arr_rel_insert_input
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Status: smallint
    Transactions: dbo_Transactions_arr_rel_insert_input
    TypeUid: uuid
    Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserTransactions: dbo_UserTransactions_arr_rel_insert_input
    UserUid: uuid
    ZamZamMoneyTransferTransactions: dbo_ZamZamMoneyTransferTransactions_arr_rel_insert_input
    internationalMoneyTransferTransactionsBySenderaccountuid: dbo_InternationalMoneyTransferTransactions_arr_rel_insert_input
    transactionsBySenderaccountuid: dbo_Transactions_arr_rel_insert_input
    zamZamMoneyTransferTransactionsBySenderaccountuid: dbo_ZamZamMoneyTransferTransactions_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.Accounts\""
input dbo_Accounts_max_order_by {
    Balance: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    TypeUid: order_by
    Uid: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.Accounts\""
input dbo_Accounts_min_order_by {
    Balance: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    TypeUid: order_by
    Uid: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.Accounts\""
input dbo_Accounts_obj_rel_insert_input {
    data: dbo_Accounts_insert_input!
}

"ordering options when selecting data from \"dbo.Accounts\""
input dbo_Accounts_order_by {
    AccountType: dbo_AccountTypes_order_by
    Balance: order_by
    CreatedUtcDateTime: order_by
    InternationalMoneyTransferTransactions_aggregate: dbo_InternationalMoneyTransferTransactions_aggregate_order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    Transactions_aggregate: dbo_Transactions_aggregate_order_by
    TypeUid: order_by
    Uid: order_by
    User: dbo_Users_order_by
    UserTransactions_aggregate: dbo_UserTransactions_aggregate_order_by
    UserUid: order_by
    ZamZamMoneyTransferTransactions_aggregate: dbo_ZamZamMoneyTransferTransactions_aggregate_order_by
    internationalMoneyTransferTransactionsBySenderaccountuid_aggregate: dbo_InternationalMoneyTransferTransactions_aggregate_order_by
    transactionsBySenderaccountuid_aggregate: dbo_Transactions_aggregate_order_by
    zamZamMoneyTransferTransactionsBySenderaccountuid_aggregate: dbo_ZamZamMoneyTransferTransactions_aggregate_order_by
}

"primary key columns input for table: \"dbo.Accounts\""
input dbo_Accounts_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Accounts\""
input dbo_Accounts_set_input {
    Balance: Int
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Status: smallint
    TypeUid: uuid
    Uid: uuid
    UserUid: uuid
}

"order by stddev() on columns of table \"dbo.Accounts\""
input dbo_Accounts_stddev_order_by {
    Balance: order_by
    Status: order_by
}

"order by stddev_pop() on columns of table \"dbo.Accounts\""
input dbo_Accounts_stddev_pop_order_by {
    Balance: order_by
    Status: order_by
}

"order by stddev_samp() on columns of table \"dbo.Accounts\""
input dbo_Accounts_stddev_samp_order_by {
    Balance: order_by
    Status: order_by
}

"order by sum() on columns of table \"dbo.Accounts\""
input dbo_Accounts_sum_order_by {
    Balance: order_by
    Status: order_by
}

"order by var_pop() on columns of table \"dbo.Accounts\""
input dbo_Accounts_var_pop_order_by {
    Balance: order_by
    Status: order_by
}

"order by var_samp() on columns of table \"dbo.Accounts\""
input dbo_Accounts_var_samp_order_by {
    Balance: order_by
    Status: order_by
}

"order by variance() on columns of table \"dbo.Accounts\""
input dbo_Accounts_variance_order_by {
    Balance: order_by
    Status: order_by
}

"order by aggregate values of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_aggregate_order_by {
    avg: dbo_Best2PayOperations_avg_order_by
    count: order_by
    max: dbo_Best2PayOperations_max_order_by
    min: dbo_Best2PayOperations_min_order_by
    stddev: dbo_Best2PayOperations_stddev_order_by
    stddev_pop: dbo_Best2PayOperations_stddev_pop_order_by
    stddev_samp: dbo_Best2PayOperations_stddev_samp_order_by
    sum: dbo_Best2PayOperations_sum_order_by
    var_pop: dbo_Best2PayOperations_var_pop_order_by
    var_samp: dbo_Best2PayOperations_var_samp_order_by
    variance: dbo_Best2PayOperations_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_arr_rel_insert_input {
    data: [dbo_Best2PayOperations_insert_input!]!
}

"order by avg() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_avg_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"Boolean expression to filter rows from the table \"dbo.Best2PayOperations\". All fields are combined with a logical 'AND'."
input dbo_Best2PayOperations_bool_exp {
    Best2Pay: Int_comparison_exp
    Best2PayOperationId: Int_comparison_exp
    Best2PayOrderId: Int_comparison_exp
    Operation: dbo_Operations_bool_exp
    OperationUid: uuid_comparison_exp
    _and: [dbo_Best2PayOperations_bool_exp]
    _not: dbo_Best2PayOperations_bool_exp
    _or: [dbo_Best2PayOperations_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_inc_input {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
}

"input type for inserting data into table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_insert_input {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
    Operation: dbo_Operations_obj_rel_insert_input
    OperationUid: uuid
}

"order by max() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_max_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
    OperationUid: order_by
}

"order by min() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_min_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
    OperationUid: order_by
}

"input type for inserting object relation for remote table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_obj_rel_insert_input {
    data: dbo_Best2PayOperations_insert_input!
}

"ordering options when selecting data from \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
    Operation: dbo_Operations_order_by
    OperationUid: order_by
}

"primary key columns input for table: \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_pk_columns_input {
    OperationUid: uuid!
}

"input type for updating data in table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_set_input {
    Best2Pay: Int
    Best2PayOperationId: Int
    Best2PayOrderId: Int
    OperationUid: uuid
}

"order by stddev() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_stddev_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by stddev_pop() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_stddev_pop_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by stddev_samp() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_stddev_samp_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by sum() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_sum_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by var_pop() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_var_pop_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by var_samp() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_var_samp_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by variance() on columns of table \"dbo.Best2PayOperations\""
input dbo_Best2PayOperations_variance_order_by {
    Best2Pay: order_by
    Best2PayOperationId: order_by
    Best2PayOrderId: order_by
}

"order by aggregate values of table \"dbo.Clients\""
input dbo_Clients_aggregate_order_by {
    avg: dbo_Clients_avg_order_by
    count: order_by
    max: dbo_Clients_max_order_by
    min: dbo_Clients_min_order_by
    stddev: dbo_Clients_stddev_order_by
    stddev_pop: dbo_Clients_stddev_pop_order_by
    stddev_samp: dbo_Clients_stddev_samp_order_by
    sum: dbo_Clients_sum_order_by
    var_pop: dbo_Clients_var_pop_order_by
    var_samp: dbo_Clients_var_samp_order_by
    variance: dbo_Clients_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Clients\""
input dbo_Clients_arr_rel_insert_input {
    data: [dbo_Clients_insert_input!]!
    on_conflict: dbo_Clients_on_conflict
}

"order by avg() on columns of table \"dbo.Clients\""
input dbo_Clients_avg_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"Boolean expression to filter rows from the table \"dbo.Clients\". All fields are combined with a logical 'AND'."
input dbo_Clients_bool_exp {
    AllowedOrigin: String_comparison_exp
    ApplicationType: smallint_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    IsActive: Boolean_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Name: String_comparison_exp
    Operations: dbo_Operations_bool_exp
    PaymentHistories: dbo_PaymentHistory_bool_exp
    RefreshTokenLifeTime: Int_comparison_exp
    RefreshTokens: dbo_RefreshTokens_bool_exp
    SecretHash: String_comparison_exp
    SecretSalt: String_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_Clients_bool_exp]
    _not: dbo_Clients_bool_exp
    _or: [dbo_Clients_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Clients\""
input dbo_Clients_inc_input {
    ApplicationType: smallint
    RefreshTokenLifeTime: Int
}

"input type for inserting data into table \"dbo.Clients\""
input dbo_Clients_insert_input {
    AllowedOrigin: String
    ApplicationType: smallint
    CreatedUtcDateTime: timestamp
    IsActive: Boolean
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Name: String
    Operations: dbo_Operations_arr_rel_insert_input
    PaymentHistories: dbo_PaymentHistory_arr_rel_insert_input
    RefreshTokenLifeTime: Int
    RefreshTokens: dbo_RefreshTokens_arr_rel_insert_input
    SecretHash: String
    SecretSalt: String
    Uid: uuid
}

"order by max() on columns of table \"dbo.Clients\""
input dbo_Clients_max_order_by {
    AllowedOrigin: order_by
    ApplicationType: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    RefreshTokenLifeTime: order_by
    SecretHash: order_by
    SecretSalt: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.Clients\""
input dbo_Clients_min_order_by {
    AllowedOrigin: order_by
    ApplicationType: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    RefreshTokenLifeTime: order_by
    SecretHash: order_by
    SecretSalt: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.Clients\""
input dbo_Clients_obj_rel_insert_input {
    data: dbo_Clients_insert_input!
    on_conflict: dbo_Clients_on_conflict
}

"on conflict condition type for table \"dbo.Clients\""
input dbo_Clients_on_conflict {
    constraint: dbo_Clients_constraint!
    update_columns: [dbo_Clients_update_column!]!
    where: dbo_Clients_bool_exp
}

"ordering options when selecting data from \"dbo.Clients\""
input dbo_Clients_order_by {
    AllowedOrigin: order_by
    ApplicationType: order_by
    CreatedUtcDateTime: order_by
    IsActive: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    Operations_aggregate: dbo_Operations_aggregate_order_by
    PaymentHistories_aggregate: dbo_PaymentHistory_aggregate_order_by
    RefreshTokenLifeTime: order_by
    RefreshTokens_aggregate: dbo_RefreshTokens_aggregate_order_by
    SecretHash: order_by
    SecretSalt: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.Clients\""
input dbo_Clients_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Clients\""
input dbo_Clients_set_input {
    AllowedOrigin: String
    ApplicationType: smallint
    CreatedUtcDateTime: timestamp
    IsActive: Boolean
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Name: String
    RefreshTokenLifeTime: Int
    SecretHash: String
    SecretSalt: String
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.Clients\""
input dbo_Clients_stddev_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by stddev_pop() on columns of table \"dbo.Clients\""
input dbo_Clients_stddev_pop_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by stddev_samp() on columns of table \"dbo.Clients\""
input dbo_Clients_stddev_samp_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by sum() on columns of table \"dbo.Clients\""
input dbo_Clients_sum_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by var_pop() on columns of table \"dbo.Clients\""
input dbo_Clients_var_pop_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by var_samp() on columns of table \"dbo.Clients\""
input dbo_Clients_var_samp_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by variance() on columns of table \"dbo.Clients\""
input dbo_Clients_variance_order_by {
    ApplicationType: order_by
    RefreshTokenLifeTime: order_by
}

"order by aggregate values of table \"dbo.Countries\""
input dbo_Countries_aggregate_order_by {
    count: order_by
    max: dbo_Countries_max_order_by
    min: dbo_Countries_min_order_by
}

"input type for inserting array relation for remote table \"dbo.Countries\""
input dbo_Countries_arr_rel_insert_input {
    data: [dbo_Countries_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.Countries\". All fields are combined with a logical 'AND'."
input dbo_Countries_bool_exp {
    Alpha2Code: String_comparison_exp
    Alpha3Code: String_comparison_exp
    IsActive: Boolean_comparison_exp
    Registrations: dbo_Registrations_bool_exp
    TelephoneCode: String_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_Countries_bool_exp]
    _not: dbo_Countries_bool_exp
    _or: [dbo_Countries_bool_exp]
}

"input type for inserting data into table \"dbo.Countries\""
input dbo_Countries_insert_input {
    Alpha2Code: String
    Alpha3Code: String
    IsActive: Boolean
    Registrations: dbo_Registrations_arr_rel_insert_input
    TelephoneCode: String
    Uid: uuid
}

"order by max() on columns of table \"dbo.Countries\""
input dbo_Countries_max_order_by {
    Alpha2Code: order_by
    Alpha3Code: order_by
    TelephoneCode: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.Countries\""
input dbo_Countries_min_order_by {
    Alpha2Code: order_by
    Alpha3Code: order_by
    TelephoneCode: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.Countries\""
input dbo_Countries_obj_rel_insert_input {
    data: dbo_Countries_insert_input!
}

"ordering options when selecting data from \"dbo.Countries\""
input dbo_Countries_order_by {
    Alpha2Code: order_by
    Alpha3Code: order_by
    IsActive: order_by
    Registrations_aggregate: dbo_Registrations_aggregate_order_by
    TelephoneCode: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.Countries\""
input dbo_Countries_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Countries\""
input dbo_Countries_set_input {
    Alpha2Code: String
    Alpha3Code: String
    IsActive: Boolean
    TelephoneCode: String
    Uid: uuid
}

"order by aggregate values of table \"dbo.Currecies\""
input dbo_Currecies_aggregate_order_by {
    count: order_by
    max: dbo_Currecies_max_order_by
    min: dbo_Currecies_min_order_by
}

"input type for inserting array relation for remote table \"dbo.Currecies\""
input dbo_Currecies_arr_rel_insert_input {
    data: [dbo_Currecies_insert_input!]!
    on_conflict: dbo_Currecies_on_conflict
}

"Boolean expression to filter rows from the table \"dbo.Currecies\". All fields are combined with a logical 'AND'."
input dbo_Currecies_bool_exp {
    AccountTypes: dbo_AccountTypes_bool_exp
    Alpha3Code: String_comparison_exp
    Alpha3CodeNumeric: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Operations: dbo_Operations_bool_exp
    PaymentHistories: dbo_PaymentHistory_bool_exp
    Uid: uuid_comparison_exp
    _and: [dbo_Currecies_bool_exp]
    _not: dbo_Currecies_bool_exp
    _or: [dbo_Currecies_bool_exp]
    operationsByWithdrawcurrencyuid: dbo_Operations_bool_exp
}

"input type for inserting data into table \"dbo.Currecies\""
input dbo_Currecies_insert_input {
    AccountTypes: dbo_AccountTypes_arr_rel_insert_input
    Alpha3Code: String
    Alpha3CodeNumeric: String
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Operations: dbo_Operations_arr_rel_insert_input
    PaymentHistories: dbo_PaymentHistory_arr_rel_insert_input
    Uid: uuid
    operationsByWithdrawcurrencyuid: dbo_Operations_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.Currecies\""
input dbo_Currecies_max_order_by {
    Alpha3Code: order_by
    Alpha3CodeNumeric: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.Currecies\""
input dbo_Currecies_min_order_by {
    Alpha3Code: order_by
    Alpha3CodeNumeric: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.Currecies\""
input dbo_Currecies_obj_rel_insert_input {
    data: dbo_Currecies_insert_input!
    on_conflict: dbo_Currecies_on_conflict
}

"on conflict condition type for table \"dbo.Currecies\""
input dbo_Currecies_on_conflict {
    constraint: dbo_Currecies_constraint!
    update_columns: [dbo_Currecies_update_column!]!
    where: dbo_Currecies_bool_exp
}

"ordering options when selecting data from \"dbo.Currecies\""
input dbo_Currecies_order_by {
    AccountTypes_aggregate: dbo_AccountTypes_aggregate_order_by
    Alpha3Code: order_by
    Alpha3CodeNumeric: order_by
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Operations_aggregate: dbo_Operations_aggregate_order_by
    PaymentHistories_aggregate: dbo_PaymentHistory_aggregate_order_by
    Uid: order_by
    operationsByWithdrawcurrencyuid_aggregate: dbo_Operations_aggregate_order_by
}

"primary key columns input for table: \"dbo.Currecies\""
input dbo_Currecies_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Currecies\""
input dbo_Currecies_set_input {
    Alpha3Code: String
    Alpha3CodeNumeric: String
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"order by aggregate values of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_aggregate_order_by {
    avg: dbo_CurrentCommissionPayments_avg_order_by
    count: order_by
    max: dbo_CurrentCommissionPayments_max_order_by
    min: dbo_CurrentCommissionPayments_min_order_by
    stddev: dbo_CurrentCommissionPayments_stddev_order_by
    stddev_pop: dbo_CurrentCommissionPayments_stddev_pop_order_by
    stddev_samp: dbo_CurrentCommissionPayments_stddev_samp_order_by
    sum: dbo_CurrentCommissionPayments_sum_order_by
    var_pop: dbo_CurrentCommissionPayments_var_pop_order_by
    var_samp: dbo_CurrentCommissionPayments_var_samp_order_by
    variance: dbo_CurrentCommissionPayments_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_arr_rel_insert_input {
    data: [dbo_CurrentCommissionPayments_insert_input!]!
}

"order by avg() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_avg_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"Boolean expression to filter rows from the table \"dbo.CurrentCommissionPayments\". All fields are combined with a logical 'AND'."
input dbo_CurrentCommissionPayments_bool_exp {
    AcceptedCurrency: String_comparison_exp
    Amount: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    CurrencyAmount: Int_comparison_exp
    ErrorMessage: String_comparison_exp
    GetCommissionRequestType: smallint_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    PaymentId: bigint_comparison_exp
    Rate: Int_comparison_exp
    RawRate: numeric_comparison_exp
    UserUid: uuid_comparison_exp
    WithdrawCountryCode: String_comparison_exp
    WithdrawCurrency: String_comparison_exp
    _and: [dbo_CurrentCommissionPayments_bool_exp]
    _not: dbo_CurrentCommissionPayments_bool_exp
    _or: [dbo_CurrentCommissionPayments_bool_exp]
}

"input type for incrementing integer column in table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_inc_input {
    Amount: Int
    CurrencyAmount: Int
    GetCommissionRequestType: smallint
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
}

"input type for inserting data into table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_insert_input {
    AcceptedCurrency: String
    Amount: Int
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    ErrorMessage: String
    GetCommissionRequestType: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
    UserUid: uuid
    WithdrawCountryCode: String
    WithdrawCurrency: String
}

"order by max() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_max_order_by {
    AcceptedCurrency: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    CurrencyAmount: order_by
    ErrorMessage: order_by
    GetCommissionRequestType: order_by
    ModifiedUtcDateTime: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
    UserUid: order_by
    WithdrawCountryCode: order_by
    WithdrawCurrency: order_by
}

"order by min() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_min_order_by {
    AcceptedCurrency: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    CurrencyAmount: order_by
    ErrorMessage: order_by
    GetCommissionRequestType: order_by
    ModifiedUtcDateTime: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
    UserUid: order_by
    WithdrawCountryCode: order_by
    WithdrawCurrency: order_by
}

"input type for inserting object relation for remote table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_obj_rel_insert_input {
    data: dbo_CurrentCommissionPayments_insert_input!
}

"ordering options when selecting data from \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_order_by {
    AcceptedCurrency: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    CurrencyAmount: order_by
    ErrorMessage: order_by
    GetCommissionRequestType: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
    UserUid: order_by
    WithdrawCountryCode: order_by
    WithdrawCurrency: order_by
}

"primary key columns input for table: \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_pk_columns_input {
    PaymentId: bigint!
}

"input type for updating data in table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_set_input {
    AcceptedCurrency: String
    Amount: Int
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    ErrorMessage: String
    GetCommissionRequestType: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PaymentId: bigint
    Rate: Int
    RawRate: numeric
    UserUid: uuid
    WithdrawCountryCode: String
    WithdrawCurrency: String
}

"order by stddev() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_stddev_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by stddev_pop() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_stddev_pop_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by stddev_samp() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_stddev_samp_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by sum() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_sum_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by var_pop() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_var_pop_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by var_samp() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_var_samp_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by variance() on columns of table \"dbo.CurrentCommissionPayments\""
input dbo_CurrentCommissionPayments_variance_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    GetCommissionRequestType: order_by
    PaymentId: order_by
    Rate: order_by
    RawRate: order_by
}

"order by aggregate values of table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_aggregate_order_by {
    count: order_by
    max: dbo_FirebaseTokens_max_order_by
    min: dbo_FirebaseTokens_min_order_by
}

"input type for inserting array relation for remote table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_arr_rel_insert_input {
    data: [dbo_FirebaseTokens_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.FirebaseTokens\". All fields are combined with a logical 'AND'."
input dbo_FirebaseTokens_bool_exp {
    Token: String_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    _and: [dbo_FirebaseTokens_bool_exp]
    _not: dbo_FirebaseTokens_bool_exp
    _or: [dbo_FirebaseTokens_bool_exp]
}

"input type for inserting data into table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_insert_input {
    Token: String
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
}

"order by max() on columns of table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_max_order_by {
    Token: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_min_order_by {
    Token: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_obj_rel_insert_input {
    data: dbo_FirebaseTokens_insert_input!
}

"ordering options when selecting data from \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_order_by {
    Token: order_by
    User: dbo_Users_order_by
    UserUid: order_by
}

"primary key columns input for table: \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_pk_columns_input {
    Token: String!
    UserUid: uuid!
}

"input type for updating data in table \"dbo.FirebaseTokens\""
input dbo_FirebaseTokens_set_input {
    Token: String
    UserUid: uuid
}

"order by aggregate values of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_aggregate_order_by {
    avg: dbo_InternationalMoneyTransferTransactions_avg_order_by
    count: order_by
    max: dbo_InternationalMoneyTransferTransactions_max_order_by
    min: dbo_InternationalMoneyTransferTransactions_min_order_by
    stddev: dbo_InternationalMoneyTransferTransactions_stddev_order_by
    stddev_pop: dbo_InternationalMoneyTransferTransactions_stddev_pop_order_by
    stddev_samp: dbo_InternationalMoneyTransferTransactions_stddev_samp_order_by
    sum: dbo_InternationalMoneyTransferTransactions_sum_order_by
    var_pop: dbo_InternationalMoneyTransferTransactions_var_pop_order_by
    var_samp: dbo_InternationalMoneyTransferTransactions_var_samp_order_by
    variance: dbo_InternationalMoneyTransferTransactions_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_arr_rel_insert_input {
    data: [dbo_InternationalMoneyTransferTransactions_insert_input!]!
}

"order by avg() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_avg_order_by {
    Amount: order_by
    Status: order_by
}

"Boolean expression to filter rows from the table \"dbo.InternationalMoneyTransferTransactions\". All fields are combined with a logical 'AND'."
input dbo_InternationalMoneyTransferTransactions_bool_exp {
    Account: dbo_Accounts_bool_exp
    Amount: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Description: String_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    RecipientAccountUid: uuid_comparison_exp
    SenderAccountUid: uuid_comparison_exp
    Status: Int_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_InternationalMoneyTransferTransactions_bool_exp]
    _not: dbo_InternationalMoneyTransferTransactions_bool_exp
    _or: [dbo_InternationalMoneyTransferTransactions_bool_exp]
    accountByRecipientaccountuid: dbo_Accounts_bool_exp
}

"input type for incrementing integer column in table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_inc_input {
    Amount: Int
    Status: Int
}

"input type for inserting data into table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_insert_input {
    Account: dbo_Accounts_obj_rel_insert_input
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
    accountByRecipientaccountuid: dbo_Accounts_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_max_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_min_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_obj_rel_insert_input {
    data: dbo_InternationalMoneyTransferTransactions_insert_input!
}

"ordering options when selecting data from \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_order_by {
    Account: dbo_Accounts_order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
    accountByRecipientaccountuid: dbo_Accounts_order_by
}

"primary key columns input for table: \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_set_input {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_stddev_order_by {
    Amount: order_by
    Status: order_by
}

"order by stddev_pop() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_stddev_pop_order_by {
    Amount: order_by
    Status: order_by
}

"order by stddev_samp() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_stddev_samp_order_by {
    Amount: order_by
    Status: order_by
}

"order by sum() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_sum_order_by {
    Amount: order_by
    Status: order_by
}

"order by var_pop() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_var_pop_order_by {
    Amount: order_by
    Status: order_by
}

"order by var_samp() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_var_samp_order_by {
    Amount: order_by
    Status: order_by
}

"order by variance() on columns of table \"dbo.InternationalMoneyTransferTransactions\""
input dbo_InternationalMoneyTransferTransactions_variance_order_by {
    Amount: order_by
    Status: order_by
}

"order by aggregate values of table \"dbo.Limits\""
input dbo_Limits_aggregate_order_by {
    avg: dbo_Limits_avg_order_by
    count: order_by
    max: dbo_Limits_max_order_by
    min: dbo_Limits_min_order_by
    stddev: dbo_Limits_stddev_order_by
    stddev_pop: dbo_Limits_stddev_pop_order_by
    stddev_samp: dbo_Limits_stddev_samp_order_by
    sum: dbo_Limits_sum_order_by
    var_pop: dbo_Limits_var_pop_order_by
    var_samp: dbo_Limits_var_samp_order_by
    variance: dbo_Limits_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Limits\""
input dbo_Limits_arr_rel_insert_input {
    data: [dbo_Limits_insert_input!]!
}

"order by avg() on columns of table \"dbo.Limits\""
input dbo_Limits_avg_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"Boolean expression to filter rows from the table \"dbo.Limits\". All fields are combined with a logical 'AND'."
input dbo_Limits_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    Direction: Int_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Period: Int_comparison_exp
    TotalAmount: Int_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_Limits_bool_exp]
    _not: dbo_Limits_bool_exp
    _or: [dbo_Limits_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Limits\""
input dbo_Limits_inc_input {
    Direction: Int
    Period: Int
    TotalAmount: Int
}

"input type for inserting data into table \"dbo.Limits\""
input dbo_Limits_insert_input {
    CreatedUtcDateTime: timestamp
    Direction: Int
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Period: Int
    TotalAmount: Int
    Uid: uuid
}

"order by max() on columns of table \"dbo.Limits\""
input dbo_Limits_max_order_by {
    CreatedUtcDateTime: order_by
    Direction: order_by
    ModifiedUtcDateTime: order_by
    Period: order_by
    TotalAmount: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.Limits\""
input dbo_Limits_min_order_by {
    CreatedUtcDateTime: order_by
    Direction: order_by
    ModifiedUtcDateTime: order_by
    Period: order_by
    TotalAmount: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.Limits\""
input dbo_Limits_obj_rel_insert_input {
    data: dbo_Limits_insert_input!
}

"ordering options when selecting data from \"dbo.Limits\""
input dbo_Limits_order_by {
    CreatedUtcDateTime: order_by
    Direction: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Period: order_by
    TotalAmount: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.Limits\""
input dbo_Limits_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Limits\""
input dbo_Limits_set_input {
    CreatedUtcDateTime: timestamp
    Direction: Int
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Period: Int
    TotalAmount: Int
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.Limits\""
input dbo_Limits_stddev_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by stddev_pop() on columns of table \"dbo.Limits\""
input dbo_Limits_stddev_pop_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by stddev_samp() on columns of table \"dbo.Limits\""
input dbo_Limits_stddev_samp_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by sum() on columns of table \"dbo.Limits\""
input dbo_Limits_sum_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by var_pop() on columns of table \"dbo.Limits\""
input dbo_Limits_var_pop_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by var_samp() on columns of table \"dbo.Limits\""
input dbo_Limits_var_samp_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by variance() on columns of table \"dbo.Limits\""
input dbo_Limits_variance_order_by {
    Direction: order_by
    Period: order_by
    TotalAmount: order_by
}

"order by aggregate values of table \"dbo.Managers\""
input dbo_Managers_aggregate_order_by {
    avg: dbo_Managers_avg_order_by
    count: order_by
    max: dbo_Managers_max_order_by
    min: dbo_Managers_min_order_by
    stddev: dbo_Managers_stddev_order_by
    stddev_pop: dbo_Managers_stddev_pop_order_by
    stddev_samp: dbo_Managers_stddev_samp_order_by
    sum: dbo_Managers_sum_order_by
    var_pop: dbo_Managers_var_pop_order_by
    var_samp: dbo_Managers_var_samp_order_by
    variance: dbo_Managers_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Managers\""
input dbo_Managers_arr_rel_insert_input {
    data: [dbo_Managers_insert_input!]!
}

"order by avg() on columns of table \"dbo.Managers\""
input dbo_Managers_avg_order_by {
    Id: order_by
}

"Boolean expression to filter rows from the table \"dbo.Managers\". All fields are combined with a logical 'AND'."
input dbo_Managers_bool_exp {
    FirstName: String_comparison_exp
    Id: Int_comparison_exp
    LastName: String_comparison_exp
    Registrations: dbo_Registrations_bool_exp
    _and: [dbo_Managers_bool_exp]
    _not: dbo_Managers_bool_exp
    _or: [dbo_Managers_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Managers\""
input dbo_Managers_inc_input {
    Id: Int
}

"input type for inserting data into table \"dbo.Managers\""
input dbo_Managers_insert_input {
    FirstName: String
    Id: Int
    LastName: String
    Registrations: dbo_Registrations_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.Managers\""
input dbo_Managers_max_order_by {
    FirstName: order_by
    Id: order_by
    LastName: order_by
}

"order by min() on columns of table \"dbo.Managers\""
input dbo_Managers_min_order_by {
    FirstName: order_by
    Id: order_by
    LastName: order_by
}

"input type for inserting object relation for remote table \"dbo.Managers\""
input dbo_Managers_obj_rel_insert_input {
    data: dbo_Managers_insert_input!
}

"ordering options when selecting data from \"dbo.Managers\""
input dbo_Managers_order_by {
    FirstName: order_by
    Id: order_by
    LastName: order_by
    Registrations_aggregate: dbo_Registrations_aggregate_order_by
}

"primary key columns input for table: \"dbo.Managers\""
input dbo_Managers_pk_columns_input {
    Id: Int!
}

"input type for updating data in table \"dbo.Managers\""
input dbo_Managers_set_input {
    FirstName: String
    Id: Int
    LastName: String
}

"order by stddev() on columns of table \"dbo.Managers\""
input dbo_Managers_stddev_order_by {
    Id: order_by
}

"order by stddev_pop() on columns of table \"dbo.Managers\""
input dbo_Managers_stddev_pop_order_by {
    Id: order_by
}

"order by stddev_samp() on columns of table \"dbo.Managers\""
input dbo_Managers_stddev_samp_order_by {
    Id: order_by
}

"order by sum() on columns of table \"dbo.Managers\""
input dbo_Managers_sum_order_by {
    Id: order_by
}

"order by var_pop() on columns of table \"dbo.Managers\""
input dbo_Managers_var_pop_order_by {
    Id: order_by
}

"order by var_samp() on columns of table \"dbo.Managers\""
input dbo_Managers_var_samp_order_by {
    Id: order_by
}

"order by variance() on columns of table \"dbo.Managers\""
input dbo_Managers_variance_order_by {
    Id: order_by
}

"order by aggregate values of table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_aggregate_order_by {
    count: order_by
    max: dbo_MoneyOperationTypes_max_order_by
    min: dbo_MoneyOperationTypes_min_order_by
}

"input type for inserting array relation for remote table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_arr_rel_insert_input {
    data: [dbo_MoneyOperationTypes_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.MoneyOperationTypes\". All fields are combined with a logical 'AND'."
input dbo_MoneyOperationTypes_bool_exp {
    Type: String_comparison_exp
    Uid: uuid_comparison_exp
    UserTransactions: dbo_UserTransactions_bool_exp
    _and: [dbo_MoneyOperationTypes_bool_exp]
    _not: dbo_MoneyOperationTypes_bool_exp
    _or: [dbo_MoneyOperationTypes_bool_exp]
}

"input type for inserting data into table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_insert_input {
    Type: String
    Uid: uuid
    UserTransactions: dbo_UserTransactions_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_max_order_by {
    Type: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_min_order_by {
    Type: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_obj_rel_insert_input {
    data: dbo_MoneyOperationTypes_insert_input!
}

"ordering options when selecting data from \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_order_by {
    Type: order_by
    Uid: order_by
    UserTransactions_aggregate: dbo_UserTransactions_aggregate_order_by
}

"primary key columns input for table: \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.MoneyOperationTypes\""
input dbo_MoneyOperationTypes_set_input {
    Type: String
    Uid: uuid
}

"order by aggregate values of table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_aggregate_order_by {
    count: order_by
    max: dbo_OperationEntityShortLinkEntities_max_order_by
    min: dbo_OperationEntityShortLinkEntities_min_order_by
}

"input type for inserting array relation for remote table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_arr_rel_insert_input {
    data: [dbo_OperationEntityShortLinkEntities_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.OperationEntityShortLinkEntities\". All fields are combined with a logical 'AND'."
input dbo_OperationEntityShortLinkEntities_bool_exp {
    Operation: dbo_Operations_bool_exp
    OperationEntity_Uid: uuid_comparison_exp
    ShortLink: dbo_ShortLinks_bool_exp
    ShortLinkEntity_Uid: uuid_comparison_exp
    _and: [dbo_OperationEntityShortLinkEntities_bool_exp]
    _not: dbo_OperationEntityShortLinkEntities_bool_exp
    _or: [dbo_OperationEntityShortLinkEntities_bool_exp]
}

"input type for inserting data into table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_insert_input {
    Operation: dbo_Operations_obj_rel_insert_input
    OperationEntity_Uid: uuid
    ShortLink: dbo_ShortLinks_obj_rel_insert_input
    ShortLinkEntity_Uid: uuid
}

"order by max() on columns of table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_max_order_by {
    OperationEntity_Uid: order_by
    ShortLinkEntity_Uid: order_by
}

"order by min() on columns of table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_min_order_by {
    OperationEntity_Uid: order_by
    ShortLinkEntity_Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_obj_rel_insert_input {
    data: dbo_OperationEntityShortLinkEntities_insert_input!
}

"ordering options when selecting data from \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_order_by {
    Operation: dbo_Operations_order_by
    OperationEntity_Uid: order_by
    ShortLink: dbo_ShortLinks_order_by
    ShortLinkEntity_Uid: order_by
}

"primary key columns input for table: \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_pk_columns_input {
    OperationEntity_Uid: uuid!
    ShortLinkEntity_Uid: uuid!
}

"input type for updating data in table \"dbo.OperationEntityShortLinkEntities\""
input dbo_OperationEntityShortLinkEntities_set_input {
    OperationEntity_Uid: uuid
    ShortLinkEntity_Uid: uuid
}

"order by aggregate values of table \"dbo.Operations\""
input dbo_Operations_aggregate_order_by {
    avg: dbo_Operations_avg_order_by
    count: order_by
    max: dbo_Operations_max_order_by
    min: dbo_Operations_min_order_by
    stddev: dbo_Operations_stddev_order_by
    stddev_pop: dbo_Operations_stddev_pop_order_by
    stddev_samp: dbo_Operations_stddev_samp_order_by
    sum: dbo_Operations_sum_order_by
    var_pop: dbo_Operations_var_pop_order_by
    var_samp: dbo_Operations_var_samp_order_by
    variance: dbo_Operations_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Operations\""
input dbo_Operations_arr_rel_insert_input {
    data: [dbo_Operations_insert_input!]!
}

"order by avg() on columns of table \"dbo.Operations\""
input dbo_Operations_avg_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"Boolean expression to filter rows from the table \"dbo.Operations\". All fields are combined with a logical 'AND'."
input dbo_Operations_bool_exp {
    AcceptedCurrencyUid: uuid_comparison_exp
    Amount: Int_comparison_exp
    Best2PayOperations: dbo_Best2PayOperations_bool_exp
    Client: dbo_Clients_bool_exp
    ClientUid: uuid_comparison_exp
    CountryCode: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Currecy: dbo_Currecies_bool_exp
    CurrencyAmount: Int_comparison_exp
    FeeAmount: Int_comparison_exp
    FeeProcent: numeric_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Number: String_comparison_exp
    OperationEntityShortLinkEntities: dbo_OperationEntityShortLinkEntities_bool_exp
    OperationStatus: Int_comparison_exp
    OperationType: Int_comparison_exp
    OurFeeAmount: Int_comparison_exp
    PaymentFeeAmount: Int_comparison_exp
    Rate: numeric_comparison_exp
    Request: String_comparison_exp
    Transactions: dbo_Transactions_bool_exp
    Uid: uuid_comparison_exp
    UniqueNumber: Int_comparison_exp
    UnistreamOperations: dbo_UnistreamOperations_bool_exp
    User: dbo_Users_bool_exp
    WhoUid: uuid_comparison_exp
    WhomUid: uuid_comparison_exp
    WithdrawCurrencyUid: uuid_comparison_exp
    _and: [dbo_Operations_bool_exp]
    _not: dbo_Operations_bool_exp
    _or: [dbo_Operations_bool_exp]
    currecyByAcceptedcurrencyuid: dbo_Currecies_bool_exp
    userByWhouid: dbo_Users_bool_exp
}

"input type for incrementing integer column in table \"dbo.Operations\""
input dbo_Operations_inc_input {
    Amount: Int
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    UniqueNumber: Int
}

"input type for inserting data into table \"dbo.Operations\""
input dbo_Operations_insert_input {
    AcceptedCurrencyUid: uuid
    Amount: Int
    Best2PayOperations: dbo_Best2PayOperations_arr_rel_insert_input
    Client: dbo_Clients_obj_rel_insert_input
    ClientUid: uuid
    CountryCode: String
    CreatedUtcDateTime: timestamp
    Currecy: dbo_Currecies_obj_rel_insert_input
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Number: String
    OperationEntityShortLinkEntities: dbo_OperationEntityShortLinkEntities_arr_rel_insert_input
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    Request: String
    Transactions: dbo_Transactions_arr_rel_insert_input
    Uid: uuid
    UniqueNumber: Int
    UnistreamOperations: dbo_UnistreamOperations_arr_rel_insert_input
    User: dbo_Users_obj_rel_insert_input
    WhoUid: uuid
    WhomUid: uuid
    WithdrawCurrencyUid: uuid
    currecyByAcceptedcurrencyuid: dbo_Currecies_obj_rel_insert_input
    userByWhouid: dbo_Users_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.Operations\""
input dbo_Operations_max_order_by {
    AcceptedCurrencyUid: order_by
    Amount: order_by
    ClientUid: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    Request: order_by
    Uid: order_by
    UniqueNumber: order_by
    WhoUid: order_by
    WhomUid: order_by
    WithdrawCurrencyUid: order_by
}

"order by min() on columns of table \"dbo.Operations\""
input dbo_Operations_min_order_by {
    AcceptedCurrencyUid: order_by
    Amount: order_by
    ClientUid: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    Request: order_by
    Uid: order_by
    UniqueNumber: order_by
    WhoUid: order_by
    WhomUid: order_by
    WithdrawCurrencyUid: order_by
}

"input type for inserting object relation for remote table \"dbo.Operations\""
input dbo_Operations_obj_rel_insert_input {
    data: dbo_Operations_insert_input!
}

"ordering options when selecting data from \"dbo.Operations\""
input dbo_Operations_order_by {
    AcceptedCurrencyUid: order_by
    Amount: order_by
    Best2PayOperations_aggregate: dbo_Best2PayOperations_aggregate_order_by
    Client: dbo_Clients_order_by
    ClientUid: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    Currecy: dbo_Currecies_order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    OperationEntityShortLinkEntities_aggregate: dbo_OperationEntityShortLinkEntities_aggregate_order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    Request: order_by
    Transactions_aggregate: dbo_Transactions_aggregate_order_by
    Uid: order_by
    UniqueNumber: order_by
    UnistreamOperations_aggregate: dbo_UnistreamOperations_aggregate_order_by
    User: dbo_Users_order_by
    WhoUid: order_by
    WhomUid: order_by
    WithdrawCurrencyUid: order_by
    currecyByAcceptedcurrencyuid: dbo_Currecies_order_by
    userByWhouid: dbo_Users_order_by
}

"primary key columns input for table: \"dbo.Operations\""
input dbo_Operations_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Operations\""
input dbo_Operations_set_input {
    AcceptedCurrencyUid: uuid
    Amount: Int
    ClientUid: uuid
    CountryCode: String
    CreatedUtcDateTime: timestamp
    CurrencyAmount: Int
    FeeAmount: Int
    FeeProcent: numeric
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Number: String
    OperationStatus: Int
    OperationType: Int
    OurFeeAmount: Int
    PaymentFeeAmount: Int
    Rate: numeric
    Request: String
    Uid: uuid
    UniqueNumber: Int
    WhoUid: uuid
    WhomUid: uuid
    WithdrawCurrencyUid: uuid
}

"order by stddev() on columns of table \"dbo.Operations\""
input dbo_Operations_stddev_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by stddev_pop() on columns of table \"dbo.Operations\""
input dbo_Operations_stddev_pop_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by stddev_samp() on columns of table \"dbo.Operations\""
input dbo_Operations_stddev_samp_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by sum() on columns of table \"dbo.Operations\""
input dbo_Operations_sum_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by var_pop() on columns of table \"dbo.Operations\""
input dbo_Operations_var_pop_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by var_samp() on columns of table \"dbo.Operations\""
input dbo_Operations_var_samp_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by variance() on columns of table \"dbo.Operations\""
input dbo_Operations_variance_order_by {
    Amount: order_by
    CurrencyAmount: order_by
    FeeAmount: order_by
    FeeProcent: order_by
    OperationStatus: order_by
    OperationType: order_by
    OurFeeAmount: order_by
    PaymentFeeAmount: order_by
    Rate: order_by
    UniqueNumber: order_by
}

"order by aggregate values of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_aggregate_order_by {
    avg: dbo_PaymentHistory_avg_order_by
    count: order_by
    max: dbo_PaymentHistory_max_order_by
    min: dbo_PaymentHistory_min_order_by
    stddev: dbo_PaymentHistory_stddev_order_by
    stddev_pop: dbo_PaymentHistory_stddev_pop_order_by
    stddev_samp: dbo_PaymentHistory_stddev_samp_order_by
    sum: dbo_PaymentHistory_sum_order_by
    var_pop: dbo_PaymentHistory_var_pop_order_by
    var_samp: dbo_PaymentHistory_var_samp_order_by
    variance: dbo_PaymentHistory_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_arr_rel_insert_input {
    data: [dbo_PaymentHistory_insert_input!]!
}

"order by avg() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_avg_order_by {
    Amount: order_by
    Direction: order_by
}

"Boolean expression to filter rows from the table \"dbo.PaymentHistory\". All fields are combined with a logical 'AND'."
input dbo_PaymentHistory_bool_exp {
    Amount: Int_comparison_exp
    Client: dbo_Clients_bool_exp
    ClientUid: uuid_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Currecy: dbo_Currecies_bool_exp
    CurrencyUid: uuid_comparison_exp
    Date: timestamp_comparison_exp
    Direction: smallint_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_PaymentHistory_bool_exp]
    _not: dbo_PaymentHistory_bool_exp
    _or: [dbo_PaymentHistory_bool_exp]
}

"input type for incrementing integer column in table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_inc_input {
    Amount: Int
    Direction: smallint
}

"input type for inserting data into table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_insert_input {
    Amount: Int
    Client: dbo_Clients_obj_rel_insert_input
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    Currecy: dbo_Currecies_obj_rel_insert_input
    CurrencyUid: uuid
    Date: timestamp
    Direction: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"order by max() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_max_order_by {
    Amount: order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    CurrencyUid: order_by
    Date: order_by
    Direction: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_min_order_by {
    Amount: order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    CurrencyUid: order_by
    Date: order_by
    Direction: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_obj_rel_insert_input {
    data: dbo_PaymentHistory_insert_input!
}

"ordering options when selecting data from \"dbo.PaymentHistory\""
input dbo_PaymentHistory_order_by {
    Amount: order_by
    Client: dbo_Clients_order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    Currecy: dbo_Currecies_order_by
    CurrencyUid: order_by
    Date: order_by
    Direction: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.PaymentHistory\""
input dbo_PaymentHistory_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_set_input {
    Amount: Int
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    CurrencyUid: uuid
    Date: timestamp
    Direction: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_stddev_order_by {
    Amount: order_by
    Direction: order_by
}

"order by stddev_pop() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_stddev_pop_order_by {
    Amount: order_by
    Direction: order_by
}

"order by stddev_samp() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_stddev_samp_order_by {
    Amount: order_by
    Direction: order_by
}

"order by sum() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_sum_order_by {
    Amount: order_by
    Direction: order_by
}

"order by var_pop() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_var_pop_order_by {
    Amount: order_by
    Direction: order_by
}

"order by var_samp() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_var_samp_order_by {
    Amount: order_by
    Direction: order_by
}

"order by variance() on columns of table \"dbo.PaymentHistory\""
input dbo_PaymentHistory_variance_order_by {
    Amount: order_by
    Direction: order_by
}

"order by aggregate values of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_aggregate_order_by {
    avg: dbo_PhoneNumberVerifications_avg_order_by
    count: order_by
    max: dbo_PhoneNumberVerifications_max_order_by
    min: dbo_PhoneNumberVerifications_min_order_by
    stddev: dbo_PhoneNumberVerifications_stddev_order_by
    stddev_pop: dbo_PhoneNumberVerifications_stddev_pop_order_by
    stddev_samp: dbo_PhoneNumberVerifications_stddev_samp_order_by
    sum: dbo_PhoneNumberVerifications_sum_order_by
    var_pop: dbo_PhoneNumberVerifications_var_pop_order_by
    var_samp: dbo_PhoneNumberVerifications_var_samp_order_by
    variance: dbo_PhoneNumberVerifications_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_arr_rel_insert_input {
    data: [dbo_PhoneNumberVerifications_insert_input!]!
}

"order by avg() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_avg_order_by {
    Status: order_by
}

"Boolean expression to filter rows from the table \"dbo.PhoneNumberVerifications\". All fields are combined with a logical 'AND'."
input dbo_PhoneNumberVerifications_bool_exp {
    Code: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    ExpiresUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    PhoneNumber: String_comparison_exp
    Status: smallint_comparison_exp
    Uid: uuid_comparison_exp
    VerifiedUtcDateTime: timestamp_comparison_exp
    _and: [dbo_PhoneNumberVerifications_bool_exp]
    _not: dbo_PhoneNumberVerifications_bool_exp
    _or: [dbo_PhoneNumberVerifications_bool_exp]
}

"input type for incrementing integer column in table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_inc_input {
    Status: smallint
}

"input type for inserting data into table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_insert_input {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Status: smallint
    Uid: uuid
    VerifiedUtcDateTime: timestamp
}

"order by max() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_max_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Status: order_by
    Uid: order_by
    VerifiedUtcDateTime: order_by
}

"order by min() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_min_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Status: order_by
    Uid: order_by
    VerifiedUtcDateTime: order_by
}

"input type for inserting object relation for remote table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_obj_rel_insert_input {
    data: dbo_PhoneNumberVerifications_insert_input!
}

"ordering options when selecting data from \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Status: order_by
    Uid: order_by
    VerifiedUtcDateTime: order_by
}

"primary key columns input for table: \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_set_input {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Status: smallint
    Uid: uuid
    VerifiedUtcDateTime: timestamp
}

"order by stddev() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_stddev_order_by {
    Status: order_by
}

"order by stddev_pop() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_stddev_pop_order_by {
    Status: order_by
}

"order by stddev_samp() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_stddev_samp_order_by {
    Status: order_by
}

"order by sum() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_sum_order_by {
    Status: order_by
}

"order by var_pop() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_var_pop_order_by {
    Status: order_by
}

"order by var_samp() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_var_samp_order_by {
    Status: order_by
}

"order by variance() on columns of table \"dbo.PhoneNumberVerifications\""
input dbo_PhoneNumberVerifications_variance_order_by {
    Status: order_by
}

"order by aggregate values of table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_aggregate_order_by {
    count: order_by
    max: dbo_ReferallDeviceGuid_max_order_by
    min: dbo_ReferallDeviceGuid_min_order_by
}

"input type for inserting array relation for remote table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_arr_rel_insert_input {
    data: [dbo_ReferallDeviceGuid_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.ReferallDeviceGuid\". All fields are combined with a logical 'AND'."
input dbo_ReferallDeviceGuid_bool_exp {
    AppGuid: uuid_comparison_exp
    Id: uuid_comparison_exp
    RefferedUser_Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    _and: [dbo_ReferallDeviceGuid_bool_exp]
    _not: dbo_ReferallDeviceGuid_bool_exp
    _or: [dbo_ReferallDeviceGuid_bool_exp]
}

"input type for inserting data into table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_insert_input {
    AppGuid: uuid
    Id: uuid
    RefferedUser_Uid: uuid
    User: dbo_Users_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_max_order_by {
    AppGuid: order_by
    Id: order_by
    RefferedUser_Uid: order_by
}

"order by min() on columns of table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_min_order_by {
    AppGuid: order_by
    Id: order_by
    RefferedUser_Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_obj_rel_insert_input {
    data: dbo_ReferallDeviceGuid_insert_input!
}

"ordering options when selecting data from \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_order_by {
    AppGuid: order_by
    Id: order_by
    RefferedUser_Uid: order_by
    User: dbo_Users_order_by
}

"primary key columns input for table: \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_pk_columns_input {
    Id: uuid!
}

"input type for updating data in table \"dbo.ReferallDeviceGuid\""
input dbo_ReferallDeviceGuid_set_input {
    AppGuid: uuid
    Id: uuid
    RefferedUser_Uid: uuid
}

"order by aggregate values of table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_aggregate_order_by {
    count: order_by
    max: dbo_RefreshTokens_max_order_by
    min: dbo_RefreshTokens_min_order_by
}

"input type for inserting array relation for remote table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_arr_rel_insert_input {
    data: [dbo_RefreshTokens_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.RefreshTokens\". All fields are combined with a logical 'AND'."
input dbo_RefreshTokens_bool_exp {
    Body: String_comparison_exp
    Client: dbo_Clients_bool_exp
    ClientUid: uuid_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    ExpiresUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    ProtectedTicket: String_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_RefreshTokens_bool_exp]
    _not: dbo_RefreshTokens_bool_exp
    _or: [dbo_RefreshTokens_bool_exp]
}

"input type for inserting data into table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_insert_input {
    Body: String
    Client: dbo_Clients_obj_rel_insert_input
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    ProtectedTicket: String
    Uid: uuid
}

"order by max() on columns of table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_max_order_by {
    Body: order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    ProtectedTicket: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_min_order_by {
    Body: order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    ProtectedTicket: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_obj_rel_insert_input {
    data: dbo_RefreshTokens_insert_input!
}

"ordering options when selecting data from \"dbo.RefreshTokens\""
input dbo_RefreshTokens_order_by {
    Body: order_by
    Client: dbo_Clients_order_by
    ClientUid: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    ProtectedTicket: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.RefreshTokens\""
input dbo_RefreshTokens_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.RefreshTokens\""
input dbo_RefreshTokens_set_input {
    Body: String
    ClientUid: uuid
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    ProtectedTicket: String
    Uid: uuid
}

"order by aggregate values of table \"dbo.Registrations\""
input dbo_Registrations_aggregate_order_by {
    avg: dbo_Registrations_avg_order_by
    count: order_by
    max: dbo_Registrations_max_order_by
    min: dbo_Registrations_min_order_by
    stddev: dbo_Registrations_stddev_order_by
    stddev_pop: dbo_Registrations_stddev_pop_order_by
    stddev_samp: dbo_Registrations_stddev_samp_order_by
    sum: dbo_Registrations_sum_order_by
    var_pop: dbo_Registrations_var_pop_order_by
    var_samp: dbo_Registrations_var_samp_order_by
    variance: dbo_Registrations_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Registrations\""
input dbo_Registrations_arr_rel_insert_input {
    data: [dbo_Registrations_insert_input!]!
}

"order by avg() on columns of table \"dbo.Registrations\""
input dbo_Registrations_avg_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"Boolean expression to filter rows from the table \"dbo.Registrations\". All fields are combined with a logical 'AND'."
input dbo_Registrations_bool_exp {
    Country: dbo_Countries_bool_exp
    CountryId: uuid_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    FirstName: String_comparison_exp
    HowComfortablyToReceiveMoney: Int_comparison_exp
    HowComfortablyToTranferMoney: Int_comparison_exp
    HowMuchTimeTransferMoneyInMonth: String_comparison_exp
    IsDeleted: Boolean_comparison_exp
    IsIfYouReceiveMoneyYouRecommendApp: Boolean_comparison_exp
    IsWantCashBackForTransfer: Boolean_comparison_exp
    LastName: String_comparison_exp
    Manager: dbo_Managers_bool_exp
    ManagerId: Int_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    PhoneNumber: String_comparison_exp
    Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserId: uuid_comparison_exp
    _and: [dbo_Registrations_bool_exp]
    _not: dbo_Registrations_bool_exp
    _or: [dbo_Registrations_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Registrations\""
input dbo_Registrations_inc_input {
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    ManagerId: Int
}

"input type for inserting data into table \"dbo.Registrations\""
input dbo_Registrations_insert_input {
    Country: dbo_Countries_obj_rel_insert_input
    CountryId: uuid
    CreatedUtcDateTime: timestamp
    FirstName: String
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    HowMuchTimeTransferMoneyInMonth: String
    IsDeleted: Boolean
    IsIfYouReceiveMoneyYouRecommendApp: Boolean
    IsWantCashBackForTransfer: Boolean
    LastName: String
    Manager: dbo_Managers_obj_rel_insert_input
    ManagerId: Int
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserId: uuid
}

"order by max() on columns of table \"dbo.Registrations\""
input dbo_Registrations_max_order_by {
    CountryId: order_by
    CreatedUtcDateTime: order_by
    FirstName: order_by
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    HowMuchTimeTransferMoneyInMonth: order_by
    LastName: order_by
    ManagerId: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Uid: order_by
    UserId: order_by
}

"order by min() on columns of table \"dbo.Registrations\""
input dbo_Registrations_min_order_by {
    CountryId: order_by
    CreatedUtcDateTime: order_by
    FirstName: order_by
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    HowMuchTimeTransferMoneyInMonth: order_by
    LastName: order_by
    ManagerId: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Uid: order_by
    UserId: order_by
}

"input type for inserting object relation for remote table \"dbo.Registrations\""
input dbo_Registrations_obj_rel_insert_input {
    data: dbo_Registrations_insert_input!
}

"ordering options when selecting data from \"dbo.Registrations\""
input dbo_Registrations_order_by {
    Country: dbo_Countries_order_by
    CountryId: order_by
    CreatedUtcDateTime: order_by
    FirstName: order_by
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    HowMuchTimeTransferMoneyInMonth: order_by
    IsDeleted: order_by
    IsIfYouReceiveMoneyYouRecommendApp: order_by
    IsWantCashBackForTransfer: order_by
    LastName: order_by
    Manager: dbo_Managers_order_by
    ManagerId: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    Uid: order_by
    User: dbo_Users_order_by
    UserId: order_by
}

"primary key columns input for table: \"dbo.Registrations\""
input dbo_Registrations_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Registrations\""
input dbo_Registrations_set_input {
    CountryId: uuid
    CreatedUtcDateTime: timestamp
    FirstName: String
    HowComfortablyToReceiveMoney: Int
    HowComfortablyToTranferMoney: Int
    HowMuchTimeTransferMoneyInMonth: String
    IsDeleted: Boolean
    IsIfYouReceiveMoneyYouRecommendApp: Boolean
    IsWantCashBackForTransfer: Boolean
    LastName: String
    ManagerId: Int
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    Uid: uuid
    UserId: uuid
}

"order by stddev() on columns of table \"dbo.Registrations\""
input dbo_Registrations_stddev_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by stddev_pop() on columns of table \"dbo.Registrations\""
input dbo_Registrations_stddev_pop_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by stddev_samp() on columns of table \"dbo.Registrations\""
input dbo_Registrations_stddev_samp_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by sum() on columns of table \"dbo.Registrations\""
input dbo_Registrations_sum_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by var_pop() on columns of table \"dbo.Registrations\""
input dbo_Registrations_var_pop_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by var_samp() on columns of table \"dbo.Registrations\""
input dbo_Registrations_var_samp_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by variance() on columns of table \"dbo.Registrations\""
input dbo_Registrations_variance_order_by {
    HowComfortablyToReceiveMoney: order_by
    HowComfortablyToTranferMoney: order_by
    ManagerId: order_by
}

"order by aggregate values of table \"dbo.ReservationCards\""
input dbo_ReservationCards_aggregate_order_by {
    avg: dbo_ReservationCards_avg_order_by
    count: order_by
    max: dbo_ReservationCards_max_order_by
    min: dbo_ReservationCards_min_order_by
    stddev: dbo_ReservationCards_stddev_order_by
    stddev_pop: dbo_ReservationCards_stddev_pop_order_by
    stddev_samp: dbo_ReservationCards_stddev_samp_order_by
    sum: dbo_ReservationCards_sum_order_by
    var_pop: dbo_ReservationCards_var_pop_order_by
    var_samp: dbo_ReservationCards_var_samp_order_by
    variance: dbo_ReservationCards_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.ReservationCards\""
input dbo_ReservationCards_arr_rel_insert_input {
    data: [dbo_ReservationCards_insert_input!]!
}

"order by avg() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_avg_order_by {
    CardType: order_by
}

"Boolean expression to filter rows from the table \"dbo.ReservationCards\". All fields are combined with a logical 'AND'."
input dbo_ReservationCards_bool_exp {
    CardType: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    _and: [dbo_ReservationCards_bool_exp]
    _not: dbo_ReservationCards_bool_exp
    _or: [dbo_ReservationCards_bool_exp]
}

"input type for incrementing integer column in table \"dbo.ReservationCards\""
input dbo_ReservationCards_inc_input {
    CardType: Int
}

"input type for inserting data into table \"dbo.ReservationCards\""
input dbo_ReservationCards_insert_input {
    CardType: Int
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
}

"order by max() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_max_order_by {
    CardType: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_min_order_by {
    CardType: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.ReservationCards\""
input dbo_ReservationCards_obj_rel_insert_input {
    data: dbo_ReservationCards_insert_input!
}

"ordering options when selecting data from \"dbo.ReservationCards\""
input dbo_ReservationCards_order_by {
    CardType: order_by
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    User: dbo_Users_order_by
    UserUid: order_by
}

"primary key columns input for table: \"dbo.ReservationCards\""
input dbo_ReservationCards_pk_columns_input {
    CardType: Int!
    UserUid: uuid!
}

"input type for updating data in table \"dbo.ReservationCards\""
input dbo_ReservationCards_set_input {
    CardType: Int
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    UserUid: uuid
}

"order by stddev() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_stddev_order_by {
    CardType: order_by
}

"order by stddev_pop() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_stddev_pop_order_by {
    CardType: order_by
}

"order by stddev_samp() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_stddev_samp_order_by {
    CardType: order_by
}

"order by sum() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_sum_order_by {
    CardType: order_by
}

"order by var_pop() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_var_pop_order_by {
    CardType: order_by
}

"order by var_samp() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_var_samp_order_by {
    CardType: order_by
}

"order by variance() on columns of table \"dbo.ReservationCards\""
input dbo_ReservationCards_variance_order_by {
    CardType: order_by
}

"order by aggregate values of table \"dbo.Roles\""
input dbo_Roles_aggregate_order_by {
    avg: dbo_Roles_avg_order_by
    count: order_by
    max: dbo_Roles_max_order_by
    min: dbo_Roles_min_order_by
    stddev: dbo_Roles_stddev_order_by
    stddev_pop: dbo_Roles_stddev_pop_order_by
    stddev_samp: dbo_Roles_stddev_samp_order_by
    sum: dbo_Roles_sum_order_by
    var_pop: dbo_Roles_var_pop_order_by
    var_samp: dbo_Roles_var_samp_order_by
    variance: dbo_Roles_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Roles\""
input dbo_Roles_arr_rel_insert_input {
    data: [dbo_Roles_insert_input!]!
}

"order by avg() on columns of table \"dbo.Roles\""
input dbo_Roles_avg_order_by {
    Id: order_by
}

"Boolean expression to filter rows from the table \"dbo.Roles\". All fields are combined with a logical 'AND'."
input dbo_Roles_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    Id: smallint_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Name: String_comparison_exp
    UserRoles: dbo_UserRoles_bool_exp
    _and: [dbo_Roles_bool_exp]
    _not: dbo_Roles_bool_exp
    _or: [dbo_Roles_bool_exp]
}

"input type for incrementing integer column in table \"dbo.Roles\""
input dbo_Roles_inc_input {
    Id: smallint
}

"input type for inserting data into table \"dbo.Roles\""
input dbo_Roles_insert_input {
    CreatedUtcDateTime: timestamp
    Id: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Name: String
    UserRoles: dbo_UserRoles_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.Roles\""
input dbo_Roles_max_order_by {
    CreatedUtcDateTime: order_by
    Id: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
}

"order by min() on columns of table \"dbo.Roles\""
input dbo_Roles_min_order_by {
    CreatedUtcDateTime: order_by
    Id: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
}

"input type for inserting object relation for remote table \"dbo.Roles\""
input dbo_Roles_obj_rel_insert_input {
    data: dbo_Roles_insert_input!
}

"ordering options when selecting data from \"dbo.Roles\""
input dbo_Roles_order_by {
    CreatedUtcDateTime: order_by
    Id: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Name: order_by
    UserRoles_aggregate: dbo_UserRoles_aggregate_order_by
}

"primary key columns input for table: \"dbo.Roles\""
input dbo_Roles_pk_columns_input {
    Id: smallint!
}

"input type for updating data in table \"dbo.Roles\""
input dbo_Roles_set_input {
    CreatedUtcDateTime: timestamp
    Id: smallint
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Name: String
}

"order by stddev() on columns of table \"dbo.Roles\""
input dbo_Roles_stddev_order_by {
    Id: order_by
}

"order by stddev_pop() on columns of table \"dbo.Roles\""
input dbo_Roles_stddev_pop_order_by {
    Id: order_by
}

"order by stddev_samp() on columns of table \"dbo.Roles\""
input dbo_Roles_stddev_samp_order_by {
    Id: order_by
}

"order by sum() on columns of table \"dbo.Roles\""
input dbo_Roles_sum_order_by {
    Id: order_by
}

"order by var_pop() on columns of table \"dbo.Roles\""
input dbo_Roles_var_pop_order_by {
    Id: order_by
}

"order by var_samp() on columns of table \"dbo.Roles\""
input dbo_Roles_var_samp_order_by {
    Id: order_by
}

"order by variance() on columns of table \"dbo.Roles\""
input dbo_Roles_variance_order_by {
    Id: order_by
}

"order by aggregate values of table \"dbo.ShortLinks\""
input dbo_ShortLinks_aggregate_order_by {
    count: order_by
    max: dbo_ShortLinks_max_order_by
    min: dbo_ShortLinks_min_order_by
}

"input type for inserting array relation for remote table \"dbo.ShortLinks\""
input dbo_ShortLinks_arr_rel_insert_input {
    data: [dbo_ShortLinks_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.ShortLinks\". All fields are combined with a logical 'AND'."
input dbo_ShortLinks_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    IsOpened: Boolean_comparison_exp
    Link: String_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    OpenDateTime: timestamp_comparison_exp
    OperationEntityShortLinkEntities: dbo_OperationEntityShortLinkEntities_bool_exp
    Uid: uuid_comparison_exp
    Url: String_comparison_exp
    _and: [dbo_ShortLinks_bool_exp]
    _not: dbo_ShortLinks_bool_exp
    _or: [dbo_ShortLinks_bool_exp]
}

"input type for inserting data into table \"dbo.ShortLinks\""
input dbo_ShortLinks_insert_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    IsOpened: Boolean
    Link: String
    ModifiedUtcDateTime: timestamp
    OpenDateTime: timestamp
    OperationEntityShortLinkEntities: dbo_OperationEntityShortLinkEntities_arr_rel_insert_input
    Uid: uuid
    Url: String
}

"order by max() on columns of table \"dbo.ShortLinks\""
input dbo_ShortLinks_max_order_by {
    CreatedUtcDateTime: order_by
    Link: order_by
    ModifiedUtcDateTime: order_by
    OpenDateTime: order_by
    Uid: order_by
    Url: order_by
}

"order by min() on columns of table \"dbo.ShortLinks\""
input dbo_ShortLinks_min_order_by {
    CreatedUtcDateTime: order_by
    Link: order_by
    ModifiedUtcDateTime: order_by
    OpenDateTime: order_by
    Uid: order_by
    Url: order_by
}

"input type for inserting object relation for remote table \"dbo.ShortLinks\""
input dbo_ShortLinks_obj_rel_insert_input {
    data: dbo_ShortLinks_insert_input!
}

"ordering options when selecting data from \"dbo.ShortLinks\""
input dbo_ShortLinks_order_by {
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    IsOpened: order_by
    Link: order_by
    ModifiedUtcDateTime: order_by
    OpenDateTime: order_by
    OperationEntityShortLinkEntities_aggregate: dbo_OperationEntityShortLinkEntities_aggregate_order_by
    Uid: order_by
    Url: order_by
}

"primary key columns input for table: \"dbo.ShortLinks\""
input dbo_ShortLinks_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.ShortLinks\""
input dbo_ShortLinks_set_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    IsOpened: Boolean
    Link: String
    ModifiedUtcDateTime: timestamp
    OpenDateTime: timestamp
    Uid: uuid
    Url: String
}

"order by aggregate values of table \"dbo.Transactions\""
input dbo_Transactions_aggregate_order_by {
    avg: dbo_Transactions_avg_order_by
    count: order_by
    max: dbo_Transactions_max_order_by
    min: dbo_Transactions_min_order_by
    stddev: dbo_Transactions_stddev_order_by
    stddev_pop: dbo_Transactions_stddev_pop_order_by
    stddev_samp: dbo_Transactions_stddev_samp_order_by
    sum: dbo_Transactions_sum_order_by
    var_pop: dbo_Transactions_var_pop_order_by
    var_samp: dbo_Transactions_var_samp_order_by
    variance: dbo_Transactions_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Transactions\""
input dbo_Transactions_arr_rel_insert_input {
    data: [dbo_Transactions_insert_input!]!
}

"order by avg() on columns of table \"dbo.Transactions\""
input dbo_Transactions_avg_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"Boolean expression to filter rows from the table \"dbo.Transactions\". All fields are combined with a logical 'AND'."
input dbo_Transactions_bool_exp {
    Account: dbo_Accounts_bool_exp
    Amount: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Operation: dbo_Operations_bool_exp
    OperationUid: uuid_comparison_exp
    RecepientAccountUid: uuid_comparison_exp
    SenderAccountUid: uuid_comparison_exp
    TransactionStatus: Int_comparison_exp
    Type: Int_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_Transactions_bool_exp]
    _not: dbo_Transactions_bool_exp
    _or: [dbo_Transactions_bool_exp]
    accountByRecepientaccountuid: dbo_Accounts_bool_exp
}

"input type for incrementing integer column in table \"dbo.Transactions\""
input dbo_Transactions_inc_input {
    Amount: Int
    TransactionStatus: Int
    Type: Int
}

"input type for inserting data into table \"dbo.Transactions\""
input dbo_Transactions_insert_input {
    Account: dbo_Accounts_obj_rel_insert_input
    Amount: Int
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Operation: dbo_Operations_obj_rel_insert_input
    OperationUid: uuid
    RecepientAccountUid: uuid
    SenderAccountUid: uuid
    TransactionStatus: Int
    Type: Int
    Uid: uuid
    accountByRecepientaccountuid: dbo_Accounts_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.Transactions\""
input dbo_Transactions_max_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    OperationUid: order_by
    RecepientAccountUid: order_by
    SenderAccountUid: order_by
    TransactionStatus: order_by
    Type: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.Transactions\""
input dbo_Transactions_min_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    OperationUid: order_by
    RecepientAccountUid: order_by
    SenderAccountUid: order_by
    TransactionStatus: order_by
    Type: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.Transactions\""
input dbo_Transactions_obj_rel_insert_input {
    data: dbo_Transactions_insert_input!
}

"ordering options when selecting data from \"dbo.Transactions\""
input dbo_Transactions_order_by {
    Account: dbo_Accounts_order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Operation: dbo_Operations_order_by
    OperationUid: order_by
    RecepientAccountUid: order_by
    SenderAccountUid: order_by
    TransactionStatus: order_by
    Type: order_by
    Uid: order_by
    accountByRecepientaccountuid: dbo_Accounts_order_by
}

"primary key columns input for table: \"dbo.Transactions\""
input dbo_Transactions_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Transactions\""
input dbo_Transactions_set_input {
    Amount: Int
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    OperationUid: uuid
    RecepientAccountUid: uuid
    SenderAccountUid: uuid
    TransactionStatus: Int
    Type: Int
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.Transactions\""
input dbo_Transactions_stddev_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by stddev_pop() on columns of table \"dbo.Transactions\""
input dbo_Transactions_stddev_pop_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by stddev_samp() on columns of table \"dbo.Transactions\""
input dbo_Transactions_stddev_samp_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by sum() on columns of table \"dbo.Transactions\""
input dbo_Transactions_sum_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by var_pop() on columns of table \"dbo.Transactions\""
input dbo_Transactions_var_pop_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by var_samp() on columns of table \"dbo.Transactions\""
input dbo_Transactions_var_samp_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by variance() on columns of table \"dbo.Transactions\""
input dbo_Transactions_variance_order_by {
    Amount: order_by
    TransactionStatus: order_by
    Type: order_by
}

"order by aggregate values of table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_aggregate_order_by {
    count: order_by
    max: dbo_UnistreamClientHistory_max_order_by
    min: dbo_UnistreamClientHistory_min_order_by
}

"input type for inserting array relation for remote table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_arr_rel_insert_input {
    data: [dbo_UnistreamClientHistory_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.UnistreamClientHistory\". All fields are combined with a logical 'AND'."
input dbo_UnistreamClientHistory_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    _and: [dbo_UnistreamClientHistory_bool_exp]
    _not: dbo_UnistreamClientHistory_bool_exp
    _or: [dbo_UnistreamClientHistory_bool_exp]
}

"input type for inserting data into table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_insert_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
}

"order by max() on columns of table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_max_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_min_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_obj_rel_insert_input {
    data: dbo_UnistreamClientHistory_insert_input!
}

"ordering options when selecting data from \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_order_by {
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Uid: order_by
    User: dbo_Users_order_by
    UserUid: order_by
}

"primary key columns input for table: \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UnistreamClientHistory\""
input dbo_UnistreamClientHistory_set_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Uid: uuid
    UserUid: uuid
}

"order by aggregate values of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_aggregate_order_by {
    avg: dbo_UnistreamOperations_avg_order_by
    count: order_by
    max: dbo_UnistreamOperations_max_order_by
    min: dbo_UnistreamOperations_min_order_by
    stddev: dbo_UnistreamOperations_stddev_order_by
    stddev_pop: dbo_UnistreamOperations_stddev_pop_order_by
    stddev_samp: dbo_UnistreamOperations_stddev_samp_order_by
    sum: dbo_UnistreamOperations_sum_order_by
    var_pop: dbo_UnistreamOperations_var_pop_order_by
    var_samp: dbo_UnistreamOperations_var_samp_order_by
    variance: dbo_UnistreamOperations_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_arr_rel_insert_input {
    data: [dbo_UnistreamOperations_insert_input!]!
}

"order by avg() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_avg_order_by {
    Type: order_by
}

"Boolean expression to filter rows from the table \"dbo.UnistreamOperations\". All fields are combined with a logical 'AND'."
input dbo_UnistreamOperations_bool_exp {
    CommandId: String_comparison_exp
    CountryCode: String_comparison_exp
    Operation: dbo_Operations_bool_exp
    OperationId: String_comparison_exp
    OperationUid: uuid_comparison_exp
    Type: Int_comparison_exp
    _and: [dbo_UnistreamOperations_bool_exp]
    _not: dbo_UnistreamOperations_bool_exp
    _or: [dbo_UnistreamOperations_bool_exp]
}

"input type for incrementing integer column in table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_inc_input {
    Type: Int
}

"input type for inserting data into table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_insert_input {
    CommandId: String
    CountryCode: String
    Operation: dbo_Operations_obj_rel_insert_input
    OperationId: String
    OperationUid: uuid
    Type: Int
}

"order by max() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_max_order_by {
    CommandId: order_by
    CountryCode: order_by
    OperationId: order_by
    OperationUid: order_by
    Type: order_by
}

"order by min() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_min_order_by {
    CommandId: order_by
    CountryCode: order_by
    OperationId: order_by
    OperationUid: order_by
    Type: order_by
}

"input type for inserting object relation for remote table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_obj_rel_insert_input {
    data: dbo_UnistreamOperations_insert_input!
}

"ordering options when selecting data from \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_order_by {
    CommandId: order_by
    CountryCode: order_by
    Operation: dbo_Operations_order_by
    OperationId: order_by
    OperationUid: order_by
    Type: order_by
}

"primary key columns input for table: \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_pk_columns_input {
    OperationUid: uuid!
}

"input type for updating data in table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_set_input {
    CommandId: String
    CountryCode: String
    OperationId: String
    OperationUid: uuid
    Type: Int
}

"order by stddev() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_stddev_order_by {
    Type: order_by
}

"order by stddev_pop() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_stddev_pop_order_by {
    Type: order_by
}

"order by stddev_samp() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_stddev_samp_order_by {
    Type: order_by
}

"order by sum() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_sum_order_by {
    Type: order_by
}

"order by var_pop() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_var_pop_order_by {
    Type: order_by
}

"order by var_samp() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_var_samp_order_by {
    Type: order_by
}

"order by variance() on columns of table \"dbo.UnistreamOperations\""
input dbo_UnistreamOperations_variance_order_by {
    Type: order_by
}

"order by aggregate values of table \"dbo.UserCards\""
input dbo_UserCards_aggregate_order_by {
    avg: dbo_UserCards_avg_order_by
    count: order_by
    max: dbo_UserCards_max_order_by
    min: dbo_UserCards_min_order_by
    stddev: dbo_UserCards_stddev_order_by
    stddev_pop: dbo_UserCards_stddev_pop_order_by
    stddev_samp: dbo_UserCards_stddev_samp_order_by
    sum: dbo_UserCards_sum_order_by
    var_pop: dbo_UserCards_var_pop_order_by
    var_samp: dbo_UserCards_var_samp_order_by
    variance: dbo_UserCards_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UserCards\""
input dbo_UserCards_arr_rel_insert_input {
    data: [dbo_UserCards_insert_input!]!
}

"order by avg() on columns of table \"dbo.UserCards\""
input dbo_UserCards_avg_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"Boolean expression to filter rows from the table \"dbo.UserCards\". All fields are combined with a logical 'AND'."
input dbo_UserCards_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Month: smallint_comparison_exp
    Pan: String_comparison_exp
    PaymentSystem: Int_comparison_exp
    Token: String_comparison_exp
    Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    Year: smallint_comparison_exp
    _and: [dbo_UserCards_bool_exp]
    _not: dbo_UserCards_bool_exp
    _or: [dbo_UserCards_bool_exp]
}

"input type for incrementing integer column in table \"dbo.UserCards\""
input dbo_UserCards_inc_input {
    Month: smallint
    PaymentSystem: Int
    Year: smallint
}

"input type for inserting data into table \"dbo.UserCards\""
input dbo_UserCards_insert_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Month: smallint
    Pan: String
    PaymentSystem: Int
    Token: String
    Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
    Year: smallint
}

"order by max() on columns of table \"dbo.UserCards\""
input dbo_UserCards_max_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Month: order_by
    Pan: order_by
    PaymentSystem: order_by
    Token: order_by
    Uid: order_by
    UserUid: order_by
    Year: order_by
}

"order by min() on columns of table \"dbo.UserCards\""
input dbo_UserCards_min_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    Month: order_by
    Pan: order_by
    PaymentSystem: order_by
    Token: order_by
    Uid: order_by
    UserUid: order_by
    Year: order_by
}

"input type for inserting object relation for remote table \"dbo.UserCards\""
input dbo_UserCards_obj_rel_insert_input {
    data: dbo_UserCards_insert_input!
}

"ordering options when selecting data from \"dbo.UserCards\""
input dbo_UserCards_order_by {
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Month: order_by
    Pan: order_by
    PaymentSystem: order_by
    Token: order_by
    Uid: order_by
    User: dbo_Users_order_by
    UserUid: order_by
    Year: order_by
}

"primary key columns input for table: \"dbo.UserCards\""
input dbo_UserCards_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UserCards\""
input dbo_UserCards_set_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Month: smallint
    Pan: String
    PaymentSystem: Int
    Token: String
    Uid: uuid
    UserUid: uuid
    Year: smallint
}

"order by stddev() on columns of table \"dbo.UserCards\""
input dbo_UserCards_stddev_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by stddev_pop() on columns of table \"dbo.UserCards\""
input dbo_UserCards_stddev_pop_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by stddev_samp() on columns of table \"dbo.UserCards\""
input dbo_UserCards_stddev_samp_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by sum() on columns of table \"dbo.UserCards\""
input dbo_UserCards_sum_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by var_pop() on columns of table \"dbo.UserCards\""
input dbo_UserCards_var_pop_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by var_samp() on columns of table \"dbo.UserCards\""
input dbo_UserCards_var_samp_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by variance() on columns of table \"dbo.UserCards\""
input dbo_UserCards_variance_order_by {
    Month: order_by
    PaymentSystem: order_by
    Year: order_by
}

"order by aggregate values of table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_aggregate_order_by {
    count: order_by
    max: dbo_UserDetailsAddresses_max_order_by
    min: dbo_UserDetailsAddresses_min_order_by
}

"input type for inserting array relation for remote table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_arr_rel_insert_input {
    data: [dbo_UserDetailsAddresses_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.UserDetailsAddresses\". All fields are combined with a logical 'AND'."
input dbo_UserDetailsAddresses_bool_exp {
    Apartment: String_comparison_exp
    Building: String_comparison_exp
    City: String_comparison_exp
    CountryCode: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    House: String_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    PartAddressString: String_comparison_exp
    PostCode: String_comparison_exp
    State: String_comparison_exp
    Street: String_comparison_exp
    Uid: uuid_comparison_exp
    UserDetail: dbo_UserDetails_bool_exp
    UserDetailsUid: uuid_comparison_exp
    _and: [dbo_UserDetailsAddresses_bool_exp]
    _not: dbo_UserDetailsAddresses_bool_exp
    _or: [dbo_UserDetailsAddresses_bool_exp]
}

"input type for inserting data into table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_insert_input {
    Apartment: String
    Building: String
    City: String
    CountryCode: String
    CreatedUtcDateTime: timestamp
    House: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PartAddressString: String
    PostCode: String
    State: String
    Street: String
    Uid: uuid
    UserDetail: dbo_UserDetails_obj_rel_insert_input
    UserDetailsUid: uuid
}

"order by max() on columns of table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_max_order_by {
    Apartment: order_by
    Building: order_by
    City: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    House: order_by
    ModifiedUtcDateTime: order_by
    PartAddressString: order_by
    PostCode: order_by
    State: order_by
    Street: order_by
    Uid: order_by
    UserDetailsUid: order_by
}

"order by min() on columns of table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_min_order_by {
    Apartment: order_by
    Building: order_by
    City: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    House: order_by
    ModifiedUtcDateTime: order_by
    PartAddressString: order_by
    PostCode: order_by
    State: order_by
    Street: order_by
    Uid: order_by
    UserDetailsUid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_obj_rel_insert_input {
    data: dbo_UserDetailsAddresses_insert_input!
}

"ordering options when selecting data from \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_order_by {
    Apartment: order_by
    Building: order_by
    City: order_by
    CountryCode: order_by
    CreatedUtcDateTime: order_by
    House: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    PartAddressString: order_by
    PostCode: order_by
    State: order_by
    Street: order_by
    Uid: order_by
    UserDetail: dbo_UserDetails_order_by
    UserDetailsUid: order_by
}

"primary key columns input for table: \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UserDetailsAddresses\""
input dbo_UserDetailsAddresses_set_input {
    Apartment: String
    Building: String
    City: String
    CountryCode: String
    CreatedUtcDateTime: timestamp
    House: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    PartAddressString: String
    PostCode: String
    State: String
    Street: String
    Uid: uuid
    UserDetailsUid: uuid
}

"order by aggregate values of table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_aggregate_order_by {
    count: order_by
    max: dbo_UserDetailsDocuments_max_order_by
    min: dbo_UserDetailsDocuments_min_order_by
}

"input type for inserting array relation for remote table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_arr_rel_insert_input {
    data: [dbo_UserDetailsDocuments_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.UserDetailsDocuments\". All fields are combined with a logical 'AND'."
input dbo_UserDetailsDocuments_bool_exp {
    Authority: String_comparison_exp
    CountryOfResidence: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    IssueDate: timestamp_comparison_exp
    IssuerDepartmentCode: String_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Number: String_comparison_exp
    Series: String_comparison_exp
    Uid: uuid_comparison_exp
    UserDetail: dbo_UserDetails_bool_exp
    UserDetailsUid: uuid_comparison_exp
    _and: [dbo_UserDetailsDocuments_bool_exp]
    _not: dbo_UserDetailsDocuments_bool_exp
    _or: [dbo_UserDetailsDocuments_bool_exp]
}

"input type for inserting data into table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_insert_input {
    Authority: String
    CountryOfResidence: String
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    IssueDate: timestamp
    IssuerDepartmentCode: String
    ModifiedUtcDateTime: timestamp
    Number: String
    Series: String
    Uid: uuid
    UserDetail: dbo_UserDetails_obj_rel_insert_input
    UserDetailsUid: uuid
}

"order by max() on columns of table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_max_order_by {
    Authority: order_by
    CountryOfResidence: order_by
    CreatedUtcDateTime: order_by
    IssueDate: order_by
    IssuerDepartmentCode: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    Series: order_by
    Uid: order_by
    UserDetailsUid: order_by
}

"order by min() on columns of table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_min_order_by {
    Authority: order_by
    CountryOfResidence: order_by
    CreatedUtcDateTime: order_by
    IssueDate: order_by
    IssuerDepartmentCode: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    Series: order_by
    Uid: order_by
    UserDetailsUid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_obj_rel_insert_input {
    data: dbo_UserDetailsDocuments_insert_input!
}

"ordering options when selecting data from \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_order_by {
    Authority: order_by
    CountryOfResidence: order_by
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    IssueDate: order_by
    IssuerDepartmentCode: order_by
    ModifiedUtcDateTime: order_by
    Number: order_by
    Series: order_by
    Uid: order_by
    UserDetail: dbo_UserDetails_order_by
    UserDetailsUid: order_by
}

"primary key columns input for table: \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UserDetailsDocuments\""
input dbo_UserDetailsDocuments_set_input {
    Authority: String
    CountryOfResidence: String
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    IssueDate: timestamp
    IssuerDepartmentCode: String
    ModifiedUtcDateTime: timestamp
    Number: String
    Series: String
    Uid: uuid
    UserDetailsUid: uuid
}

"order by aggregate values of table \"dbo.UserDetails\""
input dbo_UserDetails_aggregate_order_by {
    avg: dbo_UserDetails_avg_order_by
    count: order_by
    max: dbo_UserDetails_max_order_by
    min: dbo_UserDetails_min_order_by
    stddev: dbo_UserDetails_stddev_order_by
    stddev_pop: dbo_UserDetails_stddev_pop_order_by
    stddev_samp: dbo_UserDetails_stddev_samp_order_by
    sum: dbo_UserDetails_sum_order_by
    var_pop: dbo_UserDetails_var_pop_order_by
    var_samp: dbo_UserDetails_var_samp_order_by
    variance: dbo_UserDetails_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UserDetails\""
input dbo_UserDetails_arr_rel_insert_input {
    data: [dbo_UserDetails_insert_input!]!
}

"order by avg() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_avg_order_by {
    Gender: order_by
}

"Boolean expression to filter rows from the table \"dbo.UserDetails\". All fields are combined with a logical 'AND'."
input dbo_UserDetails_bool_exp {
    AddressUid: uuid_comparison_exp
    BirthDate: timestamp_comparison_exp
    BirthPlace: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    DocumentUid: uuid_comparison_exp
    FirstName: String_comparison_exp
    Gender: smallint_comparison_exp
    IsDeleted: Boolean_comparison_exp
    LastName: String_comparison_exp
    MiddleName: String_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    PhoneNumber: String_comparison_exp
    RefUser_Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserDetailsAddresses: dbo_UserDetailsAddresses_bool_exp
    UserDetailsDocuments: dbo_UserDetailsDocuments_bool_exp
    UserUid: uuid_comparison_exp
    _and: [dbo_UserDetails_bool_exp]
    _not: dbo_UserDetails_bool_exp
    _or: [dbo_UserDetails_bool_exp]
    userByRefuserUid: dbo_Users_bool_exp
}

"input type for incrementing integer column in table \"dbo.UserDetails\""
input dbo_UserDetails_inc_input {
    Gender: smallint
}

"input type for inserting data into table \"dbo.UserDetails\""
input dbo_UserDetails_insert_input {
    AddressUid: uuid
    BirthDate: timestamp
    BirthPlace: String
    CreatedUtcDateTime: timestamp
    DocumentUid: uuid
    FirstName: String
    Gender: smallint
    IsDeleted: Boolean
    LastName: String
    MiddleName: String
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    RefUser_Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserDetailsAddresses: dbo_UserDetailsAddresses_arr_rel_insert_input
    UserDetailsDocuments: dbo_UserDetailsDocuments_arr_rel_insert_input
    UserUid: uuid
    userByRefuserUid: dbo_Users_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_max_order_by {
    AddressUid: order_by
    BirthDate: order_by
    BirthPlace: order_by
    CreatedUtcDateTime: order_by
    DocumentUid: order_by
    FirstName: order_by
    Gender: order_by
    LastName: order_by
    MiddleName: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    RefUser_Uid: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_min_order_by {
    AddressUid: order_by
    BirthDate: order_by
    BirthPlace: order_by
    CreatedUtcDateTime: order_by
    DocumentUid: order_by
    FirstName: order_by
    Gender: order_by
    LastName: order_by
    MiddleName: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    RefUser_Uid: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserDetails\""
input dbo_UserDetails_obj_rel_insert_input {
    data: dbo_UserDetails_insert_input!
}

"ordering options when selecting data from \"dbo.UserDetails\""
input dbo_UserDetails_order_by {
    AddressUid: order_by
    BirthDate: order_by
    BirthPlace: order_by
    CreatedUtcDateTime: order_by
    DocumentUid: order_by
    FirstName: order_by
    Gender: order_by
    IsDeleted: order_by
    LastName: order_by
    MiddleName: order_by
    ModifiedUtcDateTime: order_by
    PhoneNumber: order_by
    RefUser_Uid: order_by
    User: dbo_Users_order_by
    UserDetailsAddresses_aggregate: dbo_UserDetailsAddresses_aggregate_order_by
    UserDetailsDocuments_aggregate: dbo_UserDetailsDocuments_aggregate_order_by
    UserUid: order_by
    userByRefuserUid: dbo_Users_order_by
}

"primary key columns input for table: \"dbo.UserDetails\""
input dbo_UserDetails_pk_columns_input {
    UserUid: uuid!
}

"input type for updating data in table \"dbo.UserDetails\""
input dbo_UserDetails_set_input {
    AddressUid: uuid
    BirthDate: timestamp
    BirthPlace: String
    CreatedUtcDateTime: timestamp
    DocumentUid: uuid
    FirstName: String
    Gender: smallint
    IsDeleted: Boolean
    LastName: String
    MiddleName: String
    ModifiedUtcDateTime: timestamp
    PhoneNumber: String
    RefUser_Uid: uuid
    UserUid: uuid
}

"order by stddev() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_stddev_order_by {
    Gender: order_by
}

"order by stddev_pop() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_stddev_pop_order_by {
    Gender: order_by
}

"order by stddev_samp() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_stddev_samp_order_by {
    Gender: order_by
}

"order by sum() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_sum_order_by {
    Gender: order_by
}

"order by var_pop() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_var_pop_order_by {
    Gender: order_by
}

"order by var_samp() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_var_samp_order_by {
    Gender: order_by
}

"order by variance() on columns of table \"dbo.UserDetails\""
input dbo_UserDetails_variance_order_by {
    Gender: order_by
}

"order by aggregate values of table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_aggregate_order_by {
    count: order_by
    max: dbo_UserDeviceGuids_max_order_by
    min: dbo_UserDeviceGuids_min_order_by
}

"input type for inserting array relation for remote table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_arr_rel_insert_input {
    data: [dbo_UserDeviceGuids_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.UserDeviceGuids\". All fields are combined with a logical 'AND'."
input dbo_UserDeviceGuids_bool_exp {
    DeviceGuid: uuid_comparison_exp
    Id: uuid_comparison_exp
    User: dbo_Users_bool_exp
    User_Uid: uuid_comparison_exp
    _and: [dbo_UserDeviceGuids_bool_exp]
    _not: dbo_UserDeviceGuids_bool_exp
    _or: [dbo_UserDeviceGuids_bool_exp]
}

"input type for inserting data into table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_insert_input {
    DeviceGuid: uuid
    Id: uuid
    User: dbo_Users_obj_rel_insert_input
    User_Uid: uuid
}

"order by max() on columns of table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_max_order_by {
    DeviceGuid: order_by
    Id: order_by
    User_Uid: order_by
}

"order by min() on columns of table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_min_order_by {
    DeviceGuid: order_by
    Id: order_by
    User_Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_obj_rel_insert_input {
    data: dbo_UserDeviceGuids_insert_input!
}

"ordering options when selecting data from \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_order_by {
    DeviceGuid: order_by
    Id: order_by
    User: dbo_Users_order_by
    User_Uid: order_by
}

"primary key columns input for table: \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_pk_columns_input {
    Id: uuid!
}

"input type for updating data in table \"dbo.UserDeviceGuids\""
input dbo_UserDeviceGuids_set_input {
    DeviceGuid: uuid
    Id: uuid
    User_Uid: uuid
}

"order by aggregate values of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_aggregate_order_by {
    avg: dbo_UserPhoneVerifications_avg_order_by
    count: order_by
    max: dbo_UserPhoneVerifications_max_order_by
    min: dbo_UserPhoneVerifications_min_order_by
    stddev: dbo_UserPhoneVerifications_stddev_order_by
    stddev_pop: dbo_UserPhoneVerifications_stddev_pop_order_by
    stddev_samp: dbo_UserPhoneVerifications_stddev_samp_order_by
    sum: dbo_UserPhoneVerifications_sum_order_by
    var_pop: dbo_UserPhoneVerifications_var_pop_order_by
    var_samp: dbo_UserPhoneVerifications_var_samp_order_by
    variance: dbo_UserPhoneVerifications_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_arr_rel_insert_input {
    data: [dbo_UserPhoneVerifications_insert_input!]!
}

"order by avg() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_avg_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"Boolean expression to filter rows from the table \"dbo.UserPhoneVerifications\". All fields are combined with a logical 'AND'."
input dbo_UserPhoneVerifications_bool_exp {
    Code: String_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    ExpiresUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    MaxVerificationAttemps: smallint_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Status: smallint_comparison_exp
    Uid: uuid_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    VerificationAttemps: smallint_comparison_exp
    VerifiedUtcDateTime: timestamp_comparison_exp
    _and: [dbo_UserPhoneVerifications_bool_exp]
    _not: dbo_UserPhoneVerifications_bool_exp
    _or: [dbo_UserPhoneVerifications_bool_exp]
}

"input type for incrementing integer column in table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_inc_input {
    MaxVerificationAttemps: smallint
    Status: smallint
    VerificationAttemps: smallint
}

"input type for inserting data into table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_insert_input {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    MaxVerificationAttemps: smallint
    ModifiedUtcDateTime: timestamp
    Status: smallint
    Uid: uuid
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
    VerificationAttemps: smallint
    VerifiedUtcDateTime: timestamp
}

"order by max() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_max_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    MaxVerificationAttemps: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    Uid: order_by
    UserUid: order_by
    VerificationAttemps: order_by
    VerifiedUtcDateTime: order_by
}

"order by min() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_min_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    MaxVerificationAttemps: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    Uid: order_by
    UserUid: order_by
    VerificationAttemps: order_by
    VerifiedUtcDateTime: order_by
}

"input type for inserting object relation for remote table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_obj_rel_insert_input {
    data: dbo_UserPhoneVerifications_insert_input!
}

"ordering options when selecting data from \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_order_by {
    Code: order_by
    CreatedUtcDateTime: order_by
    ExpiresUtcDateTime: order_by
    IsDeleted: order_by
    MaxVerificationAttemps: order_by
    ModifiedUtcDateTime: order_by
    Status: order_by
    Uid: order_by
    User: dbo_Users_order_by
    UserUid: order_by
    VerificationAttemps: order_by
    VerifiedUtcDateTime: order_by
}

"primary key columns input for table: \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_set_input {
    Code: String
    CreatedUtcDateTime: timestamp
    ExpiresUtcDateTime: timestamp
    IsDeleted: Boolean
    MaxVerificationAttemps: smallint
    ModifiedUtcDateTime: timestamp
    Status: smallint
    Uid: uuid
    UserUid: uuid
    VerificationAttemps: smallint
    VerifiedUtcDateTime: timestamp
}

"order by stddev() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_stddev_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by stddev_pop() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_stddev_pop_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by stddev_samp() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_stddev_samp_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by sum() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_sum_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by var_pop() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_var_pop_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by var_samp() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_var_samp_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by variance() on columns of table \"dbo.UserPhoneVerifications\""
input dbo_UserPhoneVerifications_variance_order_by {
    MaxVerificationAttemps: order_by
    Status: order_by
    VerificationAttemps: order_by
}

"order by aggregate values of table \"dbo.UserRoles\""
input dbo_UserRoles_aggregate_order_by {
    avg: dbo_UserRoles_avg_order_by
    count: order_by
    max: dbo_UserRoles_max_order_by
    min: dbo_UserRoles_min_order_by
    stddev: dbo_UserRoles_stddev_order_by
    stddev_pop: dbo_UserRoles_stddev_pop_order_by
    stddev_samp: dbo_UserRoles_stddev_samp_order_by
    sum: dbo_UserRoles_sum_order_by
    var_pop: dbo_UserRoles_var_pop_order_by
    var_samp: dbo_UserRoles_var_samp_order_by
    variance: dbo_UserRoles_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UserRoles\""
input dbo_UserRoles_arr_rel_insert_input {
    data: [dbo_UserRoles_insert_input!]!
}

"order by avg() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_avg_order_by {
    RoleId: order_by
}

"Boolean expression to filter rows from the table \"dbo.UserRoles\". All fields are combined with a logical 'AND'."
input dbo_UserRoles_bool_exp {
    CreatedUtcDateTime: timestamp_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Role: dbo_Roles_bool_exp
    RoleId: smallint_comparison_exp
    User: dbo_Users_bool_exp
    UserUid: uuid_comparison_exp
    _and: [dbo_UserRoles_bool_exp]
    _not: dbo_UserRoles_bool_exp
    _or: [dbo_UserRoles_bool_exp]
}

"input type for incrementing integer column in table \"dbo.UserRoles\""
input dbo_UserRoles_inc_input {
    RoleId: smallint
}

"input type for inserting data into table \"dbo.UserRoles\""
input dbo_UserRoles_insert_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Role: dbo_Roles_obj_rel_insert_input
    RoleId: smallint
    User: dbo_Users_obj_rel_insert_input
    UserUid: uuid
}

"order by max() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_max_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    RoleId: order_by
    UserUid: order_by
}

"order by min() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_min_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    RoleId: order_by
    UserUid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserRoles\""
input dbo_UserRoles_obj_rel_insert_input {
    data: dbo_UserRoles_insert_input!
}

"ordering options when selecting data from \"dbo.UserRoles\""
input dbo_UserRoles_order_by {
    CreatedUtcDateTime: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Role: dbo_Roles_order_by
    RoleId: order_by
    User: dbo_Users_order_by
    UserUid: order_by
}

"primary key columns input for table: \"dbo.UserRoles\""
input dbo_UserRoles_pk_columns_input {
    RoleId: smallint!
    UserUid: uuid!
}

"input type for updating data in table \"dbo.UserRoles\""
input dbo_UserRoles_set_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RoleId: smallint
    UserUid: uuid
}

"order by stddev() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_stddev_order_by {
    RoleId: order_by
}

"order by stddev_pop() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_stddev_pop_order_by {
    RoleId: order_by
}

"order by stddev_samp() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_stddev_samp_order_by {
    RoleId: order_by
}

"order by sum() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_sum_order_by {
    RoleId: order_by
}

"order by var_pop() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_var_pop_order_by {
    RoleId: order_by
}

"order by var_samp() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_var_samp_order_by {
    RoleId: order_by
}

"order by variance() on columns of table \"dbo.UserRoles\""
input dbo_UserRoles_variance_order_by {
    RoleId: order_by
}

"order by aggregate values of table \"dbo.UserTransactions\""
input dbo_UserTransactions_aggregate_order_by {
    avg: dbo_UserTransactions_avg_order_by
    count: order_by
    max: dbo_UserTransactions_max_order_by
    min: dbo_UserTransactions_min_order_by
    stddev: dbo_UserTransactions_stddev_order_by
    stddev_pop: dbo_UserTransactions_stddev_pop_order_by
    stddev_samp: dbo_UserTransactions_stddev_samp_order_by
    sum: dbo_UserTransactions_sum_order_by
    var_pop: dbo_UserTransactions_var_pop_order_by
    var_samp: dbo_UserTransactions_var_samp_order_by
    variance: dbo_UserTransactions_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.UserTransactions\""
input dbo_UserTransactions_arr_rel_insert_input {
    data: [dbo_UserTransactions_insert_input!]!
}

"order by avg() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_avg_order_by {
    Amount: order_by
}

"Boolean expression to filter rows from the table \"dbo.UserTransactions\". All fields are combined with a logical 'AND'."
input dbo_UserTransactions_bool_exp {
    Account: dbo_Accounts_bool_exp
    AccountUid: uuid_comparison_exp
    Amount: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Description: String_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    MoneyOperationType: dbo_MoneyOperationTypes_bool_exp
    OperationTypeUid: uuid_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_UserTransactions_bool_exp]
    _not: dbo_UserTransactions_bool_exp
    _or: [dbo_UserTransactions_bool_exp]
}

"input type for incrementing integer column in table \"dbo.UserTransactions\""
input dbo_UserTransactions_inc_input {
    Amount: Int
}

"input type for inserting data into table \"dbo.UserTransactions\""
input dbo_UserTransactions_insert_input {
    Account: dbo_Accounts_obj_rel_insert_input
    AccountUid: uuid
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    MoneyOperationType: dbo_MoneyOperationTypes_obj_rel_insert_input
    OperationTypeUid: uuid
    Uid: uuid
}

"order by max() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_max_order_by {
    AccountUid: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    OperationTypeUid: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_min_order_by {
    AccountUid: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    OperationTypeUid: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.UserTransactions\""
input dbo_UserTransactions_obj_rel_insert_input {
    data: dbo_UserTransactions_insert_input!
}

"ordering options when selecting data from \"dbo.UserTransactions\""
input dbo_UserTransactions_order_by {
    Account: dbo_Accounts_order_by
    AccountUid: order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    MoneyOperationType: dbo_MoneyOperationTypes_order_by
    OperationTypeUid: order_by
    Uid: order_by
}

"primary key columns input for table: \"dbo.UserTransactions\""
input dbo_UserTransactions_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.UserTransactions\""
input dbo_UserTransactions_set_input {
    AccountUid: uuid
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    OperationTypeUid: uuid
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_stddev_order_by {
    Amount: order_by
}

"order by stddev_pop() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_stddev_pop_order_by {
    Amount: order_by
}

"order by stddev_samp() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_stddev_samp_order_by {
    Amount: order_by
}

"order by sum() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_sum_order_by {
    Amount: order_by
}

"order by var_pop() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_var_pop_order_by {
    Amount: order_by
}

"order by var_samp() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_var_samp_order_by {
    Amount: order_by
}

"order by variance() on columns of table \"dbo.UserTransactions\""
input dbo_UserTransactions_variance_order_by {
    Amount: order_by
}

"order by aggregate values of table \"dbo.Users\""
input dbo_Users_aggregate_order_by {
    avg: dbo_Users_avg_order_by
    count: order_by
    max: dbo_Users_max_order_by
    min: dbo_Users_min_order_by
    stddev: dbo_Users_stddev_order_by
    stddev_pop: dbo_Users_stddev_pop_order_by
    stddev_samp: dbo_Users_stddev_samp_order_by
    sum: dbo_Users_sum_order_by
    var_pop: dbo_Users_var_pop_order_by
    var_samp: dbo_Users_var_samp_order_by
    variance: dbo_Users_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.Users\""
input dbo_Users_arr_rel_insert_input {
    data: [dbo_Users_insert_input!]!
    on_conflict: dbo_Users_on_conflict
}

"order by avg() on columns of table \"dbo.Users\""
input dbo_Users_avg_order_by {
    Status: order_by
}

"Boolean expression to filter rows from the table \"dbo.Users\". All fields are combined with a logical 'AND'."
input dbo_Users_bool_exp {
    Accounts: dbo_Accounts_bool_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    FirebaseTokens: dbo_FirebaseTokens_bool_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    Operations: dbo_Operations_bool_exp
    RefCode: String_comparison_exp
    ReferallDeviceGuids: dbo_ReferallDeviceGuid_bool_exp
    Registrations: dbo_Registrations_bool_exp
    ReservationCards: dbo_ReservationCards_bool_exp
    SecretHash: String_comparison_exp
    SecretSalt: String_comparison_exp
    Status: Int_comparison_exp
    Uid: uuid_comparison_exp
    UnistreamClientHistories: dbo_UnistreamClientHistory_bool_exp
    UserCards: dbo_UserCards_bool_exp
    UserDetails: dbo_UserDetails_bool_exp
    UserDetailsUid: uuid_comparison_exp
    UserDeviceGuids: dbo_UserDeviceGuids_bool_exp
    UserName: String_comparison_exp
    UserPhoneVerifications: dbo_UserPhoneVerifications_bool_exp
    UserRoles: dbo_UserRoles_bool_exp
    _and: [dbo_Users_bool_exp]
    _not: dbo_Users_bool_exp
    _or: [dbo_Users_bool_exp]
    operationsByWhomuid: dbo_Operations_bool_exp
    userDetailsByRefuserUid: dbo_UserDetails_bool_exp
}

"input type for incrementing integer column in table \"dbo.Users\""
input dbo_Users_inc_input {
    Status: Int
}

"input type for inserting data into table \"dbo.Users\""
input dbo_Users_insert_input {
    Accounts: dbo_Accounts_arr_rel_insert_input
    CreatedUtcDateTime: timestamp
    FirebaseTokens: dbo_FirebaseTokens_arr_rel_insert_input
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    Operations: dbo_Operations_arr_rel_insert_input
    RefCode: String
    ReferallDeviceGuids: dbo_ReferallDeviceGuid_arr_rel_insert_input
    Registrations: dbo_Registrations_arr_rel_insert_input
    ReservationCards: dbo_ReservationCards_arr_rel_insert_input
    SecretHash: String
    SecretSalt: String
    Status: Int
    Uid: uuid
    UnistreamClientHistories: dbo_UnistreamClientHistory_arr_rel_insert_input
    UserCards: dbo_UserCards_arr_rel_insert_input
    UserDetails: dbo_UserDetails_arr_rel_insert_input
    UserDetailsUid: uuid
    UserDeviceGuids: dbo_UserDeviceGuids_arr_rel_insert_input
    UserName: String
    UserPhoneVerifications: dbo_UserPhoneVerifications_arr_rel_insert_input
    UserRoles: dbo_UserRoles_arr_rel_insert_input
    operationsByWhomuid: dbo_Operations_arr_rel_insert_input
    userDetailsByRefuserUid: dbo_UserDetails_arr_rel_insert_input
}

"order by max() on columns of table \"dbo.Users\""
input dbo_Users_max_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    RefCode: order_by
    SecretHash: order_by
    SecretSalt: order_by
    Status: order_by
    Uid: order_by
    UserDetailsUid: order_by
    UserName: order_by
}

"order by min() on columns of table \"dbo.Users\""
input dbo_Users_min_order_by {
    CreatedUtcDateTime: order_by
    ModifiedUtcDateTime: order_by
    RefCode: order_by
    SecretHash: order_by
    SecretSalt: order_by
    Status: order_by
    Uid: order_by
    UserDetailsUid: order_by
    UserName: order_by
}

"input type for inserting object relation for remote table \"dbo.Users\""
input dbo_Users_obj_rel_insert_input {
    data: dbo_Users_insert_input!
    on_conflict: dbo_Users_on_conflict
}

"on conflict condition type for table \"dbo.Users\""
input dbo_Users_on_conflict {
    constraint: dbo_Users_constraint!
    update_columns: [dbo_Users_update_column!]!
    where: dbo_Users_bool_exp
}

"ordering options when selecting data from \"dbo.Users\""
input dbo_Users_order_by {
    Accounts_aggregate: dbo_Accounts_aggregate_order_by
    CreatedUtcDateTime: order_by
    FirebaseTokens_aggregate: dbo_FirebaseTokens_aggregate_order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    Operations_aggregate: dbo_Operations_aggregate_order_by
    RefCode: order_by
    ReferallDeviceGuids_aggregate: dbo_ReferallDeviceGuid_aggregate_order_by
    Registrations_aggregate: dbo_Registrations_aggregate_order_by
    ReservationCards_aggregate: dbo_ReservationCards_aggregate_order_by
    SecretHash: order_by
    SecretSalt: order_by
    Status: order_by
    Uid: order_by
    UnistreamClientHistories_aggregate: dbo_UnistreamClientHistory_aggregate_order_by
    UserCards_aggregate: dbo_UserCards_aggregate_order_by
    UserDetailsUid: order_by
    UserDetails_aggregate: dbo_UserDetails_aggregate_order_by
    UserDeviceGuids_aggregate: dbo_UserDeviceGuids_aggregate_order_by
    UserName: order_by
    UserPhoneVerifications_aggregate: dbo_UserPhoneVerifications_aggregate_order_by
    UserRoles_aggregate: dbo_UserRoles_aggregate_order_by
    operationsByWhomuid_aggregate: dbo_Operations_aggregate_order_by
    userDetailsByRefuserUid_aggregate: dbo_UserDetails_aggregate_order_by
}

"primary key columns input for table: \"dbo.Users\""
input dbo_Users_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.Users\""
input dbo_Users_set_input {
    CreatedUtcDateTime: timestamp
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RefCode: String
    SecretHash: String
    SecretSalt: String
    Status: Int
    Uid: uuid
    UserDetailsUid: uuid
    UserName: String
}

"order by stddev() on columns of table \"dbo.Users\""
input dbo_Users_stddev_order_by {
    Status: order_by
}

"order by stddev_pop() on columns of table \"dbo.Users\""
input dbo_Users_stddev_pop_order_by {
    Status: order_by
}

"order by stddev_samp() on columns of table \"dbo.Users\""
input dbo_Users_stddev_samp_order_by {
    Status: order_by
}

"order by sum() on columns of table \"dbo.Users\""
input dbo_Users_sum_order_by {
    Status: order_by
}

"order by var_pop() on columns of table \"dbo.Users\""
input dbo_Users_var_pop_order_by {
    Status: order_by
}

"order by var_samp() on columns of table \"dbo.Users\""
input dbo_Users_var_samp_order_by {
    Status: order_by
}

"order by variance() on columns of table \"dbo.Users\""
input dbo_Users_variance_order_by {
    Status: order_by
}

"order by aggregate values of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_aggregate_order_by {
    avg: dbo_ZamZamMoneyTransferTransactions_avg_order_by
    count: order_by
    max: dbo_ZamZamMoneyTransferTransactions_max_order_by
    min: dbo_ZamZamMoneyTransferTransactions_min_order_by
    stddev: dbo_ZamZamMoneyTransferTransactions_stddev_order_by
    stddev_pop: dbo_ZamZamMoneyTransferTransactions_stddev_pop_order_by
    stddev_samp: dbo_ZamZamMoneyTransferTransactions_stddev_samp_order_by
    sum: dbo_ZamZamMoneyTransferTransactions_sum_order_by
    var_pop: dbo_ZamZamMoneyTransferTransactions_var_pop_order_by
    var_samp: dbo_ZamZamMoneyTransferTransactions_var_samp_order_by
    variance: dbo_ZamZamMoneyTransferTransactions_variance_order_by
}

"input type for inserting array relation for remote table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_arr_rel_insert_input {
    data: [dbo_ZamZamMoneyTransferTransactions_insert_input!]!
}

"order by avg() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_avg_order_by {
    Amount: order_by
    Status: order_by
}

"Boolean expression to filter rows from the table \"dbo.ZamZamMoneyTransferTransactions\". All fields are combined with a logical 'AND'."
input dbo_ZamZamMoneyTransferTransactions_bool_exp {
    Account: dbo_Accounts_bool_exp
    Amount: Int_comparison_exp
    CreatedUtcDateTime: timestamp_comparison_exp
    Description: String_comparison_exp
    IsDeleted: Boolean_comparison_exp
    ModifiedUtcDateTime: timestamp_comparison_exp
    RecipientAccountUid: uuid_comparison_exp
    SenderAccountUid: uuid_comparison_exp
    Status: Int_comparison_exp
    Uid: uuid_comparison_exp
    _and: [dbo_ZamZamMoneyTransferTransactions_bool_exp]
    _not: dbo_ZamZamMoneyTransferTransactions_bool_exp
    _or: [dbo_ZamZamMoneyTransferTransactions_bool_exp]
    accountByRecipientaccountuid: dbo_Accounts_bool_exp
}

"input type for incrementing integer column in table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_inc_input {
    Amount: Int
    Status: Int
}

"input type for inserting data into table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_insert_input {
    Account: dbo_Accounts_obj_rel_insert_input
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
    accountByRecipientaccountuid: dbo_Accounts_obj_rel_insert_input
}

"order by max() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_max_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
}

"order by min() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_min_order_by {
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
}

"input type for inserting object relation for remote table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_obj_rel_insert_input {
    data: dbo_ZamZamMoneyTransferTransactions_insert_input!
}

"ordering options when selecting data from \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_order_by {
    Account: dbo_Accounts_order_by
    Amount: order_by
    CreatedUtcDateTime: order_by
    Description: order_by
    IsDeleted: order_by
    ModifiedUtcDateTime: order_by
    RecipientAccountUid: order_by
    SenderAccountUid: order_by
    Status: order_by
    Uid: order_by
    accountByRecipientaccountuid: dbo_Accounts_order_by
}

"primary key columns input for table: \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_pk_columns_input {
    Uid: uuid!
}

"input type for updating data in table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_set_input {
    Amount: Int
    CreatedUtcDateTime: timestamp
    Description: String
    IsDeleted: Boolean
    ModifiedUtcDateTime: timestamp
    RecipientAccountUid: uuid
    SenderAccountUid: uuid
    Status: Int
    Uid: uuid
}

"order by stddev() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_stddev_order_by {
    Amount: order_by
    Status: order_by
}

"order by stddev_pop() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_stddev_pop_order_by {
    Amount: order_by
    Status: order_by
}

"order by stddev_samp() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_stddev_samp_order_by {
    Amount: order_by
    Status: order_by
}

"order by sum() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_sum_order_by {
    Amount: order_by
    Status: order_by
}

"order by var_pop() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_var_pop_order_by {
    Amount: order_by
    Status: order_by
}

"order by var_samp() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_var_samp_order_by {
    Amount: order_by
    Status: order_by
}

"order by variance() on columns of table \"dbo.ZamZamMoneyTransferTransactions\""
input dbo_ZamZamMoneyTransferTransactions_variance_order_by {
    Amount: order_by
    Status: order_by
}

"order by aggregate values of table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_aggregate_order_by {
    count: order_by
    max: dbo___MigrationHistory_max_order_by
    min: dbo___MigrationHistory_min_order_by
}

"input type for inserting array relation for remote table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_arr_rel_insert_input {
    data: [dbo___MigrationHistory_insert_input!]!
}

"Boolean expression to filter rows from the table \"dbo.__MigrationHistory\". All fields are combined with a logical 'AND'."
input dbo___MigrationHistory_bool_exp {
    ContextKey: String_comparison_exp
    MigrationId: String_comparison_exp
    Model: bytea_comparison_exp
    ProductVersion: String_comparison_exp
    _and: [dbo___MigrationHistory_bool_exp]
    _not: dbo___MigrationHistory_bool_exp
    _or: [dbo___MigrationHistory_bool_exp]
}

"input type for inserting data into table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_insert_input {
    ContextKey: String
    MigrationId: String
    Model: bytea
    ProductVersion: String
}

"order by max() on columns of table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_max_order_by {
    ContextKey: order_by
    MigrationId: order_by
    ProductVersion: order_by
}

"order by min() on columns of table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_min_order_by {
    ContextKey: order_by
    MigrationId: order_by
    ProductVersion: order_by
}

"input type for inserting object relation for remote table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_obj_rel_insert_input {
    data: dbo___MigrationHistory_insert_input!
}

"ordering options when selecting data from \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_order_by {
    ContextKey: order_by
    MigrationId: order_by
    Model: order_by
    ProductVersion: order_by
}

"primary key columns input for table: \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_pk_columns_input {
    ContextKey: String!
    MigrationId: String!
}

"input type for updating data in table \"dbo.__MigrationHistory\""
input dbo___MigrationHistory_set_input {
    ContextKey: String
    MigrationId: String
    Model: bytea
    ProductVersion: String
}

"expression to compare columns of type numeric. All fields are combined with logical 'AND'."
input numeric_comparison_exp {
    _eq: numeric
    _gt: numeric
    _gte: numeric
    _in: [numeric!]
    _is_null: Boolean
    _lt: numeric
    _lte: numeric
    _neq: numeric
    _nin: [numeric!]
}

"expression to compare columns of type smallint. All fields are combined with logical 'AND'."
input smallint_comparison_exp {
    _eq: smallint
    _gt: smallint
    _gte: smallint
    _in: [smallint!]
    _is_null: Boolean
    _lt: smallint
    _lte: smallint
    _neq: smallint
    _nin: [smallint!]
}

"expression to compare columns of type timestamp. All fields are combined with logical 'AND'."
input timestamp_comparison_exp {
    _eq: timestamp
    _gt: timestamp
    _gte: timestamp
    _in: [timestamp!]
    _is_null: Boolean
    _lt: timestamp
    _lte: timestamp
    _neq: timestamp
    _nin: [timestamp!]
}

"expression to compare columns of type uuid. All fields are combined with logical 'AND'."
input uuid_comparison_exp {
    _eq: uuid
    _gt: uuid
    _gte: uuid
    _in: [uuid!]
    _is_null: Boolean
    _lt: uuid
    _lte: uuid
    _neq: uuid
    _nin: [uuid!]
}


scalar bigint

scalar bytea

scalar numeric

scalar smallint

scalar timestamp

scalar uuid